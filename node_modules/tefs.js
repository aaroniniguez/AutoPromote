//create mysql wrapper class
const mysql = require("mysql");
class Database {
	constructor(){
		this.connection = mysql.createConnection({
			host: "localhost",
			user: "root",
			database: "stock"
		});
	}
	query(sql, args){
		return new Promise((resolve, reject) => {
			this.connection.query(sql, args, (err, rows)=> {
				if(err) return reject(err);
				resolve(rows);
			});
		});
	}
	close(){
		return new Promise((resolve, reject) => {
			this.connection.end( err => {
				if(err) return reject(err)
				resolve();
			});
		});
	}
}
module.exports = {
	getWinStreak(todayPNL){
		const fs = require("fs");
		var contents = fs.readFileSync("winStreak.json", "utf8");
		return contents;
	},
	async getTefs(username, password) {
		const puppeteer = require('puppeteer');
		const tefs = 'https://mts.tefsec.com/TradenetLogin.aspx';
		database = new Database()
		const browser = await puppeteer.launch({headless: false});
		const page = await browser.newPage();
		page.setDefaultTimeout(60000);
		await page.goto(tefs, { waitUntil: 'networkidle2' });

		/* Run javascript inside of the page */
		await page.evaluate((username, password) => {
			document.querySelector('input[name="TitansID"]').value = username;
			document.querySelector('input[name="Password"]').value = password;
			document.querySelector('input[name="Singin"]').click();
			}, username, password);
		//successfully logged in
		await page.waitForXPath("//td[contains(text(),'Blotter')]");
		var options = 
		{
			path: "dailyPNL.png",
			fullPage: false,
			clip:
			{
				x: 0,
				y: 400,
				width:1100,
				height:200
			}
		};
		let [pnl, totalEquity] = await page.evaluate(() => {
			var countRows = document.querySelectorAll("table.boxContentText")[6].querySelectorAll("td:last-child").length
			var pnl = document.querySelectorAll("table.boxContentText")[6].querySelectorAll("td:last-child")[countRows-1].textContent
			var totalEquity = document.querySelectorAll("table.boxContentText")[4].querySelectorAll("td:last-child")[5].textContent
			return [pnl, totalEquity];
		});
		pnl = "32"
		if(pnl == " Net P&L "){
			await browser.close();
			return;
		}
		else{
			//clean up pnl
			pnl = pnl.replace(/\"/g, "");
			pnl = pnl.replace(/ /g, "");
			var sign = (pnl.includes("(")) ? "-" : "+";
			//negative val
			pnl = pnl.replace(/\(/g, "");
			pnl = pnl.replace(/\)/g, "");
			
			pnl = pnl.replace(/,/g, "");

			pnl = parseFloat(pnl);
			if(sign == "-")
				pnl = pnl * -1;
			var pnlMessages = [];
			//implemenet a callback here
			var message;
			database.query("select * from stockMessages order by pnl desc").then(rows => {
				var usedPnl;
				rows.forEach(element => {
					if(pnl > element.pnl){
						if(usedPnl != null && usedPnl != element.pnl)
							return
						usedPnl = element.pnl;
						pnlMessages.push(element.message);
						//do query for all messages that have this pnl
					}
				});
				message = pnlMessages[Math.floor(Math.random()*pnlMessages.length)];
				return database.close();
			}, err => {
				return database.close().then(() => {throw err;});
			}).catch( err => {
				console.log(err);
			});
		}
		await page.screenshot(options);
		await browser.close();
		return message +" :"+ sign + "$" + pnl;
	}
}