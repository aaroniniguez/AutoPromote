module.exports = {
	tefs: async function getTefs(username, password) {
		const puppeteer = require('puppeteer');
		const tefs = 'https://mts.tefsec.com/TradenetLogin.aspx';
		const mysql = require("mysql");
		var con = mysql.createConnection({
			host: "localhost",
			user: "root",
			database: "stock"
		});
		con.connect(function(err){
			if(err) throw err;
			console.log("Connected to db");
		});
		const browser = await puppeteer.launch({headless: false});
		const page = await browser.newPage();
		await page.goto(tefs, { waitUntil: 'networkidle2' });

		/* Run javascript inside of the page */
		await page.evaluate((username, password) => {
			document.querySelector('input[name="TitansID"]').value = username;
			document.querySelector('input[name="Password"]').value = password;
			document.querySelector('input[name="Singin"]').click();
			}, username, password);
		//successfully logged in
		await page.waitForXPath("//td[contains(text(),'Blotter')]");
		var options = 
		{
			path: "dailyPNL.png",
			fullPage: false,
			clip:
			{
				x: 0,
				y: 400,
				width:1100,
				height:200
			}
		};
		let [pnl, totalEquity] = await page.evaluate(() => {
			var countRows = document.querySelectorAll("table.boxContentText")[6].querySelectorAll("td:last-child").length
			var pnl = document.querySelectorAll("table.boxContentText")[6].querySelectorAll("td:last-child")[countRows-1].textContent
			var totalEquity = document.querySelectorAll("table.boxContentText")[4].querySelectorAll("td:last-child")[5].textContent
			return [pnl, totalEquity];
		});
		if(pnl == " Net P&L "){
			await browser.close();
			return;
		}
		else{
			//clean up pnl
			pnl = pnl.replace(/\"/g, "");
			pnl = pnl.replace(/ /g, "");
			var sign = (pnl.includes("(")) ? "-" : "+";
			//negative val
			pnl = pnl.replace(/\(/g, "");
			pnl = pnl.replace(/\)/g, "");
			
			pnl = pnl.replace(/,/g, "");

			pnl = parseFloat(pnl);
			if(sign == "-")
				pnl = pnl * -1;
			pnl = 1;
			var pnlMessages = [];
			//implemenet a callback here
			var message;
			con.query("select * from stockMessages order by pnl desc", function(err, result){
				if(err) throw err;
				var usedPnl;
				console.log(pnl);
				result.forEach(element => {
					if(pnl > element.pnl){
						if(usedPnl != null && usedPnl != element.pnl)
							return
						console.log(element.pnl);
						usedPnl = element.pnl;
						pnlMessages.push(element.message);
						//do query for all messages that have this pnl
					}
				});
				console.log(pnlMessages);
				message = pnlMessages[Math.floor(Math.random()*pnlMessages.length)];
				console.log(message);
			});
		}
		await page.screenshot(options);
		await browser.close();
		return message +" :"+ sign + "$" + pnl;
	}
}