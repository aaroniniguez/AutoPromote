
====Tue Mar 31 2020 14:25:39 ====
Server is listening on port undefined

====Tue Mar 31 2020 14:27:36 ====
Server is listening on port 8090

====Tue Mar 31 2020 20:47:50 ====
Server is listening on port 8090

====Tue Mar 31 2020 20:48:57 ====
GET /test.php

====Tue Mar 31 2020 20:48:57 ====
RESPONSE {"live":"success"}

====Tue Mar 31 2020 20:48:58 ====
GET /favicon.ico

====Tue Mar 31 2020 20:52:40 ====
Server is listening on port 8090

====Tue Mar 31 2020 20:53:19 ====
Server is listening on port 8090

====Tue Mar 31 2020 20:53:19 ====
undefined

====Tue Mar 31 2020 20:54:05 ====
undefined

====Tue Mar 31 2020 20:54:31 ====
undefined

====Tue Mar 31 2020 20:55:06 ====
undefined

====Tue Mar 31 2020 20:55:15 ====
here

====Tue Mar 31 2020 20:55:15 ====
undefined

====Tue Mar 31 2020 20:55:29 ====
here

====Tue Mar 31 2020 20:55:29 ====
undefined

====Tue Mar 31 2020 20:55:39 ====
here

====Tue Mar 31 2020 20:55:39 ====
undefined

====Tue Mar 31 2020 20:56:05 ====
here

====Tue Mar 31 2020 20:56:05 ====
undefined

====Tue Mar 31 2020 21:00:09 ====
<ref *2> Socket {
  connecting: false,
  _hadError: false,
  _parent: null,
  _host: null,
  _readableState: ReadableState {
    objectMode: false,
    highWaterMark: 16384,
    buffer: BufferList { head: null, tail: null, length: 0 },
    length: 0,
    pipes: [],
    flowing: true,
    ended: false,
    endEmitted: false,
    reading: true,
    sync: false,
    needReadable: true,
    emittedReadable: false,
    readableListening: false,
    resumeScheduled: true,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    destroyed: false,
    defaultEncoding: 'utf8',
    awaitDrainWriters: null,
    multiAwaitDrain: false,
    readingMore: false,
    decoder: null,
    encoding: null,
    [Symbol(kPaused)]: false
  },
  readable: true,
  _events: [Object: null prototype] {
    end: [ [Function: onReadableStreamEnd], [Function: bound socketOnEnd] ],
    timeout: [Function: socketOnTimeout],
    data: [Function: bound socketOnData],
    error: [Function: socketOnError],
    close: [Function: bound socketOnClose],
    drain: [Function: bound socketOnDrain],
    resume: [Function: onSocketResume],
    pause: [Function: onSocketPause]
  },
  _eventsCount: 8,
  _maxListeners: undefined,
  _writableState: WritableState {
    objectMode: false,
    highWaterMark: 16384,
    finalCalled: false,
    needDrain: false,
    ending: false,
    ended: false,
    finished: false,
    destroyed: false,
    decodeStrings: false,
    defaultEncoding: 'utf8',
    length: 0,
    writing: false,
    corked: 0,
    sync: true,
    bufferProcessing: false,
    onwrite: [Function: bound onwrite],
    writecb: null,
    writelen: 0,
    afterWriteTickInfo: null,
    bufferedRequest: null,
    lastBufferedRequest: null,
    pendingcb: 0,
    prefinished: false,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    errored: false,
    bufferedRequestCount: 0,
    corkedRequestsFree: {
      next: null,
      entry: null,
      finish: [Function: bound onCorkedFinish]
    }
  },
  writable: true,
  allowHalfOpen: true,
  _sockname: null,
  _pendingData: null,
  _pendingEncoding: '',
  server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 1,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 7
  },
  _server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 1,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 7
  },
  parser: HTTPParser {
    '0': [Function: parserOnHeaders],
    '1': [Function: parserOnHeadersComplete],
    '2': [Function: parserOnBody],
    '3': [Function: parserOnMessageComplete],
    '4': [Function: bound onParserExecute],
    _headers: [],
    _url: '',
    socket: [Circular *2],
    incoming: null,
    outgoing: null,
    maxHeaderPairs: 2000,
    _consumed: true,
    onIncoming: [Function: bound parserOnIncoming],
    parsingHeadersStart: 1585713609545
  },
  on: [Function: socketListenerWrap],
  addListener: [Function: socketListenerWrap],
  prependListener: [Function: socketListenerWrap],
  _paused: false,
  [Symbol(asyncId)]: 12,
  [Symbol(kHandle)]: TCP {
    reading: true,
    onconnection: null,
    _consumed: true,
    [Symbol(owner)]: [Circular *2]
  },
  [Symbol(kSetNoDelay)]: false,
  [Symbol(lastWriteQueueSize)]: 0,
  [Symbol(timeout)]: null,
  [Symbol(kBuffer)]: null,
  [Symbol(kBufferCb)]: null,
  [Symbol(kBufferGen)]: null,
  [Symbol(kCapture)]: false,
  [Symbol(kBytesRead)]: 0,
  [Symbol(kBytesWritten)]: 0
}

====Tue Mar 31 2020 21:00:09 ====
<ref *2> Socket {
  connecting: false,
  _hadError: false,
  _parent: null,
  _host: null,
  _readableState: ReadableState {
    objectMode: false,
    highWaterMark: 16384,
    buffer: BufferList { head: null, tail: null, length: 0 },
    length: 0,
    pipes: [],
    flowing: true,
    ended: false,
    endEmitted: false,
    reading: true,
    sync: false,
    needReadable: true,
    emittedReadable: false,
    readableListening: false,
    resumeScheduled: true,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    destroyed: false,
    defaultEncoding: 'utf8',
    awaitDrainWriters: null,
    multiAwaitDrain: false,
    readingMore: false,
    decoder: null,
    encoding: null,
    [Symbol(kPaused)]: false
  },
  readable: true,
  _events: [Object: null prototype] {
    end: [ [Function: onReadableStreamEnd], [Function: bound socketOnEnd] ],
    timeout: [Function: socketOnTimeout],
    data: [Function: bound socketOnData],
    error: [Function: socketOnError],
    close: [Function: bound socketOnClose],
    drain: [Function: bound socketOnDrain],
    resume: [Function: onSocketResume],
    pause: [Function: onSocketPause]
  },
  _eventsCount: 8,
  _maxListeners: undefined,
  _writableState: WritableState {
    objectMode: false,
    highWaterMark: 16384,
    finalCalled: false,
    needDrain: false,
    ending: false,
    ended: false,
    finished: false,
    destroyed: false,
    decodeStrings: false,
    defaultEncoding: 'utf8',
    length: 0,
    writing: false,
    corked: 0,
    sync: true,
    bufferProcessing: false,
    onwrite: [Function: bound onwrite],
    writecb: null,
    writelen: 0,
    afterWriteTickInfo: null,
    bufferedRequest: null,
    lastBufferedRequest: null,
    pendingcb: 0,
    prefinished: false,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    errored: false,
    bufferedRequestCount: 0,
    corkedRequestsFree: {
      next: null,
      entry: null,
      finish: [Function: bound onCorkedFinish]
    }
  },
  writable: true,
  allowHalfOpen: true,
  _sockname: null,
  _pendingData: null,
  _pendingEncoding: '',
  server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 2,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 7
  },
  _server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 2,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 7
  },
  parser: HTTPParser {
    '0': [Function: parserOnHeaders],
    '1': [Function: parserOnHeadersComplete],
    '2': [Function: parserOnBody],
    '3': [Function: parserOnMessageComplete],
    '4': [Function: bound onParserExecute],
    _headers: [],
    _url: '',
    socket: [Circular *2],
    incoming: null,
    outgoing: null,
    maxHeaderPairs: 2000,
    _consumed: true,
    onIncoming: [Function: bound parserOnIncoming],
    parsingHeadersStart: 1585713609545
  },
  on: [Function: socketListenerWrap],
  addListener: [Function: socketListenerWrap],
  prependListener: [Function: socketListenerWrap],
  _paused: false,
  [Symbol(asyncId)]: 17,
  [Symbol(kHandle)]: TCP {
    reading: true,
    onconnection: null,
    _consumed: true,
    [Symbol(owner)]: [Circular *2]
  },
  [Symbol(kSetNoDelay)]: false,
  [Symbol(lastWriteQueueSize)]: 0,
  [Symbol(timeout)]: null,
  [Symbol(kBuffer)]: null,
  [Symbol(kBufferCb)]: null,
  [Symbol(kBufferGen)]: null,
  [Symbol(kCapture)]: false,
  [Symbol(kBytesRead)]: 0,
  [Symbol(kBytesWritten)]: 0
}

====Tue Mar 31 2020 21:00:09 ====
GET /test.php

====Tue Mar 31 2020 21:00:09 ====
RESPONSE {"live":"success"}

====Tue Mar 31 2020 21:29:58 ====
undefined

====Tue Mar 31 2020 21:29:58 ====
<ref *2> Socket {
  connecting: false,
  _hadError: false,
  _parent: null,
  _host: null,
  _readableState: ReadableState {
    objectMode: false,
    highWaterMark: 16384,
    buffer: BufferList { head: null, tail: null, length: 0 },
    length: 0,
    pipes: [],
    flowing: true,
    ended: false,
    endEmitted: false,
    reading: true,
    sync: false,
    needReadable: true,
    emittedReadable: false,
    readableListening: false,
    resumeScheduled: true,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    destroyed: false,
    defaultEncoding: 'utf8',
    awaitDrainWriters: null,
    multiAwaitDrain: false,
    readingMore: false,
    decoder: null,
    encoding: null,
    [Symbol(kPaused)]: false
  },
  readable: true,
  _events: [Object: null prototype] {
    end: [ [Function: onReadableStreamEnd], [Function: bound socketOnEnd] ],
    timeout: [Function: socketOnTimeout],
    data: [Function: bound socketOnData],
    error: [Function: socketOnError],
    close: [Function: bound socketOnClose],
    drain: [Function: bound socketOnDrain],
    resume: [Function: onSocketResume],
    pause: [Function: onSocketPause]
  },
  _eventsCount: 8,
  _maxListeners: undefined,
  _writableState: WritableState {
    objectMode: false,
    highWaterMark: 16384,
    finalCalled: false,
    needDrain: false,
    ending: false,
    ended: false,
    finished: false,
    destroyed: false,
    decodeStrings: false,
    defaultEncoding: 'utf8',
    length: 0,
    writing: false,
    corked: 0,
    sync: true,
    bufferProcessing: false,
    onwrite: [Function: bound onwrite],
    writecb: null,
    writelen: 0,
    afterWriteTickInfo: null,
    bufferedRequest: null,
    lastBufferedRequest: null,
    pendingcb: 0,
    prefinished: false,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    errored: false,
    bufferedRequestCount: 0,
    corkedRequestsFree: {
      next: null,
      entry: null,
      finish: [Function: bound onCorkedFinish]
    }
  },
  writable: true,
  allowHalfOpen: true,
  _sockname: null,
  _pendingData: null,
  _pendingEncoding: '',
  server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 1,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 5
  },
  _server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 1,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 5
  },
  parser: HTTPParser {
    '0': [Function: parserOnHeaders],
    '1': [Function: parserOnHeadersComplete],
    '2': [Function: parserOnBody],
    '3': [Function: parserOnMessageComplete],
    '4': [Function: bound onParserExecute],
    _headers: [],
    _url: '',
    socket: [Circular *2],
    incoming: null,
    outgoing: null,
    maxHeaderPairs: 2000,
    _consumed: true,
    onIncoming: [Function: bound parserOnIncoming],
    parsingHeadersStart: 1585715398768
  },
  on: [Function: socketListenerWrap],
  addListener: [Function: socketListenerWrap],
  prependListener: [Function: socketListenerWrap],
  _paused: false,
  [Symbol(asyncId)]: 9,
  [Symbol(kHandle)]: TCP {
    reading: true,
    onconnection: null,
    _consumed: true,
    [Symbol(owner)]: [Circular *2]
  },
  [Symbol(kSetNoDelay)]: false,
  [Symbol(lastWriteQueueSize)]: 0,
  [Symbol(timeout)]: null,
  [Symbol(kBuffer)]: null,
  [Symbol(kBufferCb)]: null,
  [Symbol(kBufferGen)]: null,
  [Symbol(kCapture)]: false,
  [Symbol(kBytesRead)]: 0,
  [Symbol(kBytesWritten)]: 0
}

====Tue Mar 31 2020 21:29:58 ====
<ref *2> Socket {
  connecting: false,
  _hadError: false,
  _parent: null,
  _host: null,
  _readableState: ReadableState {
    objectMode: false,
    highWaterMark: 16384,
    buffer: BufferList { head: null, tail: null, length: 0 },
    length: 0,
    pipes: [],
    flowing: true,
    ended: false,
    endEmitted: false,
    reading: true,
    sync: false,
    needReadable: true,
    emittedReadable: false,
    readableListening: false,
    resumeScheduled: true,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    destroyed: false,
    defaultEncoding: 'utf8',
    awaitDrainWriters: null,
    multiAwaitDrain: false,
    readingMore: false,
    decoder: null,
    encoding: null,
    [Symbol(kPaused)]: false
  },
  readable: true,
  _events: [Object: null prototype] {
    end: [ [Function: onReadableStreamEnd], [Function: bound socketOnEnd] ],
    timeout: [Function: socketOnTimeout],
    data: [Function: bound socketOnData],
    error: [Function: socketOnError],
    close: [Function: bound socketOnClose],
    drain: [Function: bound socketOnDrain],
    resume: [Function: onSocketResume],
    pause: [Function: onSocketPause]
  },
  _eventsCount: 8,
  _maxListeners: undefined,
  _writableState: WritableState {
    objectMode: false,
    highWaterMark: 16384,
    finalCalled: false,
    needDrain: false,
    ending: false,
    ended: false,
    finished: false,
    destroyed: false,
    decodeStrings: false,
    defaultEncoding: 'utf8',
    length: 0,
    writing: false,
    corked: 0,
    sync: true,
    bufferProcessing: false,
    onwrite: [Function: bound onwrite],
    writecb: null,
    writelen: 0,
    afterWriteTickInfo: null,
    bufferedRequest: null,
    lastBufferedRequest: null,
    pendingcb: 0,
    prefinished: false,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    errored: false,
    bufferedRequestCount: 0,
    corkedRequestsFree: {
      next: null,
      entry: null,
      finish: [Function: bound onCorkedFinish]
    }
  },
  writable: true,
  allowHalfOpen: true,
  _sockname: null,
  _pendingData: null,
  _pendingEncoding: '',
  server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 2,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 5
  },
  _server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 2,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 5
  },
  parser: HTTPParser {
    '0': [Function: parserOnHeaders],
    '1': [Function: parserOnHeadersComplete],
    '2': [Function: parserOnBody],
    '3': [Function: parserOnMessageComplete],
    '4': [Function: bound onParserExecute],
    _headers: [],
    _url: '',
    socket: [Circular *2],
    incoming: null,
    outgoing: null,
    maxHeaderPairs: 2000,
    _consumed: true,
    onIncoming: [Function: bound parserOnIncoming],
    parsingHeadersStart: 1585715398768
  },
  on: [Function: socketListenerWrap],
  addListener: [Function: socketListenerWrap],
  prependListener: [Function: socketListenerWrap],
  _paused: false,
  [Symbol(asyncId)]: 14,
  [Symbol(kHandle)]: TCP {
    reading: true,
    onconnection: null,
    _consumed: true,
    [Symbol(owner)]: [Circular *2]
  },
  [Symbol(kSetNoDelay)]: false,
  [Symbol(lastWriteQueueSize)]: 0,
  [Symbol(timeout)]: null,
  [Symbol(kBuffer)]: null,
  [Symbol(kBufferCb)]: null,
  [Symbol(kBufferGen)]: null,
  [Symbol(kCapture)]: false,
  [Symbol(kBytesRead)]: 0,
  [Symbol(kBytesWritten)]: 0
}

====Tue Mar 31 2020 21:29:58 ====
GET /test.php

====Tue Mar 31 2020 21:29:58 ====
RESPONSE {"live":"success"}

====Tue Mar 31 2020 21:30:01 ====
GET /accounts

====Tue Mar 31 2020 21:30:01 ====
RESPONSE heres an array

====Tue Mar 31 2020 21:31:20 ====
<ref *2> Socket {
  connecting: false,
  _hadError: false,
  _parent: null,
  _host: null,
  _readableState: ReadableState {
    objectMode: false,
    highWaterMark: 16384,
    buffer: BufferList { head: null, tail: null, length: 0 },
    length: 0,
    pipes: [],
    flowing: true,
    ended: false,
    endEmitted: false,
    reading: true,
    sync: false,
    needReadable: true,
    emittedReadable: false,
    readableListening: false,
    resumeScheduled: true,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    destroyed: false,
    defaultEncoding: 'utf8',
    awaitDrainWriters: null,
    multiAwaitDrain: false,
    readingMore: false,
    decoder: null,
    encoding: null,
    [Symbol(kPaused)]: false
  },
  readable: true,
  _events: [Object: null prototype] {
    end: [ [Function: onReadableStreamEnd], [Function: bound socketOnEnd] ],
    timeout: [Function: socketOnTimeout],
    data: [Function: bound socketOnData],
    error: [Function: socketOnError],
    close: [Function: bound socketOnClose],
    drain: [Function: bound socketOnDrain],
    resume: [Function: onSocketResume],
    pause: [Function: onSocketPause]
  },
  _eventsCount: 8,
  _maxListeners: undefined,
  _writableState: WritableState {
    objectMode: false,
    highWaterMark: 16384,
    finalCalled: false,
    needDrain: false,
    ending: false,
    ended: false,
    finished: false,
    destroyed: false,
    decodeStrings: false,
    defaultEncoding: 'utf8',
    length: 0,
    writing: false,
    corked: 0,
    sync: true,
    bufferProcessing: false,
    onwrite: [Function: bound onwrite],
    writecb: null,
    writelen: 0,
    afterWriteTickInfo: null,
    bufferedRequest: null,
    lastBufferedRequest: null,
    pendingcb: 0,
    prefinished: false,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    errored: false,
    bufferedRequestCount: 0,
    corkedRequestsFree: {
      next: null,
      entry: null,
      finish: [Function: bound onCorkedFinish]
    }
  },
  writable: true,
  allowHalfOpen: true,
  _sockname: null,
  _pendingData: null,
  _pendingEncoding: '',
  server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 1,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 5
  },
  _server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 1,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 5
  },
  parser: HTTPParser {
    '0': [Function: parserOnHeaders],
    '1': [Function: parserOnHeadersComplete],
    '2': [Function: parserOnBody],
    '3': [Function: parserOnMessageComplete],
    '4': [Function: bound onParserExecute],
    _headers: [],
    _url: '',
    socket: [Circular *2],
    incoming: null,
    outgoing: null,
    maxHeaderPairs: 2000,
    _consumed: true,
    onIncoming: [Function: bound parserOnIncoming],
    parsingHeadersStart: 1585715480928
  },
  on: [Function: socketListenerWrap],
  addListener: [Function: socketListenerWrap],
  prependListener: [Function: socketListenerWrap],
  _paused: false,
  [Symbol(asyncId)]: 44,
  [Symbol(kHandle)]: TCP {
    reading: true,
    onconnection: null,
    _consumed: true,
    [Symbol(owner)]: [Circular *2]
  },
  [Symbol(kSetNoDelay)]: false,
  [Symbol(lastWriteQueueSize)]: 0,
  [Symbol(timeout)]: null,
  [Symbol(kBuffer)]: null,
  [Symbol(kBufferCb)]: null,
  [Symbol(kBufferGen)]: null,
  [Symbol(kCapture)]: false,
  [Symbol(kBytesRead)]: 0,
  [Symbol(kBytesWritten)]: 0
}

====Tue Mar 31 2020 21:31:20 ====
<ref *2> Socket {
  connecting: false,
  _hadError: false,
  _parent: null,
  _host: null,
  _readableState: ReadableState {
    objectMode: false,
    highWaterMark: 16384,
    buffer: BufferList { head: null, tail: null, length: 0 },
    length: 0,
    pipes: [],
    flowing: true,
    ended: false,
    endEmitted: false,
    reading: true,
    sync: false,
    needReadable: true,
    emittedReadable: false,
    readableListening: false,
    resumeScheduled: true,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    destroyed: false,
    defaultEncoding: 'utf8',
    awaitDrainWriters: null,
    multiAwaitDrain: false,
    readingMore: false,
    decoder: null,
    encoding: null,
    [Symbol(kPaused)]: false
  },
  readable: true,
  _events: [Object: null prototype] {
    end: [ [Function: onReadableStreamEnd], [Function: bound socketOnEnd] ],
    timeout: [Function: socketOnTimeout],
    data: [Function: bound socketOnData],
    error: [Function: socketOnError],
    close: [Function: bound socketOnClose],
    drain: [Function: bound socketOnDrain],
    resume: [Function: onSocketResume],
    pause: [Function: onSocketPause]
  },
  _eventsCount: 8,
  _maxListeners: undefined,
  _writableState: WritableState {
    objectMode: false,
    highWaterMark: 16384,
    finalCalled: false,
    needDrain: false,
    ending: false,
    ended: false,
    finished: false,
    destroyed: false,
    decodeStrings: false,
    defaultEncoding: 'utf8',
    length: 0,
    writing: false,
    corked: 0,
    sync: true,
    bufferProcessing: false,
    onwrite: [Function: bound onwrite],
    writecb: null,
    writelen: 0,
    afterWriteTickInfo: null,
    bufferedRequest: null,
    lastBufferedRequest: null,
    pendingcb: 0,
    prefinished: false,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    errored: false,
    bufferedRequestCount: 0,
    corkedRequestsFree: {
      next: null,
      entry: null,
      finish: [Function: bound onCorkedFinish]
    }
  },
  writable: true,
  allowHalfOpen: true,
  _sockname: null,
  _pendingData: null,
  _pendingEncoding: '',
  server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 2,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 5
  },
  _server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 2,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 5
  },
  parser: HTTPParser {
    '0': [Function: parserOnHeaders],
    '1': [Function: parserOnHeadersComplete],
    '2': [Function: parserOnBody],
    '3': [Function: parserOnMessageComplete],
    '4': [Function: bound onParserExecute],
    _headers: [],
    _url: '',
    socket: [Circular *2],
    incoming: null,
    outgoing: null,
    maxHeaderPairs: 2000,
    _consumed: true,
    onIncoming: [Function: bound parserOnIncoming],
    parsingHeadersStart: 1585715480928
  },
  on: [Function: socketListenerWrap],
  addListener: [Function: socketListenerWrap],
  prependListener: [Function: socketListenerWrap],
  _paused: false,
  [Symbol(asyncId)]: 49,
  [Symbol(kHandle)]: TCP {
    reading: true,
    onconnection: null,
    _consumed: true,
    [Symbol(owner)]: [Circular *2]
  },
  [Symbol(kSetNoDelay)]: false,
  [Symbol(lastWriteQueueSize)]: 0,
  [Symbol(timeout)]: null,
  [Symbol(kBuffer)]: null,
  [Symbol(kBufferCb)]: null,
  [Symbol(kBufferGen)]: null,
  [Symbol(kCapture)]: false,
  [Symbol(kBytesRead)]: 0,
  [Symbol(kBytesWritten)]: 0
}

====Tue Mar 31 2020 21:31:20 ====
GET /accounts

====Tue Mar 31 2020 21:31:20 ====
RESPONSE heres an array

====Tue Mar 31 2020 21:31:21 ====
GET /accounts

====Tue Mar 31 2020 21:31:21 ====
RESPONSE heres an array

====Tue Mar 31 2020 21:31:26 ====
GET /accounts

====Tue Mar 31 2020 21:31:26 ====
RESPONSE heres an array

====Tue Mar 31 2020 21:32:34 ====
undefined

====Tue Mar 31 2020 21:32:40 ====
<ref *2> Socket {
  connecting: false,
  _hadError: false,
  _parent: null,
  _host: null,
  _readableState: ReadableState {
    objectMode: false,
    highWaterMark: 16384,
    buffer: BufferList { head: null, tail: null, length: 0 },
    length: 0,
    pipes: [],
    flowing: true,
    ended: false,
    endEmitted: false,
    reading: true,
    sync: false,
    needReadable: true,
    emittedReadable: false,
    readableListening: false,
    resumeScheduled: true,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    destroyed: false,
    defaultEncoding: 'utf8',
    awaitDrainWriters: null,
    multiAwaitDrain: false,
    readingMore: false,
    decoder: null,
    encoding: null,
    [Symbol(kPaused)]: false
  },
  readable: true,
  _events: [Object: null prototype] {
    end: [ [Function: onReadableStreamEnd], [Function: bound socketOnEnd] ],
    timeout: [Function: socketOnTimeout],
    data: [Function: bound socketOnData],
    error: [Function: socketOnError],
    close: [Function: bound socketOnClose],
    drain: [Function: bound socketOnDrain],
    resume: [Function: onSocketResume],
    pause: [Function: onSocketPause]
  },
  _eventsCount: 8,
  _maxListeners: undefined,
  _writableState: WritableState {
    objectMode: false,
    highWaterMark: 16384,
    finalCalled: false,
    needDrain: false,
    ending: false,
    ended: false,
    finished: false,
    destroyed: false,
    decodeStrings: false,
    defaultEncoding: 'utf8',
    length: 0,
    writing: false,
    corked: 0,
    sync: true,
    bufferProcessing: false,
    onwrite: [Function: bound onwrite],
    writecb: null,
    writelen: 0,
    afterWriteTickInfo: null,
    bufferedRequest: null,
    lastBufferedRequest: null,
    pendingcb: 0,
    prefinished: false,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    errored: false,
    bufferedRequestCount: 0,
    corkedRequestsFree: {
      next: null,
      entry: null,
      finish: [Function: bound onCorkedFinish]
    }
  },
  writable: true,
  allowHalfOpen: true,
  _sockname: null,
  _pendingData: null,
  _pendingEncoding: '',
  server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 1,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  _server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 1,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  parser: HTTPParser {
    '0': [Function: parserOnHeaders],
    '1': [Function: parserOnHeadersComplete],
    '2': [Function: parserOnBody],
    '3': [Function: parserOnMessageComplete],
    '4': [Function: bound onParserExecute],
    _headers: [],
    _url: '',
    socket: [Circular *2],
    incoming: null,
    outgoing: null,
    maxHeaderPairs: 2000,
    _consumed: true,
    onIncoming: [Function: bound parserOnIncoming],
    parsingHeadersStart: 1585715560832
  },
  on: [Function: socketListenerWrap],
  addListener: [Function: socketListenerWrap],
  prependListener: [Function: socketListenerWrap],
  _paused: false,
  [Symbol(asyncId)]: 10,
  [Symbol(kHandle)]: TCP {
    reading: true,
    onconnection: null,
    _consumed: true,
    [Symbol(owner)]: [Circular *2]
  },
  [Symbol(kSetNoDelay)]: false,
  [Symbol(lastWriteQueueSize)]: 0,
  [Symbol(timeout)]: null,
  [Symbol(kBuffer)]: null,
  [Symbol(kBufferCb)]: null,
  [Symbol(kBufferGen)]: null,
  [Symbol(kCapture)]: false,
  [Symbol(kBytesRead)]: 0,
  [Symbol(kBytesWritten)]: 0
}

====Tue Mar 31 2020 21:32:40 ====
<ref *2> Socket {
  connecting: false,
  _hadError: false,
  _parent: null,
  _host: null,
  _readableState: ReadableState {
    objectMode: false,
    highWaterMark: 16384,
    buffer: BufferList { head: null, tail: null, length: 0 },
    length: 0,
    pipes: [],
    flowing: true,
    ended: false,
    endEmitted: false,
    reading: true,
    sync: false,
    needReadable: true,
    emittedReadable: false,
    readableListening: false,
    resumeScheduled: true,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    destroyed: false,
    defaultEncoding: 'utf8',
    awaitDrainWriters: null,
    multiAwaitDrain: false,
    readingMore: false,
    decoder: null,
    encoding: null,
    [Symbol(kPaused)]: false
  },
  readable: true,
  _events: [Object: null prototype] {
    end: [ [Function: onReadableStreamEnd], [Function: bound socketOnEnd] ],
    timeout: [Function: socketOnTimeout],
    data: [Function: bound socketOnData],
    error: [Function: socketOnError],
    close: [Function: bound socketOnClose],
    drain: [Function: bound socketOnDrain],
    resume: [Function: onSocketResume],
    pause: [Function: onSocketPause]
  },
  _eventsCount: 8,
  _maxListeners: undefined,
  _writableState: WritableState {
    objectMode: false,
    highWaterMark: 16384,
    finalCalled: false,
    needDrain: false,
    ending: false,
    ended: false,
    finished: false,
    destroyed: false,
    decodeStrings: false,
    defaultEncoding: 'utf8',
    length: 0,
    writing: false,
    corked: 0,
    sync: true,
    bufferProcessing: false,
    onwrite: [Function: bound onwrite],
    writecb: null,
    writelen: 0,
    afterWriteTickInfo: null,
    bufferedRequest: null,
    lastBufferedRequest: null,
    pendingcb: 0,
    prefinished: false,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    errored: false,
    bufferedRequestCount: 0,
    corkedRequestsFree: {
      next: null,
      entry: null,
      finish: [Function: bound onCorkedFinish]
    }
  },
  writable: true,
  allowHalfOpen: true,
  _sockname: null,
  _pendingData: null,
  _pendingEncoding: '',
  server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 2,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  _server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 2,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  parser: HTTPParser {
    '0': [Function: parserOnHeaders],
    '1': [Function: parserOnHeadersComplete],
    '2': [Function: parserOnBody],
    '3': [Function: parserOnMessageComplete],
    '4': [Function: bound onParserExecute],
    _headers: [],
    _url: '',
    socket: [Circular *2],
    incoming: null,
    outgoing: null,
    maxHeaderPairs: 2000,
    _consumed: true,
    onIncoming: [Function: bound parserOnIncoming],
    parsingHeadersStart: 1585715560832
  },
  on: [Function: socketListenerWrap],
  addListener: [Function: socketListenerWrap],
  prependListener: [Function: socketListenerWrap],
  _paused: false,
  [Symbol(asyncId)]: 15,
  [Symbol(kHandle)]: TCP {
    reading: true,
    onconnection: null,
    _consumed: true,
    [Symbol(owner)]: [Circular *2]
  },
  [Symbol(kSetNoDelay)]: false,
  [Symbol(lastWriteQueueSize)]: 0,
  [Symbol(timeout)]: null,
  [Symbol(kBuffer)]: null,
  [Symbol(kBufferCb)]: null,
  [Symbol(kBufferGen)]: null,
  [Symbol(kCapture)]: false,
  [Symbol(kBytesRead)]: 0,
  [Symbol(kBytesWritten)]: 0
}

====Tue Mar 31 2020 21:32:40 ====
GET /accounts

====Tue Mar 31 2020 21:32:40 ====
RESPONSE [object Object]

====Tue Mar 31 2020 21:32:40 ====
RESPONSE {"accounts":["account1","account2"]}

====Tue Mar 31 2020 21:32:49 ====
undefined

====Tue Mar 31 2020 21:32:51 ====
<ref *2> Socket {
  connecting: false,
  _hadError: false,
  _parent: null,
  _host: null,
  _readableState: ReadableState {
    objectMode: false,
    highWaterMark: 16384,
    buffer: BufferList { head: null, tail: null, length: 0 },
    length: 0,
    pipes: [],
    flowing: true,
    ended: false,
    endEmitted: false,
    reading: true,
    sync: false,
    needReadable: true,
    emittedReadable: false,
    readableListening: false,
    resumeScheduled: true,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    destroyed: false,
    defaultEncoding: 'utf8',
    awaitDrainWriters: null,
    multiAwaitDrain: false,
    readingMore: false,
    decoder: null,
    encoding: null,
    [Symbol(kPaused)]: false
  },
  readable: true,
  _events: [Object: null prototype] {
    end: [ [Function: onReadableStreamEnd], [Function: bound socketOnEnd] ],
    timeout: [Function: socketOnTimeout],
    data: [Function: bound socketOnData],
    error: [Function: socketOnError],
    close: [Function: bound socketOnClose],
    drain: [Function: bound socketOnDrain],
    resume: [Function: onSocketResume],
    pause: [Function: onSocketPause]
  },
  _eventsCount: 8,
  _maxListeners: undefined,
  _writableState: WritableState {
    objectMode: false,
    highWaterMark: 16384,
    finalCalled: false,
    needDrain: false,
    ending: false,
    ended: false,
    finished: false,
    destroyed: false,
    decodeStrings: false,
    defaultEncoding: 'utf8',
    length: 0,
    writing: false,
    corked: 0,
    sync: true,
    bufferProcessing: false,
    onwrite: [Function: bound onwrite],
    writecb: null,
    writelen: 0,
    afterWriteTickInfo: null,
    bufferedRequest: null,
    lastBufferedRequest: null,
    pendingcb: 0,
    prefinished: false,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    errored: false,
    bufferedRequestCount: 0,
    corkedRequestsFree: {
      next: null,
      entry: null,
      finish: [Function: bound onCorkedFinish]
    }
  },
  writable: true,
  allowHalfOpen: true,
  _sockname: null,
  _pendingData: null,
  _pendingEncoding: '',
  server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 1,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  _server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 1,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  parser: HTTPParser {
    '0': [Function: parserOnHeaders],
    '1': [Function: parserOnHeadersComplete],
    '2': [Function: parserOnBody],
    '3': [Function: parserOnMessageComplete],
    '4': [Function: bound onParserExecute],
    _headers: [],
    _url: '',
    socket: [Circular *2],
    incoming: null,
    outgoing: null,
    maxHeaderPairs: 2000,
    _consumed: true,
    onIncoming: [Function: bound parserOnIncoming],
    parsingHeadersStart: 1585715571303
  },
  on: [Function: socketListenerWrap],
  addListener: [Function: socketListenerWrap],
  prependListener: [Function: socketListenerWrap],
  _paused: false,
  [Symbol(asyncId)]: 10,
  [Symbol(kHandle)]: TCP {
    reading: true,
    onconnection: null,
    _consumed: true,
    [Symbol(owner)]: [Circular *2]
  },
  [Symbol(kSetNoDelay)]: false,
  [Symbol(lastWriteQueueSize)]: 0,
  [Symbol(timeout)]: null,
  [Symbol(kBuffer)]: null,
  [Symbol(kBufferCb)]: null,
  [Symbol(kBufferGen)]: null,
  [Symbol(kCapture)]: false,
  [Symbol(kBytesRead)]: 0,
  [Symbol(kBytesWritten)]: 0
}

====Tue Mar 31 2020 21:32:51 ====
<ref *2> Socket {
  connecting: false,
  _hadError: false,
  _parent: null,
  _host: null,
  _readableState: ReadableState {
    objectMode: false,
    highWaterMark: 16384,
    buffer: BufferList { head: null, tail: null, length: 0 },
    length: 0,
    pipes: [],
    flowing: true,
    ended: false,
    endEmitted: false,
    reading: true,
    sync: false,
    needReadable: true,
    emittedReadable: false,
    readableListening: false,
    resumeScheduled: true,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    destroyed: false,
    defaultEncoding: 'utf8',
    awaitDrainWriters: null,
    multiAwaitDrain: false,
    readingMore: false,
    decoder: null,
    encoding: null,
    [Symbol(kPaused)]: false
  },
  readable: true,
  _events: [Object: null prototype] {
    end: [ [Function: onReadableStreamEnd], [Function: bound socketOnEnd] ],
    timeout: [Function: socketOnTimeout],
    data: [Function: bound socketOnData],
    error: [Function: socketOnError],
    close: [Function: bound socketOnClose],
    drain: [Function: bound socketOnDrain],
    resume: [Function: onSocketResume],
    pause: [Function: onSocketPause]
  },
  _eventsCount: 8,
  _maxListeners: undefined,
  _writableState: WritableState {
    objectMode: false,
    highWaterMark: 16384,
    finalCalled: false,
    needDrain: false,
    ending: false,
    ended: false,
    finished: false,
    destroyed: false,
    decodeStrings: false,
    defaultEncoding: 'utf8',
    length: 0,
    writing: false,
    corked: 0,
    sync: true,
    bufferProcessing: false,
    onwrite: [Function: bound onwrite],
    writecb: null,
    writelen: 0,
    afterWriteTickInfo: null,
    bufferedRequest: null,
    lastBufferedRequest: null,
    pendingcb: 0,
    prefinished: false,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    errored: false,
    bufferedRequestCount: 0,
    corkedRequestsFree: {
      next: null,
      entry: null,
      finish: [Function: bound onCorkedFinish]
    }
  },
  writable: true,
  allowHalfOpen: true,
  _sockname: null,
  _pendingData: null,
  _pendingEncoding: '',
  server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 2,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  _server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 2,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  parser: HTTPParser {
    '0': [Function: parserOnHeaders],
    '1': [Function: parserOnHeadersComplete],
    '2': [Function: parserOnBody],
    '3': [Function: parserOnMessageComplete],
    '4': [Function: bound onParserExecute],
    _headers: [],
    _url: '',
    socket: [Circular *2],
    incoming: null,
    outgoing: null,
    maxHeaderPairs: 2000,
    _consumed: true,
    onIncoming: [Function: bound parserOnIncoming],
    parsingHeadersStart: 1585715571303
  },
  on: [Function: socketListenerWrap],
  addListener: [Function: socketListenerWrap],
  prependListener: [Function: socketListenerWrap],
  _paused: false,
  [Symbol(asyncId)]: 15,
  [Symbol(kHandle)]: TCP {
    reading: true,
    onconnection: null,
    _consumed: true,
    [Symbol(owner)]: [Circular *2]
  },
  [Symbol(kSetNoDelay)]: false,
  [Symbol(lastWriteQueueSize)]: 0,
  [Symbol(timeout)]: null,
  [Symbol(kBuffer)]: null,
  [Symbol(kBufferCb)]: null,
  [Symbol(kBufferGen)]: null,
  [Symbol(kCapture)]: false,
  [Symbol(kBytesRead)]: 0,
  [Symbol(kBytesWritten)]: 0
}

====Tue Mar 31 2020 21:32:51 ====
GET /accounts

====Tue Mar 31 2020 21:32:51 ====
RESPONSE [object Object]

====Tue Mar 31 2020 21:32:51 ====
RESPONSE {"accounts":["account1","account2","account3"]}

====Tue Mar 31 2020 21:41:06 ====
undefined

====Tue Mar 31 2020 21:44:24 ====
undefined

====Tue Mar 31 2020 21:59:43 ====
undefined

====Tue Mar 31 2020 22:00:49 ====
undefined

====Tue Mar 31 2020 22:01:05 ====
undefined

====Tue Mar 31 2020 22:01:21 ====
undefined

====Tue Mar 31 2020 22:01:55 ====
undefined

====Tue Mar 31 2020 22:01:57 ====
<ref *2> Socket {
  connecting: false,
  _hadError: false,
  _parent: null,
  _host: null,
  _readableState: ReadableState {
    objectMode: false,
    highWaterMark: 16384,
    buffer: BufferList { head: null, tail: null, length: 0 },
    length: 0,
    pipes: [],
    flowing: true,
    ended: false,
    endEmitted: false,
    reading: true,
    sync: false,
    needReadable: true,
    emittedReadable: false,
    readableListening: false,
    resumeScheduled: true,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    destroyed: false,
    defaultEncoding: 'utf8',
    awaitDrainWriters: null,
    multiAwaitDrain: false,
    readingMore: false,
    decoder: null,
    encoding: null,
    [Symbol(kPaused)]: false
  },
  readable: true,
  _events: [Object: null prototype] {
    end: [ [Function: onReadableStreamEnd], [Function: bound socketOnEnd] ],
    timeout: [Function: socketOnTimeout],
    data: [Function: bound socketOnData],
    error: [Function: socketOnError],
    close: [Function: bound socketOnClose],
    drain: [Function: bound socketOnDrain],
    resume: [Function: onSocketResume],
    pause: [Function: onSocketPause]
  },
  _eventsCount: 8,
  _maxListeners: undefined,
  _writableState: WritableState {
    objectMode: false,
    highWaterMark: 16384,
    finalCalled: false,
    needDrain: false,
    ending: false,
    ended: false,
    finished: false,
    destroyed: false,
    decodeStrings: false,
    defaultEncoding: 'utf8',
    length: 0,
    writing: false,
    corked: 0,
    sync: true,
    bufferProcessing: false,
    onwrite: [Function: bound onwrite],
    writecb: null,
    writelen: 0,
    afterWriteTickInfo: null,
    bufferedRequest: null,
    lastBufferedRequest: null,
    pendingcb: 0,
    prefinished: false,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    errored: false,
    bufferedRequestCount: 0,
    corkedRequestsFree: {
      next: null,
      entry: null,
      finish: [Function: bound onCorkedFinish]
    }
  },
  writable: true,
  allowHalfOpen: true,
  _sockname: null,
  _pendingData: null,
  _pendingEncoding: '',
  server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 1,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  _server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 1,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  parser: HTTPParser {
    '0': [Function: parserOnHeaders],
    '1': [Function: parserOnHeadersComplete],
    '2': [Function: parserOnBody],
    '3': [Function: parserOnMessageComplete],
    '4': [Function: bound onParserExecute],
    _headers: [],
    _url: '',
    socket: [Circular *2],
    incoming: null,
    outgoing: null,
    maxHeaderPairs: 2000,
    _consumed: true,
    onIncoming: [Function: bound parserOnIncoming],
    parsingHeadersStart: 1585717317023
  },
  on: [Function: socketListenerWrap],
  addListener: [Function: socketListenerWrap],
  prependListener: [Function: socketListenerWrap],
  _paused: false,
  [Symbol(asyncId)]: 10,
  [Symbol(kHandle)]: TCP {
    reading: true,
    onconnection: null,
    _consumed: true,
    [Symbol(owner)]: [Circular *2]
  },
  [Symbol(kSetNoDelay)]: false,
  [Symbol(lastWriteQueueSize)]: 0,
  [Symbol(timeout)]: null,
  [Symbol(kBuffer)]: null,
  [Symbol(kBufferCb)]: null,
  [Symbol(kBufferGen)]: null,
  [Symbol(kCapture)]: false,
  [Symbol(kBytesRead)]: 0,
  [Symbol(kBytesWritten)]: 0
}

====Tue Mar 31 2020 22:01:57 ====
<ref *2> Socket {
  connecting: false,
  _hadError: false,
  _parent: null,
  _host: null,
  _readableState: ReadableState {
    objectMode: false,
    highWaterMark: 16384,
    buffer: BufferList { head: null, tail: null, length: 0 },
    length: 0,
    pipes: [],
    flowing: true,
    ended: false,
    endEmitted: false,
    reading: true,
    sync: false,
    needReadable: true,
    emittedReadable: false,
    readableListening: false,
    resumeScheduled: true,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    destroyed: false,
    defaultEncoding: 'utf8',
    awaitDrainWriters: null,
    multiAwaitDrain: false,
    readingMore: false,
    decoder: null,
    encoding: null,
    [Symbol(kPaused)]: false
  },
  readable: true,
  _events: [Object: null prototype] {
    end: [ [Function: onReadableStreamEnd], [Function: bound socketOnEnd] ],
    timeout: [Function: socketOnTimeout],
    data: [Function: bound socketOnData],
    error: [Function: socketOnError],
    close: [Function: bound socketOnClose],
    drain: [Function: bound socketOnDrain],
    resume: [Function: onSocketResume],
    pause: [Function: onSocketPause]
  },
  _eventsCount: 8,
  _maxListeners: undefined,
  _writableState: WritableState {
    objectMode: false,
    highWaterMark: 16384,
    finalCalled: false,
    needDrain: false,
    ending: false,
    ended: false,
    finished: false,
    destroyed: false,
    decodeStrings: false,
    defaultEncoding: 'utf8',
    length: 0,
    writing: false,
    corked: 0,
    sync: true,
    bufferProcessing: false,
    onwrite: [Function: bound onwrite],
    writecb: null,
    writelen: 0,
    afterWriteTickInfo: null,
    bufferedRequest: null,
    lastBufferedRequest: null,
    pendingcb: 0,
    prefinished: false,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    errored: false,
    bufferedRequestCount: 0,
    corkedRequestsFree: {
      next: null,
      entry: null,
      finish: [Function: bound onCorkedFinish]
    }
  },
  writable: true,
  allowHalfOpen: true,
  _sockname: null,
  _pendingData: null,
  _pendingEncoding: '',
  server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 2,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  _server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 2,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  parser: HTTPParser {
    '0': [Function: parserOnHeaders],
    '1': [Function: parserOnHeadersComplete],
    '2': [Function: parserOnBody],
    '3': [Function: parserOnMessageComplete],
    '4': [Function: bound onParserExecute],
    _headers: [],
    _url: '',
    socket: [Circular *2],
    incoming: null,
    outgoing: null,
    maxHeaderPairs: 2000,
    _consumed: true,
    onIncoming: [Function: bound parserOnIncoming],
    parsingHeadersStart: 1585717317023
  },
  on: [Function: socketListenerWrap],
  addListener: [Function: socketListenerWrap],
  prependListener: [Function: socketListenerWrap],
  _paused: false,
  [Symbol(asyncId)]: 15,
  [Symbol(kHandle)]: TCP {
    reading: true,
    onconnection: null,
    _consumed: true,
    [Symbol(owner)]: [Circular *2]
  },
  [Symbol(kSetNoDelay)]: false,
  [Symbol(lastWriteQueueSize)]: 0,
  [Symbol(timeout)]: null,
  [Symbol(kBuffer)]: null,
  [Symbol(kBufferCb)]: null,
  [Symbol(kBufferGen)]: null,
  [Symbol(kCapture)]: false,
  [Symbol(kBytesRead)]: 0,
  [Symbol(kBytesWritten)]: 0
}

====Tue Mar 31 2020 22:01:57 ====
GET /accounts

====Tue Mar 31 2020 22:01:57 ====
RESPONSE [object Object]

====Tue Mar 31 2020 22:01:57 ====
RESPONSE {"accounts":["account1","account2","account3"]}

====Tue Mar 31 2020 22:01:57 ====
GET /accounts

====Tue Mar 31 2020 22:01:57 ====
RESPONSE [object Object]

====Tue Mar 31 2020 22:01:57 ====
RESPONSE {"accounts":["account1","account2","account3"]}

====Tue Mar 31 2020 22:02:02 ====
undefined

====Tue Mar 31 2020 22:02:03 ====
<ref *2> Socket {
  connecting: false,
  _hadError: false,
  _parent: null,
  _host: null,
  _readableState: ReadableState {
    objectMode: false,
    highWaterMark: 16384,
    buffer: BufferList { head: null, tail: null, length: 0 },
    length: 0,
    pipes: [],
    flowing: true,
    ended: false,
    endEmitted: false,
    reading: true,
    sync: false,
    needReadable: true,
    emittedReadable: false,
    readableListening: false,
    resumeScheduled: true,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    destroyed: false,
    defaultEncoding: 'utf8',
    awaitDrainWriters: null,
    multiAwaitDrain: false,
    readingMore: false,
    decoder: null,
    encoding: null,
    [Symbol(kPaused)]: false
  },
  readable: true,
  _events: [Object: null prototype] {
    end: [ [Function: onReadableStreamEnd], [Function: bound socketOnEnd] ],
    timeout: [Function: socketOnTimeout],
    data: [Function: bound socketOnData],
    error: [Function: socketOnError],
    close: [Function: bound socketOnClose],
    drain: [Function: bound socketOnDrain],
    resume: [Function: onSocketResume],
    pause: [Function: onSocketPause]
  },
  _eventsCount: 8,
  _maxListeners: undefined,
  _writableState: WritableState {
    objectMode: false,
    highWaterMark: 16384,
    finalCalled: false,
    needDrain: false,
    ending: false,
    ended: false,
    finished: false,
    destroyed: false,
    decodeStrings: false,
    defaultEncoding: 'utf8',
    length: 0,
    writing: false,
    corked: 0,
    sync: true,
    bufferProcessing: false,
    onwrite: [Function: bound onwrite],
    writecb: null,
    writelen: 0,
    afterWriteTickInfo: null,
    bufferedRequest: null,
    lastBufferedRequest: null,
    pendingcb: 0,
    prefinished: false,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    errored: false,
    bufferedRequestCount: 0,
    corkedRequestsFree: {
      next: null,
      entry: null,
      finish: [Function: bound onCorkedFinish]
    }
  },
  writable: true,
  allowHalfOpen: true,
  _sockname: null,
  _pendingData: null,
  _pendingEncoding: '',
  server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 1,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  _server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 1,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  parser: HTTPParser {
    '0': [Function: parserOnHeaders],
    '1': [Function: parserOnHeadersComplete],
    '2': [Function: parserOnBody],
    '3': [Function: parserOnMessageComplete],
    '4': [Function: bound onParserExecute],
    _headers: [],
    _url: '',
    socket: [Circular *2],
    incoming: null,
    outgoing: null,
    maxHeaderPairs: 2000,
    _consumed: true,
    onIncoming: [Function: bound parserOnIncoming],
    parsingHeadersStart: 1585717323300
  },
  on: [Function: socketListenerWrap],
  addListener: [Function: socketListenerWrap],
  prependListener: [Function: socketListenerWrap],
  _paused: false,
  [Symbol(asyncId)]: 10,
  [Symbol(kHandle)]: TCP {
    reading: true,
    onconnection: null,
    _consumed: true,
    [Symbol(owner)]: [Circular *2]
  },
  [Symbol(kSetNoDelay)]: false,
  [Symbol(lastWriteQueueSize)]: 0,
  [Symbol(timeout)]: null,
  [Symbol(kBuffer)]: null,
  [Symbol(kBufferCb)]: null,
  [Symbol(kBufferGen)]: null,
  [Symbol(kCapture)]: false,
  [Symbol(kBytesRead)]: 0,
  [Symbol(kBytesWritten)]: 0
}

====Tue Mar 31 2020 22:02:03 ====
<ref *2> Socket {
  connecting: false,
  _hadError: false,
  _parent: null,
  _host: null,
  _readableState: ReadableState {
    objectMode: false,
    highWaterMark: 16384,
    buffer: BufferList { head: null, tail: null, length: 0 },
    length: 0,
    pipes: [],
    flowing: true,
    ended: false,
    endEmitted: false,
    reading: true,
    sync: false,
    needReadable: true,
    emittedReadable: false,
    readableListening: false,
    resumeScheduled: true,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    destroyed: false,
    defaultEncoding: 'utf8',
    awaitDrainWriters: null,
    multiAwaitDrain: false,
    readingMore: false,
    decoder: null,
    encoding: null,
    [Symbol(kPaused)]: false
  },
  readable: true,
  _events: [Object: null prototype] {
    end: [ [Function: onReadableStreamEnd], [Function: bound socketOnEnd] ],
    timeout: [Function: socketOnTimeout],
    data: [Function: bound socketOnData],
    error: [Function: socketOnError],
    close: [Function: bound socketOnClose],
    drain: [Function: bound socketOnDrain],
    resume: [Function: onSocketResume],
    pause: [Function: onSocketPause]
  },
  _eventsCount: 8,
  _maxListeners: undefined,
  _writableState: WritableState {
    objectMode: false,
    highWaterMark: 16384,
    finalCalled: false,
    needDrain: false,
    ending: false,
    ended: false,
    finished: false,
    destroyed: false,
    decodeStrings: false,
    defaultEncoding: 'utf8',
    length: 0,
    writing: false,
    corked: 0,
    sync: true,
    bufferProcessing: false,
    onwrite: [Function: bound onwrite],
    writecb: null,
    writelen: 0,
    afterWriteTickInfo: null,
    bufferedRequest: null,
    lastBufferedRequest: null,
    pendingcb: 0,
    prefinished: false,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    errored: false,
    bufferedRequestCount: 0,
    corkedRequestsFree: {
      next: null,
      entry: null,
      finish: [Function: bound onCorkedFinish]
    }
  },
  writable: true,
  allowHalfOpen: true,
  _sockname: null,
  _pendingData: null,
  _pendingEncoding: '',
  server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 2,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  _server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 2,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  parser: HTTPParser {
    '0': [Function: parserOnHeaders],
    '1': [Function: parserOnHeadersComplete],
    '2': [Function: parserOnBody],
    '3': [Function: parserOnMessageComplete],
    '4': [Function: bound onParserExecute],
    _headers: [],
    _url: '',
    socket: [Circular *2],
    incoming: null,
    outgoing: null,
    maxHeaderPairs: 2000,
    _consumed: true,
    onIncoming: [Function: bound parserOnIncoming],
    parsingHeadersStart: 1585717323300
  },
  on: [Function: socketListenerWrap],
  addListener: [Function: socketListenerWrap],
  prependListener: [Function: socketListenerWrap],
  _paused: false,
  [Symbol(asyncId)]: 15,
  [Symbol(kHandle)]: TCP {
    reading: true,
    onconnection: null,
    _consumed: true,
    [Symbol(owner)]: [Circular *2]
  },
  [Symbol(kSetNoDelay)]: false,
  [Symbol(lastWriteQueueSize)]: 0,
  [Symbol(timeout)]: null,
  [Symbol(kBuffer)]: null,
  [Symbol(kBufferCb)]: null,
  [Symbol(kBufferGen)]: null,
  [Symbol(kCapture)]: false,
  [Symbol(kBytesRead)]: 0,
  [Symbol(kBytesWritten)]: 0
}

====Tue Mar 31 2020 22:02:03 ====
GET /accounts

====Tue Mar 31 2020 22:02:24 ====
undefined

====Tue Mar 31 2020 22:02:48 ====
undefined

====Tue Mar 31 2020 22:02:59 ====
undefined

====Tue Mar 31 2020 22:03:01 ====
<ref *2> Socket {
  connecting: false,
  _hadError: false,
  _parent: null,
  _host: null,
  _readableState: ReadableState {
    objectMode: false,
    highWaterMark: 16384,
    buffer: BufferList { head: null, tail: null, length: 0 },
    length: 0,
    pipes: [],
    flowing: true,
    ended: false,
    endEmitted: false,
    reading: true,
    sync: false,
    needReadable: true,
    emittedReadable: false,
    readableListening: false,
    resumeScheduled: true,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    destroyed: false,
    defaultEncoding: 'utf8',
    awaitDrainWriters: null,
    multiAwaitDrain: false,
    readingMore: false,
    decoder: null,
    encoding: null,
    [Symbol(kPaused)]: false
  },
  readable: true,
  _events: [Object: null prototype] {
    end: [ [Function: onReadableStreamEnd], [Function: bound socketOnEnd] ],
    timeout: [Function: socketOnTimeout],
    data: [Function: bound socketOnData],
    error: [Function: socketOnError],
    close: [Function: bound socketOnClose],
    drain: [Function: bound socketOnDrain],
    resume: [Function: onSocketResume],
    pause: [Function: onSocketPause]
  },
  _eventsCount: 8,
  _maxListeners: undefined,
  _writableState: WritableState {
    objectMode: false,
    highWaterMark: 16384,
    finalCalled: false,
    needDrain: false,
    ending: false,
    ended: false,
    finished: false,
    destroyed: false,
    decodeStrings: false,
    defaultEncoding: 'utf8',
    length: 0,
    writing: false,
    corked: 0,
    sync: true,
    bufferProcessing: false,
    onwrite: [Function: bound onwrite],
    writecb: null,
    writelen: 0,
    afterWriteTickInfo: null,
    bufferedRequest: null,
    lastBufferedRequest: null,
    pendingcb: 0,
    prefinished: false,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    errored: false,
    bufferedRequestCount: 0,
    corkedRequestsFree: {
      next: null,
      entry: null,
      finish: [Function: bound onCorkedFinish]
    }
  },
  writable: true,
  allowHalfOpen: true,
  _sockname: null,
  _pendingData: null,
  _pendingEncoding: '',
  server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 1,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  _server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 1,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  parser: HTTPParser {
    '0': [Function: parserOnHeaders],
    '1': [Function: parserOnHeadersComplete],
    '2': [Function: parserOnBody],
    '3': [Function: parserOnMessageComplete],
    '4': [Function: bound onParserExecute],
    _headers: [],
    _url: '',
    socket: [Circular *2],
    incoming: null,
    outgoing: null,
    maxHeaderPairs: 2000,
    _consumed: true,
    onIncoming: [Function: bound parserOnIncoming],
    parsingHeadersStart: 1585717381290
  },
  on: [Function: socketListenerWrap],
  addListener: [Function: socketListenerWrap],
  prependListener: [Function: socketListenerWrap],
  _paused: false,
  [Symbol(asyncId)]: 10,
  [Symbol(kHandle)]: TCP {
    reading: true,
    onconnection: null,
    _consumed: true,
    [Symbol(owner)]: [Circular *2]
  },
  [Symbol(kSetNoDelay)]: false,
  [Symbol(lastWriteQueueSize)]: 0,
  [Symbol(timeout)]: null,
  [Symbol(kBuffer)]: null,
  [Symbol(kBufferCb)]: null,
  [Symbol(kBufferGen)]: null,
  [Symbol(kCapture)]: false,
  [Symbol(kBytesRead)]: 0,
  [Symbol(kBytesWritten)]: 0
}

====Tue Mar 31 2020 22:03:01 ====
<ref *2> Socket {
  connecting: false,
  _hadError: false,
  _parent: null,
  _host: null,
  _readableState: ReadableState {
    objectMode: false,
    highWaterMark: 16384,
    buffer: BufferList { head: null, tail: null, length: 0 },
    length: 0,
    pipes: [],
    flowing: true,
    ended: false,
    endEmitted: false,
    reading: true,
    sync: false,
    needReadable: true,
    emittedReadable: false,
    readableListening: false,
    resumeScheduled: true,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    destroyed: false,
    defaultEncoding: 'utf8',
    awaitDrainWriters: null,
    multiAwaitDrain: false,
    readingMore: false,
    decoder: null,
    encoding: null,
    [Symbol(kPaused)]: false
  },
  readable: true,
  _events: [Object: null prototype] {
    end: [ [Function: onReadableStreamEnd], [Function: bound socketOnEnd] ],
    timeout: [Function: socketOnTimeout],
    data: [Function: bound socketOnData],
    error: [Function: socketOnError],
    close: [Function: bound socketOnClose],
    drain: [Function: bound socketOnDrain],
    resume: [Function: onSocketResume],
    pause: [Function: onSocketPause]
  },
  _eventsCount: 8,
  _maxListeners: undefined,
  _writableState: WritableState {
    objectMode: false,
    highWaterMark: 16384,
    finalCalled: false,
    needDrain: false,
    ending: false,
    ended: false,
    finished: false,
    destroyed: false,
    decodeStrings: false,
    defaultEncoding: 'utf8',
    length: 0,
    writing: false,
    corked: 0,
    sync: true,
    bufferProcessing: false,
    onwrite: [Function: bound onwrite],
    writecb: null,
    writelen: 0,
    afterWriteTickInfo: null,
    bufferedRequest: null,
    lastBufferedRequest: null,
    pendingcb: 0,
    prefinished: false,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    errored: false,
    bufferedRequestCount: 0,
    corkedRequestsFree: {
      next: null,
      entry: null,
      finish: [Function: bound onCorkedFinish]
    }
  },
  writable: true,
  allowHalfOpen: true,
  _sockname: null,
  _pendingData: null,
  _pendingEncoding: '',
  server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 2,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  _server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 2,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  parser: HTTPParser {
    '0': [Function: parserOnHeaders],
    '1': [Function: parserOnHeadersComplete],
    '2': [Function: parserOnBody],
    '3': [Function: parserOnMessageComplete],
    '4': [Function: bound onParserExecute],
    _headers: [],
    _url: '',
    socket: [Circular *2],
    incoming: null,
    outgoing: null,
    maxHeaderPairs: 2000,
    _consumed: true,
    onIncoming: [Function: bound parserOnIncoming],
    parsingHeadersStart: 1585717381290
  },
  on: [Function: socketListenerWrap],
  addListener: [Function: socketListenerWrap],
  prependListener: [Function: socketListenerWrap],
  _paused: false,
  [Symbol(asyncId)]: 15,
  [Symbol(kHandle)]: TCP {
    reading: true,
    onconnection: null,
    _consumed: true,
    [Symbol(owner)]: [Circular *2]
  },
  [Symbol(kSetNoDelay)]: false,
  [Symbol(lastWriteQueueSize)]: 0,
  [Symbol(timeout)]: null,
  [Symbol(kBuffer)]: null,
  [Symbol(kBufferCb)]: null,
  [Symbol(kBufferGen)]: null,
  [Symbol(kCapture)]: false,
  [Symbol(kBytesRead)]: 0,
  [Symbol(kBytesWritten)]: 0
}

====Tue Mar 31 2020 22:03:01 ====
GET /accounts

====Tue Mar 31 2020 22:03:01 ====
RESPONSE [object Object]

====Tue Mar 31 2020 22:03:01 ====
RESPONSE {"accounts":["account1","account2","account3"]}

====Tue Mar 31 2020 22:03:24 ====
undefined

====Tue Mar 31 2020 22:03:25 ====
<ref *2> Socket {
  connecting: false,
  _hadError: false,
  _parent: null,
  _host: null,
  _readableState: ReadableState {
    objectMode: false,
    highWaterMark: 16384,
    buffer: BufferList { head: null, tail: null, length: 0 },
    length: 0,
    pipes: [],
    flowing: true,
    ended: false,
    endEmitted: false,
    reading: true,
    sync: false,
    needReadable: true,
    emittedReadable: false,
    readableListening: false,
    resumeScheduled: true,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    destroyed: false,
    defaultEncoding: 'utf8',
    awaitDrainWriters: null,
    multiAwaitDrain: false,
    readingMore: false,
    decoder: null,
    encoding: null,
    [Symbol(kPaused)]: false
  },
  readable: true,
  _events: [Object: null prototype] {
    end: [ [Function: onReadableStreamEnd], [Function: bound socketOnEnd] ],
    timeout: [Function: socketOnTimeout],
    data: [Function: bound socketOnData],
    error: [Function: socketOnError],
    close: [Function: bound socketOnClose],
    drain: [Function: bound socketOnDrain],
    resume: [Function: onSocketResume],
    pause: [Function: onSocketPause]
  },
  _eventsCount: 8,
  _maxListeners: undefined,
  _writableState: WritableState {
    objectMode: false,
    highWaterMark: 16384,
    finalCalled: false,
    needDrain: false,
    ending: false,
    ended: false,
    finished: false,
    destroyed: false,
    decodeStrings: false,
    defaultEncoding: 'utf8',
    length: 0,
    writing: false,
    corked: 0,
    sync: true,
    bufferProcessing: false,
    onwrite: [Function: bound onwrite],
    writecb: null,
    writelen: 0,
    afterWriteTickInfo: null,
    bufferedRequest: null,
    lastBufferedRequest: null,
    pendingcb: 0,
    prefinished: false,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    errored: false,
    bufferedRequestCount: 0,
    corkedRequestsFree: {
      next: null,
      entry: null,
      finish: [Function: bound onCorkedFinish]
    }
  },
  writable: true,
  allowHalfOpen: true,
  _sockname: null,
  _pendingData: null,
  _pendingEncoding: '',
  server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 1,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  _server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 1,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  parser: HTTPParser {
    '0': [Function: parserOnHeaders],
    '1': [Function: parserOnHeadersComplete],
    '2': [Function: parserOnBody],
    '3': [Function: parserOnMessageComplete],
    '4': [Function: bound onParserExecute],
    _headers: [],
    _url: '',
    socket: [Circular *2],
    incoming: null,
    outgoing: null,
    maxHeaderPairs: 2000,
    _consumed: true,
    onIncoming: [Function: bound parserOnIncoming],
    parsingHeadersStart: 1585717405104
  },
  on: [Function: socketListenerWrap],
  addListener: [Function: socketListenerWrap],
  prependListener: [Function: socketListenerWrap],
  _paused: false,
  [Symbol(asyncId)]: 10,
  [Symbol(kHandle)]: TCP {
    reading: true,
    onconnection: null,
    _consumed: true,
    [Symbol(owner)]: [Circular *2]
  },
  [Symbol(kSetNoDelay)]: false,
  [Symbol(lastWriteQueueSize)]: 0,
  [Symbol(timeout)]: null,
  [Symbol(kBuffer)]: null,
  [Symbol(kBufferCb)]: null,
  [Symbol(kBufferGen)]: null,
  [Symbol(kCapture)]: false,
  [Symbol(kBytesRead)]: 0,
  [Symbol(kBytesWritten)]: 0
}

====Tue Mar 31 2020 22:03:25 ====
<ref *2> Socket {
  connecting: false,
  _hadError: false,
  _parent: null,
  _host: null,
  _readableState: ReadableState {
    objectMode: false,
    highWaterMark: 16384,
    buffer: BufferList { head: null, tail: null, length: 0 },
    length: 0,
    pipes: [],
    flowing: true,
    ended: false,
    endEmitted: false,
    reading: true,
    sync: false,
    needReadable: true,
    emittedReadable: false,
    readableListening: false,
    resumeScheduled: true,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    destroyed: false,
    defaultEncoding: 'utf8',
    awaitDrainWriters: null,
    multiAwaitDrain: false,
    readingMore: false,
    decoder: null,
    encoding: null,
    [Symbol(kPaused)]: false
  },
  readable: true,
  _events: [Object: null prototype] {
    end: [ [Function: onReadableStreamEnd], [Function: bound socketOnEnd] ],
    timeout: [Function: socketOnTimeout],
    data: [Function: bound socketOnData],
    error: [Function: socketOnError],
    close: [Function: bound socketOnClose],
    drain: [Function: bound socketOnDrain],
    resume: [Function: onSocketResume],
    pause: [Function: onSocketPause]
  },
  _eventsCount: 8,
  _maxListeners: undefined,
  _writableState: WritableState {
    objectMode: false,
    highWaterMark: 16384,
    finalCalled: false,
    needDrain: false,
    ending: false,
    ended: false,
    finished: false,
    destroyed: false,
    decodeStrings: false,
    defaultEncoding: 'utf8',
    length: 0,
    writing: false,
    corked: 0,
    sync: true,
    bufferProcessing: false,
    onwrite: [Function: bound onwrite],
    writecb: null,
    writelen: 0,
    afterWriteTickInfo: null,
    bufferedRequest: null,
    lastBufferedRequest: null,
    pendingcb: 0,
    prefinished: false,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    errored: false,
    bufferedRequestCount: 0,
    corkedRequestsFree: {
      next: null,
      entry: null,
      finish: [Function: bound onCorkedFinish]
    }
  },
  writable: true,
  allowHalfOpen: true,
  _sockname: null,
  _pendingData: null,
  _pendingEncoding: '',
  server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 2,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  _server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 2,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  parser: HTTPParser {
    '0': [Function: parserOnHeaders],
    '1': [Function: parserOnHeadersComplete],
    '2': [Function: parserOnBody],
    '3': [Function: parserOnMessageComplete],
    '4': [Function: bound onParserExecute],
    _headers: [],
    _url: '',
    socket: [Circular *2],
    incoming: null,
    outgoing: null,
    maxHeaderPairs: 2000,
    _consumed: true,
    onIncoming: [Function: bound parserOnIncoming],
    parsingHeadersStart: 1585717405104
  },
  on: [Function: socketListenerWrap],
  addListener: [Function: socketListenerWrap],
  prependListener: [Function: socketListenerWrap],
  _paused: false,
  [Symbol(asyncId)]: 15,
  [Symbol(kHandle)]: TCP {
    reading: true,
    onconnection: null,
    _consumed: true,
    [Symbol(owner)]: [Circular *2]
  },
  [Symbol(kSetNoDelay)]: false,
  [Symbol(lastWriteQueueSize)]: 0,
  [Symbol(timeout)]: null,
  [Symbol(kBuffer)]: null,
  [Symbol(kBufferCb)]: null,
  [Symbol(kBufferGen)]: null,
  [Symbol(kCapture)]: false,
  [Symbol(kBytesRead)]: 0,
  [Symbol(kBytesWritten)]: 0
}

====Tue Mar 31 2020 22:03:25 ====
GET /accounts

====Tue Mar 31 2020 22:03:25 ====
RESPONSE [object Object]

====Tue Mar 31 2020 22:03:25 ====
RESPONSE {"accounts":["account1","account2","account3"]}

====Tue Mar 31 2020 22:03:28 ====
GET /testing

====Tue Mar 31 2020 22:03:38 ====
<ref *2> Socket {
  connecting: false,
  _hadError: false,
  _parent: null,
  _host: null,
  _readableState: ReadableState {
    objectMode: false,
    highWaterMark: 16384,
    buffer: BufferList { head: null, tail: null, length: 0 },
    length: 0,
    pipes: [],
    flowing: true,
    ended: false,
    endEmitted: false,
    reading: true,
    sync: false,
    needReadable: true,
    emittedReadable: false,
    readableListening: false,
    resumeScheduled: true,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    destroyed: false,
    defaultEncoding: 'utf8',
    awaitDrainWriters: null,
    multiAwaitDrain: false,
    readingMore: false,
    decoder: null,
    encoding: null,
    [Symbol(kPaused)]: false
  },
  readable: true,
  _events: [Object: null prototype] {
    end: [ [Function: onReadableStreamEnd], [Function: bound socketOnEnd] ],
    timeout: [Function: socketOnTimeout],
    data: [Function: bound socketOnData],
    error: [Function: socketOnError],
    close: [Function: bound socketOnClose],
    drain: [Function: bound socketOnDrain],
    resume: [Function: onSocketResume],
    pause: [Function: onSocketPause]
  },
  _eventsCount: 8,
  _maxListeners: undefined,
  _writableState: WritableState {
    objectMode: false,
    highWaterMark: 16384,
    finalCalled: false,
    needDrain: false,
    ending: false,
    ended: false,
    finished: false,
    destroyed: false,
    decodeStrings: false,
    defaultEncoding: 'utf8',
    length: 0,
    writing: false,
    corked: 0,
    sync: true,
    bufferProcessing: false,
    onwrite: [Function: bound onwrite],
    writecb: null,
    writelen: 0,
    afterWriteTickInfo: null,
    bufferedRequest: null,
    lastBufferedRequest: null,
    pendingcb: 0,
    prefinished: false,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    errored: false,
    bufferedRequestCount: 0,
    corkedRequestsFree: {
      next: null,
      entry: null,
      finish: [Function: bound onCorkedFinish]
    }
  },
  writable: true,
  allowHalfOpen: true,
  _sockname: null,
  _pendingData: null,
  _pendingEncoding: '',
  server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 2,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  _server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 2,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  parser: HTTPParser {
    '0': [Function: parserOnHeaders],
    '1': [Function: parserOnHeadersComplete],
    '2': [Function: parserOnBody],
    '3': [Function: parserOnMessageComplete],
    '4': [Function: bound onParserExecute],
    _headers: [],
    _url: '',
    socket: [Circular *2],
    incoming: null,
    outgoing: null,
    maxHeaderPairs: 2000,
    _consumed: true,
    onIncoming: [Function: bound parserOnIncoming],
    parsingHeadersStart: 1585717418951
  },
  on: [Function: socketListenerWrap],
  addListener: [Function: socketListenerWrap],
  prependListener: [Function: socketListenerWrap],
  _paused: false,
  [Symbol(asyncId)]: 45,
  [Symbol(kHandle)]: TCP {
    reading: true,
    onconnection: null,
    _consumed: true,
    [Symbol(owner)]: [Circular *2]
  },
  [Symbol(kSetNoDelay)]: false,
  [Symbol(lastWriteQueueSize)]: 0,
  [Symbol(timeout)]: null,
  [Symbol(kBuffer)]: null,
  [Symbol(kBufferCb)]: null,
  [Symbol(kBufferGen)]: null,
  [Symbol(kCapture)]: false,
  [Symbol(kBytesRead)]: 0,
  [Symbol(kBytesWritten)]: 0
}

====Tue Mar 31 2020 22:03:38 ====
<ref *2> Socket {
  connecting: false,
  _hadError: false,
  _parent: null,
  _host: null,
  _readableState: ReadableState {
    objectMode: false,
    highWaterMark: 16384,
    buffer: BufferList { head: null, tail: null, length: 0 },
    length: 0,
    pipes: [],
    flowing: true,
    ended: false,
    endEmitted: false,
    reading: true,
    sync: false,
    needReadable: true,
    emittedReadable: false,
    readableListening: false,
    resumeScheduled: true,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    destroyed: false,
    defaultEncoding: 'utf8',
    awaitDrainWriters: null,
    multiAwaitDrain: false,
    readingMore: false,
    decoder: null,
    encoding: null,
    [Symbol(kPaused)]: false
  },
  readable: true,
  _events: [Object: null prototype] {
    end: [ [Function: onReadableStreamEnd], [Function: bound socketOnEnd] ],
    timeout: [Function: socketOnTimeout],
    data: [Function: bound socketOnData],
    error: [Function: socketOnError],
    close: [Function: bound socketOnClose],
    drain: [Function: bound socketOnDrain],
    resume: [Function: onSocketResume],
    pause: [Function: onSocketPause]
  },
  _eventsCount: 8,
  _maxListeners: undefined,
  _writableState: WritableState {
    objectMode: false,
    highWaterMark: 16384,
    finalCalled: false,
    needDrain: false,
    ending: false,
    ended: false,
    finished: false,
    destroyed: false,
    decodeStrings: false,
    defaultEncoding: 'utf8',
    length: 0,
    writing: false,
    corked: 0,
    sync: true,
    bufferProcessing: false,
    onwrite: [Function: bound onwrite],
    writecb: null,
    writelen: 0,
    afterWriteTickInfo: null,
    bufferedRequest: null,
    lastBufferedRequest: null,
    pendingcb: 0,
    prefinished: false,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    errored: false,
    bufferedRequestCount: 0,
    corkedRequestsFree: {
      next: null,
      entry: null,
      finish: [Function: bound onCorkedFinish]
    }
  },
  writable: true,
  allowHalfOpen: true,
  _sockname: null,
  _pendingData: null,
  _pendingEncoding: '',
  server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 3,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  _server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 3,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  parser: HTTPParser {
    '0': [Function: parserOnHeaders],
    '1': [Function: parserOnHeadersComplete],
    '2': [Function: parserOnBody],
    '3': [Function: parserOnMessageComplete],
    '4': [Function: bound onParserExecute],
    _headers: [],
    _url: '',
    socket: [Circular *2],
    incoming: null,
    outgoing: null,
    maxHeaderPairs: 2000,
    _consumed: true,
    onIncoming: [Function: bound parserOnIncoming],
    parsingHeadersStart: 1585717418951
  },
  on: [Function: socketListenerWrap],
  addListener: [Function: socketListenerWrap],
  prependListener: [Function: socketListenerWrap],
  _paused: false,
  [Symbol(asyncId)]: 50,
  [Symbol(kHandle)]: TCP {
    reading: true,
    onconnection: null,
    _consumed: true,
    [Symbol(owner)]: [Circular *2]
  },
  [Symbol(kSetNoDelay)]: false,
  [Symbol(lastWriteQueueSize)]: 0,
  [Symbol(timeout)]: null,
  [Symbol(kBuffer)]: null,
  [Symbol(kBufferCb)]: null,
  [Symbol(kBufferGen)]: null,
  [Symbol(kCapture)]: false,
  [Symbol(kBytesRead)]: 0,
  [Symbol(kBytesWritten)]: 0
}

====Tue Mar 31 2020 22:03:38 ====
GET /accounts/testing

====Tue Mar 31 2020 22:03:38 ====
RESPONSE hi

====Tue Mar 31 2020 22:06:32 ====
<ref *2> Socket {
  connecting: false,
  _hadError: false,
  _parent: null,
  _host: null,
  _readableState: ReadableState {
    objectMode: false,
    highWaterMark: 16384,
    buffer: BufferList { head: null, tail: null, length: 0 },
    length: 0,
    pipes: [],
    flowing: true,
    ended: false,
    endEmitted: false,
    reading: true,
    sync: false,
    needReadable: true,
    emittedReadable: false,
    readableListening: false,
    resumeScheduled: true,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    destroyed: false,
    defaultEncoding: 'utf8',
    awaitDrainWriters: null,
    multiAwaitDrain: false,
    readingMore: false,
    decoder: null,
    encoding: null,
    [Symbol(kPaused)]: false
  },
  readable: true,
  _events: [Object: null prototype] {
    end: [ [Function: onReadableStreamEnd], [Function: bound socketOnEnd] ],
    timeout: [Function: socketOnTimeout],
    data: [Function: bound socketOnData],
    error: [Function: socketOnError],
    close: [Function: bound socketOnClose],
    drain: [Function: bound socketOnDrain],
    resume: [Function: onSocketResume],
    pause: [Function: onSocketPause]
  },
  _eventsCount: 8,
  _maxListeners: undefined,
  _writableState: WritableState {
    objectMode: false,
    highWaterMark: 16384,
    finalCalled: false,
    needDrain: false,
    ending: false,
    ended: false,
    finished: false,
    destroyed: false,
    decodeStrings: false,
    defaultEncoding: 'utf8',
    length: 0,
    writing: false,
    corked: 0,
    sync: true,
    bufferProcessing: false,
    onwrite: [Function: bound onwrite],
    writecb: null,
    writelen: 0,
    afterWriteTickInfo: null,
    bufferedRequest: null,
    lastBufferedRequest: null,
    pendingcb: 0,
    prefinished: false,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    errored: false,
    bufferedRequestCount: 0,
    corkedRequestsFree: {
      next: null,
      entry: null,
      finish: [Function: bound onCorkedFinish]
    }
  },
  writable: true,
  allowHalfOpen: true,
  _sockname: null,
  _pendingData: null,
  _pendingEncoding: '',
  server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 1,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  _server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 1,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  parser: HTTPParser {
    '0': [Function: parserOnHeaders],
    '1': [Function: parserOnHeadersComplete],
    '2': [Function: parserOnBody],
    '3': [Function: parserOnMessageComplete],
    '4': [Function: bound onParserExecute],
    _headers: [],
    _url: '',
    socket: [Circular *2],
    incoming: null,
    outgoing: null,
    maxHeaderPairs: 2000,
    _consumed: true,
    onIncoming: [Function: bound parserOnIncoming],
    parsingHeadersStart: 1585717592763
  },
  on: [Function: socketListenerWrap],
  addListener: [Function: socketListenerWrap],
  prependListener: [Function: socketListenerWrap],
  _paused: false,
  [Symbol(asyncId)]: 68,
  [Symbol(kHandle)]: TCP {
    reading: true,
    onconnection: null,
    _consumed: true,
    [Symbol(owner)]: [Circular *2]
  },
  [Symbol(kSetNoDelay)]: false,
  [Symbol(lastWriteQueueSize)]: 0,
  [Symbol(timeout)]: null,
  [Symbol(kBuffer)]: null,
  [Symbol(kBufferCb)]: null,
  [Symbol(kBufferGen)]: null,
  [Symbol(kCapture)]: false,
  [Symbol(kBytesRead)]: 0,
  [Symbol(kBytesWritten)]: 0
}

====Tue Mar 31 2020 22:06:32 ====
<ref *2> Socket {
  connecting: false,
  _hadError: false,
  _parent: null,
  _host: null,
  _readableState: ReadableState {
    objectMode: false,
    highWaterMark: 16384,
    buffer: BufferList { head: null, tail: null, length: 0 },
    length: 0,
    pipes: [],
    flowing: true,
    ended: false,
    endEmitted: false,
    reading: true,
    sync: false,
    needReadable: true,
    emittedReadable: false,
    readableListening: false,
    resumeScheduled: true,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    destroyed: false,
    defaultEncoding: 'utf8',
    awaitDrainWriters: null,
    multiAwaitDrain: false,
    readingMore: false,
    decoder: null,
    encoding: null,
    [Symbol(kPaused)]: false
  },
  readable: true,
  _events: [Object: null prototype] {
    end: [ [Function: onReadableStreamEnd], [Function: bound socketOnEnd] ],
    timeout: [Function: socketOnTimeout],
    data: [Function: bound socketOnData],
    error: [Function: socketOnError],
    close: [Function: bound socketOnClose],
    drain: [Function: bound socketOnDrain],
    resume: [Function: onSocketResume],
    pause: [Function: onSocketPause]
  },
  _eventsCount: 8,
  _maxListeners: undefined,
  _writableState: WritableState {
    objectMode: false,
    highWaterMark: 16384,
    finalCalled: false,
    needDrain: false,
    ending: false,
    ended: false,
    finished: false,
    destroyed: false,
    decodeStrings: false,
    defaultEncoding: 'utf8',
    length: 0,
    writing: false,
    corked: 0,
    sync: true,
    bufferProcessing: false,
    onwrite: [Function: bound onwrite],
    writecb: null,
    writelen: 0,
    afterWriteTickInfo: null,
    bufferedRequest: null,
    lastBufferedRequest: null,
    pendingcb: 0,
    prefinished: false,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    errored: false,
    bufferedRequestCount: 0,
    corkedRequestsFree: {
      next: null,
      entry: null,
      finish: [Function: bound onCorkedFinish]
    }
  },
  writable: true,
  allowHalfOpen: true,
  _sockname: null,
  _pendingData: null,
  _pendingEncoding: '',
  server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 2,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  _server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 2,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  parser: HTTPParser {
    '0': [Function: parserOnHeaders],
    '1': [Function: parserOnHeadersComplete],
    '2': [Function: parserOnBody],
    '3': [Function: parserOnMessageComplete],
    '4': [Function: bound onParserExecute],
    _headers: [],
    _url: '',
    socket: [Circular *2],
    incoming: null,
    outgoing: null,
    maxHeaderPairs: 2000,
    _consumed: true,
    onIncoming: [Function: bound parserOnIncoming],
    parsingHeadersStart: 1585717592763
  },
  on: [Function: socketListenerWrap],
  addListener: [Function: socketListenerWrap],
  prependListener: [Function: socketListenerWrap],
  _paused: false,
  [Symbol(asyncId)]: 73,
  [Symbol(kHandle)]: TCP {
    reading: true,
    onconnection: null,
    _consumed: true,
    [Symbol(owner)]: [Circular *2]
  },
  [Symbol(kSetNoDelay)]: false,
  [Symbol(lastWriteQueueSize)]: 0,
  [Symbol(timeout)]: null,
  [Symbol(kBuffer)]: null,
  [Symbol(kBufferCb)]: null,
  [Symbol(kBufferGen)]: null,
  [Symbol(kCapture)]: false,
  [Symbol(kBytesRead)]: 0,
  [Symbol(kBytesWritten)]: 0
}

====Tue Mar 31 2020 22:06:32 ====
GET /accounts/

====Tue Mar 31 2020 22:06:32 ====
RESPONSE [object Object]

====Tue Mar 31 2020 22:06:32 ====
RESPONSE {"accounts":["account1","account2","account3"]}

====Tue Mar 31 2020 22:09:18 ====
undefined

====Tue Mar 31 2020 22:09:25 ====
undefined

====Tue Mar 31 2020 22:09:32 ====
<ref *2> Socket {
  connecting: false,
  _hadError: false,
  _parent: null,
  _host: null,
  _readableState: ReadableState {
    objectMode: false,
    highWaterMark: 16384,
    buffer: BufferList { head: null, tail: null, length: 0 },
    length: 0,
    pipes: [],
    flowing: true,
    ended: false,
    endEmitted: false,
    reading: true,
    sync: false,
    needReadable: true,
    emittedReadable: false,
    readableListening: false,
    resumeScheduled: true,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    destroyed: false,
    defaultEncoding: 'utf8',
    awaitDrainWriters: null,
    multiAwaitDrain: false,
    readingMore: false,
    decoder: null,
    encoding: null,
    [Symbol(kPaused)]: false
  },
  readable: true,
  _events: [Object: null prototype] {
    end: [ [Function: onReadableStreamEnd], [Function: bound socketOnEnd] ],
    timeout: [Function: socketOnTimeout],
    data: [Function: bound socketOnData],
    error: [Function: socketOnError],
    close: [Function: bound socketOnClose],
    drain: [Function: bound socketOnDrain],
    resume: [Function: onSocketResume],
    pause: [Function: onSocketPause]
  },
  _eventsCount: 8,
  _maxListeners: undefined,
  _writableState: WritableState {
    objectMode: false,
    highWaterMark: 16384,
    finalCalled: false,
    needDrain: false,
    ending: false,
    ended: false,
    finished: false,
    destroyed: false,
    decodeStrings: false,
    defaultEncoding: 'utf8',
    length: 0,
    writing: false,
    corked: 0,
    sync: true,
    bufferProcessing: false,
    onwrite: [Function: bound onwrite],
    writecb: null,
    writelen: 0,
    afterWriteTickInfo: null,
    bufferedRequest: null,
    lastBufferedRequest: null,
    pendingcb: 0,
    prefinished: false,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    errored: false,
    bufferedRequestCount: 0,
    corkedRequestsFree: {
      next: null,
      entry: null,
      finish: [Function: bound onCorkedFinish]
    }
  },
  writable: true,
  allowHalfOpen: true,
  _sockname: null,
  _pendingData: null,
  _pendingEncoding: '',
  server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 1,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  _server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 1,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  parser: HTTPParser {
    '0': [Function: parserOnHeaders],
    '1': [Function: parserOnHeadersComplete],
    '2': [Function: parserOnBody],
    '3': [Function: parserOnMessageComplete],
    '4': [Function: bound onParserExecute],
    _headers: [],
    _url: '',
    socket: [Circular *2],
    incoming: null,
    outgoing: null,
    maxHeaderPairs: 2000,
    _consumed: true,
    onIncoming: [Function: bound parserOnIncoming],
    parsingHeadersStart: 1585717772091
  },
  on: [Function: socketListenerWrap],
  addListener: [Function: socketListenerWrap],
  prependListener: [Function: socketListenerWrap],
  _paused: false,
  [Symbol(asyncId)]: 10,
  [Symbol(kHandle)]: TCP {
    reading: true,
    onconnection: null,
    _consumed: true,
    [Symbol(owner)]: [Circular *2]
  },
  [Symbol(kSetNoDelay)]: false,
  [Symbol(lastWriteQueueSize)]: 0,
  [Symbol(timeout)]: null,
  [Symbol(kBuffer)]: null,
  [Symbol(kBufferCb)]: null,
  [Symbol(kBufferGen)]: null,
  [Symbol(kCapture)]: false,
  [Symbol(kBytesRead)]: 0,
  [Symbol(kBytesWritten)]: 0
}

====Tue Mar 31 2020 22:09:32 ====
<ref *2> Socket {
  connecting: false,
  _hadError: false,
  _parent: null,
  _host: null,
  _readableState: ReadableState {
    objectMode: false,
    highWaterMark: 16384,
    buffer: BufferList { head: null, tail: null, length: 0 },
    length: 0,
    pipes: [],
    flowing: true,
    ended: false,
    endEmitted: false,
    reading: true,
    sync: false,
    needReadable: true,
    emittedReadable: false,
    readableListening: false,
    resumeScheduled: true,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    destroyed: false,
    defaultEncoding: 'utf8',
    awaitDrainWriters: null,
    multiAwaitDrain: false,
    readingMore: false,
    decoder: null,
    encoding: null,
    [Symbol(kPaused)]: false
  },
  readable: true,
  _events: [Object: null prototype] {
    end: [ [Function: onReadableStreamEnd], [Function: bound socketOnEnd] ],
    timeout: [Function: socketOnTimeout],
    data: [Function: bound socketOnData],
    error: [Function: socketOnError],
    close: [Function: bound socketOnClose],
    drain: [Function: bound socketOnDrain],
    resume: [Function: onSocketResume],
    pause: [Function: onSocketPause]
  },
  _eventsCount: 8,
  _maxListeners: undefined,
  _writableState: WritableState {
    objectMode: false,
    highWaterMark: 16384,
    finalCalled: false,
    needDrain: false,
    ending: false,
    ended: false,
    finished: false,
    destroyed: false,
    decodeStrings: false,
    defaultEncoding: 'utf8',
    length: 0,
    writing: false,
    corked: 0,
    sync: true,
    bufferProcessing: false,
    onwrite: [Function: bound onwrite],
    writecb: null,
    writelen: 0,
    afterWriteTickInfo: null,
    bufferedRequest: null,
    lastBufferedRequest: null,
    pendingcb: 0,
    prefinished: false,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    errored: false,
    bufferedRequestCount: 0,
    corkedRequestsFree: {
      next: null,
      entry: null,
      finish: [Function: bound onCorkedFinish]
    }
  },
  writable: true,
  allowHalfOpen: true,
  _sockname: null,
  _pendingData: null,
  _pendingEncoding: '',
  server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 2,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  _server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 2,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  parser: HTTPParser {
    '0': [Function: parserOnHeaders],
    '1': [Function: parserOnHeadersComplete],
    '2': [Function: parserOnBody],
    '3': [Function: parserOnMessageComplete],
    '4': [Function: bound onParserExecute],
    _headers: [],
    _url: '',
    socket: [Circular *2],
    incoming: null,
    outgoing: null,
    maxHeaderPairs: 2000,
    _consumed: true,
    onIncoming: [Function: bound parserOnIncoming],
    parsingHeadersStart: 1585717772091
  },
  on: [Function: socketListenerWrap],
  addListener: [Function: socketListenerWrap],
  prependListener: [Function: socketListenerWrap],
  _paused: false,
  [Symbol(asyncId)]: 15,
  [Symbol(kHandle)]: TCP {
    reading: true,
    onconnection: null,
    _consumed: true,
    [Symbol(owner)]: [Circular *2]
  },
  [Symbol(kSetNoDelay)]: false,
  [Symbol(lastWriteQueueSize)]: 0,
  [Symbol(timeout)]: null,
  [Symbol(kBuffer)]: null,
  [Symbol(kBufferCb)]: null,
  [Symbol(kBufferGen)]: null,
  [Symbol(kCapture)]: false,
  [Symbol(kBytesRead)]: 0,
  [Symbol(kBytesWritten)]: 0
}

====Tue Mar 31 2020 22:09:32 ====
GET /accounts/

====Tue Mar 31 2020 22:09:32 ====
testing

====Tue Mar 31 2020 22:09:32 ====
RESPONSE [object Object]

====Tue Mar 31 2020 22:09:32 ====
RESPONSE {"accounts":["account1","account2","account3"]}

====Tue Mar 31 2020 22:10:09 ====
<ref *2> Socket {
  connecting: false,
  _hadError: false,
  _parent: null,
  _host: null,
  _readableState: ReadableState {
    objectMode: false,
    highWaterMark: 16384,
    buffer: BufferList { head: null, tail: null, length: 0 },
    length: 0,
    pipes: [],
    flowing: true,
    ended: false,
    endEmitted: false,
    reading: true,
    sync: false,
    needReadable: true,
    emittedReadable: false,
    readableListening: false,
    resumeScheduled: true,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    destroyed: false,
    defaultEncoding: 'utf8',
    awaitDrainWriters: null,
    multiAwaitDrain: false,
    readingMore: false,
    decoder: null,
    encoding: null,
    [Symbol(kPaused)]: false
  },
  readable: true,
  _events: [Object: null prototype] {
    end: [ [Function: onReadableStreamEnd], [Function: bound socketOnEnd] ],
    timeout: [Function: socketOnTimeout],
    data: [Function: bound socketOnData],
    error: [Function: socketOnError],
    close: [Function: bound socketOnClose],
    drain: [Function: bound socketOnDrain],
    resume: [Function: onSocketResume],
    pause: [Function: onSocketPause]
  },
  _eventsCount: 8,
  _maxListeners: undefined,
  _writableState: WritableState {
    objectMode: false,
    highWaterMark: 16384,
    finalCalled: false,
    needDrain: false,
    ending: false,
    ended: false,
    finished: false,
    destroyed: false,
    decodeStrings: false,
    defaultEncoding: 'utf8',
    length: 0,
    writing: false,
    corked: 0,
    sync: true,
    bufferProcessing: false,
    onwrite: [Function: bound onwrite],
    writecb: null,
    writelen: 0,
    afterWriteTickInfo: null,
    bufferedRequest: null,
    lastBufferedRequest: null,
    pendingcb: 0,
    prefinished: false,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    errored: false,
    bufferedRequestCount: 0,
    corkedRequestsFree: {
      next: null,
      entry: null,
      finish: [Function: bound onCorkedFinish]
    }
  },
  writable: true,
  allowHalfOpen: true,
  _sockname: null,
  _pendingData: null,
  _pendingEncoding: '',
  server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 2,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  _server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 2,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  parser: HTTPParser {
    '0': [Function: parserOnHeaders],
    '1': [Function: parserOnHeadersComplete],
    '2': [Function: parserOnBody],
    '3': [Function: parserOnMessageComplete],
    '4': [Function: bound onParserExecute],
    _headers: [],
    _url: '',
    socket: [Circular *2],
    incoming: null,
    outgoing: null,
    maxHeaderPairs: 2000,
    _consumed: true,
    onIncoming: [Function: bound parserOnIncoming],
    parsingHeadersStart: 1585717809635
  },
  on: [Function: socketListenerWrap],
  addListener: [Function: socketListenerWrap],
  prependListener: [Function: socketListenerWrap],
  _paused: false,
  [Symbol(asyncId)]: 33,
  [Symbol(kHandle)]: TCP {
    reading: true,
    onconnection: null,
    _consumed: true,
    [Symbol(owner)]: [Circular *2]
  },
  [Symbol(kSetNoDelay)]: false,
  [Symbol(lastWriteQueueSize)]: 0,
  [Symbol(timeout)]: null,
  [Symbol(kBuffer)]: null,
  [Symbol(kBufferCb)]: null,
  [Symbol(kBufferGen)]: null,
  [Symbol(kCapture)]: false,
  [Symbol(kBytesRead)]: 0,
  [Symbol(kBytesWritten)]: 0
}

====Tue Mar 31 2020 22:10:09 ====
<ref *2> Socket {
  connecting: false,
  _hadError: false,
  _parent: null,
  _host: null,
  _readableState: ReadableState {
    objectMode: false,
    highWaterMark: 16384,
    buffer: BufferList { head: null, tail: null, length: 0 },
    length: 0,
    pipes: [],
    flowing: true,
    ended: false,
    endEmitted: false,
    reading: true,
    sync: false,
    needReadable: true,
    emittedReadable: false,
    readableListening: false,
    resumeScheduled: true,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    destroyed: false,
    defaultEncoding: 'utf8',
    awaitDrainWriters: null,
    multiAwaitDrain: false,
    readingMore: false,
    decoder: null,
    encoding: null,
    [Symbol(kPaused)]: false
  },
  readable: true,
  _events: [Object: null prototype] {
    end: [ [Function: onReadableStreamEnd], [Function: bound socketOnEnd] ],
    timeout: [Function: socketOnTimeout],
    data: [Function: bound socketOnData],
    error: [Function: socketOnError],
    close: [Function: bound socketOnClose],
    drain: [Function: bound socketOnDrain],
    resume: [Function: onSocketResume],
    pause: [Function: onSocketPause]
  },
  _eventsCount: 8,
  _maxListeners: undefined,
  _writableState: WritableState {
    objectMode: false,
    highWaterMark: 16384,
    finalCalled: false,
    needDrain: false,
    ending: false,
    ended: false,
    finished: false,
    destroyed: false,
    decodeStrings: false,
    defaultEncoding: 'utf8',
    length: 0,
    writing: false,
    corked: 0,
    sync: true,
    bufferProcessing: false,
    onwrite: [Function: bound onwrite],
    writecb: null,
    writelen: 0,
    afterWriteTickInfo: null,
    bufferedRequest: null,
    lastBufferedRequest: null,
    pendingcb: 0,
    prefinished: false,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    errored: false,
    bufferedRequestCount: 0,
    corkedRequestsFree: {
      next: null,
      entry: null,
      finish: [Function: bound onCorkedFinish]
    }
  },
  writable: true,
  allowHalfOpen: true,
  _sockname: null,
  _pendingData: null,
  _pendingEncoding: '',
  server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 3,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  _server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 3,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  parser: HTTPParser {
    '0': [Function: parserOnHeaders],
    '1': [Function: parserOnHeadersComplete],
    '2': [Function: parserOnBody],
    '3': [Function: parserOnMessageComplete],
    '4': [Function: bound onParserExecute],
    _headers: [],
    _url: '',
    socket: [Circular *2],
    incoming: null,
    outgoing: null,
    maxHeaderPairs: 2000,
    _consumed: true,
    onIncoming: [Function: bound parserOnIncoming],
    parsingHeadersStart: 1585717809635
  },
  on: [Function: socketListenerWrap],
  addListener: [Function: socketListenerWrap],
  prependListener: [Function: socketListenerWrap],
  _paused: false,
  [Symbol(asyncId)]: 38,
  [Symbol(kHandle)]: TCP {
    reading: true,
    onconnection: null,
    _consumed: true,
    [Symbol(owner)]: [Circular *2]
  },
  [Symbol(kSetNoDelay)]: false,
  [Symbol(lastWriteQueueSize)]: 0,
  [Symbol(timeout)]: null,
  [Symbol(kBuffer)]: null,
  [Symbol(kBufferCb)]: null,
  [Symbol(kBufferGen)]: null,
  [Symbol(kCapture)]: false,
  [Symbol(kBytesRead)]: 0,
  [Symbol(kBytesWritten)]: 0
}

====Tue Mar 31 2020 22:10:09 ====
GET /accounts/

====Tue Mar 31 2020 22:10:09 ====
testing

====Tue Mar 31 2020 22:10:09 ====
RESPONSE [object Object]

====Tue Mar 31 2020 22:10:09 ====
RESPONSE {"accounts":["account1","account2","account3"]}

====Tue Mar 31 2020 22:11:06 ====
undefined

====Tue Mar 31 2020 22:11:08 ====
<ref *2> Socket {
  connecting: false,
  _hadError: false,
  _parent: null,
  _host: null,
  _readableState: ReadableState {
    objectMode: false,
    highWaterMark: 16384,
    buffer: BufferList { head: null, tail: null, length: 0 },
    length: 0,
    pipes: [],
    flowing: true,
    ended: false,
    endEmitted: false,
    reading: true,
    sync: false,
    needReadable: true,
    emittedReadable: false,
    readableListening: false,
    resumeScheduled: true,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    destroyed: false,
    defaultEncoding: 'utf8',
    awaitDrainWriters: null,
    multiAwaitDrain: false,
    readingMore: false,
    decoder: null,
    encoding: null,
    [Symbol(kPaused)]: false
  },
  readable: true,
  _events: [Object: null prototype] {
    end: [ [Function: onReadableStreamEnd], [Function: bound socketOnEnd] ],
    timeout: [Function: socketOnTimeout],
    data: [Function: bound socketOnData],
    error: [Function: socketOnError],
    close: [Function: bound socketOnClose],
    drain: [Function: bound socketOnDrain],
    resume: [Function: onSocketResume],
    pause: [Function: onSocketPause]
  },
  _eventsCount: 8,
  _maxListeners: undefined,
  _writableState: WritableState {
    objectMode: false,
    highWaterMark: 16384,
    finalCalled: false,
    needDrain: false,
    ending: false,
    ended: false,
    finished: false,
    destroyed: false,
    decodeStrings: false,
    defaultEncoding: 'utf8',
    length: 0,
    writing: false,
    corked: 0,
    sync: true,
    bufferProcessing: false,
    onwrite: [Function: bound onwrite],
    writecb: null,
    writelen: 0,
    afterWriteTickInfo: null,
    bufferedRequest: null,
    lastBufferedRequest: null,
    pendingcb: 0,
    prefinished: false,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    errored: false,
    bufferedRequestCount: 0,
    corkedRequestsFree: {
      next: null,
      entry: null,
      finish: [Function: bound onCorkedFinish]
    }
  },
  writable: true,
  allowHalfOpen: true,
  _sockname: null,
  _pendingData: null,
  _pendingEncoding: '',
  server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 1,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  _server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 1,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  parser: HTTPParser {
    '0': [Function: parserOnHeaders],
    '1': [Function: parserOnHeadersComplete],
    '2': [Function: parserOnBody],
    '3': [Function: parserOnMessageComplete],
    '4': [Function: bound onParserExecute],
    _headers: [],
    _url: '',
    socket: [Circular *2],
    incoming: null,
    outgoing: null,
    maxHeaderPairs: 2000,
    _consumed: true,
    onIncoming: [Function: bound parserOnIncoming],
    parsingHeadersStart: 1585717868815
  },
  on: [Function: socketListenerWrap],
  addListener: [Function: socketListenerWrap],
  prependListener: [Function: socketListenerWrap],
  _paused: false,
  [Symbol(asyncId)]: 10,
  [Symbol(kHandle)]: TCP {
    reading: true,
    onconnection: null,
    _consumed: true,
    [Symbol(owner)]: [Circular *2]
  },
  [Symbol(kSetNoDelay)]: false,
  [Symbol(lastWriteQueueSize)]: 0,
  [Symbol(timeout)]: null,
  [Symbol(kBuffer)]: null,
  [Symbol(kBufferCb)]: null,
  [Symbol(kBufferGen)]: null,
  [Symbol(kCapture)]: false,
  [Symbol(kBytesRead)]: 0,
  [Symbol(kBytesWritten)]: 0
}

====Tue Mar 31 2020 22:11:08 ====
<ref *2> Socket {
  connecting: false,
  _hadError: false,
  _parent: null,
  _host: null,
  _readableState: ReadableState {
    objectMode: false,
    highWaterMark: 16384,
    buffer: BufferList { head: null, tail: null, length: 0 },
    length: 0,
    pipes: [],
    flowing: true,
    ended: false,
    endEmitted: false,
    reading: true,
    sync: false,
    needReadable: true,
    emittedReadable: false,
    readableListening: false,
    resumeScheduled: true,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    destroyed: false,
    defaultEncoding: 'utf8',
    awaitDrainWriters: null,
    multiAwaitDrain: false,
    readingMore: false,
    decoder: null,
    encoding: null,
    [Symbol(kPaused)]: false
  },
  readable: true,
  _events: [Object: null prototype] {
    end: [ [Function: onReadableStreamEnd], [Function: bound socketOnEnd] ],
    timeout: [Function: socketOnTimeout],
    data: [Function: bound socketOnData],
    error: [Function: socketOnError],
    close: [Function: bound socketOnClose],
    drain: [Function: bound socketOnDrain],
    resume: [Function: onSocketResume],
    pause: [Function: onSocketPause]
  },
  _eventsCount: 8,
  _maxListeners: undefined,
  _writableState: WritableState {
    objectMode: false,
    highWaterMark: 16384,
    finalCalled: false,
    needDrain: false,
    ending: false,
    ended: false,
    finished: false,
    destroyed: false,
    decodeStrings: false,
    defaultEncoding: 'utf8',
    length: 0,
    writing: false,
    corked: 0,
    sync: true,
    bufferProcessing: false,
    onwrite: [Function: bound onwrite],
    writecb: null,
    writelen: 0,
    afterWriteTickInfo: null,
    bufferedRequest: null,
    lastBufferedRequest: null,
    pendingcb: 0,
    prefinished: false,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    errored: false,
    bufferedRequestCount: 0,
    corkedRequestsFree: {
      next: null,
      entry: null,
      finish: [Function: bound onCorkedFinish]
    }
  },
  writable: true,
  allowHalfOpen: true,
  _sockname: null,
  _pendingData: null,
  _pendingEncoding: '',
  server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 2,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  _server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 2,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  parser: HTTPParser {
    '0': [Function: parserOnHeaders],
    '1': [Function: parserOnHeadersComplete],
    '2': [Function: parserOnBody],
    '3': [Function: parserOnMessageComplete],
    '4': [Function: bound onParserExecute],
    _headers: [],
    _url: '',
    socket: [Circular *2],
    incoming: null,
    outgoing: null,
    maxHeaderPairs: 2000,
    _consumed: true,
    onIncoming: [Function: bound parserOnIncoming],
    parsingHeadersStart: 1585717868815
  },
  on: [Function: socketListenerWrap],
  addListener: [Function: socketListenerWrap],
  prependListener: [Function: socketListenerWrap],
  _paused: false,
  [Symbol(asyncId)]: 15,
  [Symbol(kHandle)]: TCP {
    reading: true,
    onconnection: null,
    _consumed: true,
    [Symbol(owner)]: [Circular *2]
  },
  [Symbol(kSetNoDelay)]: false,
  [Symbol(lastWriteQueueSize)]: 0,
  [Symbol(timeout)]: null,
  [Symbol(kBuffer)]: null,
  [Symbol(kBufferCb)]: null,
  [Symbol(kBufferGen)]: null,
  [Symbol(kCapture)]: false,
  [Symbol(kBytesRead)]: 0,
  [Symbol(kBytesWritten)]: 0
}

====Tue Mar 31 2020 22:11:08 ====
GET /accounts/

====Tue Mar 31 2020 22:11:08 ====
testing

====Tue Mar 31 2020 22:11:08 ====
RESPONSE [object Object],[object Object],[object Object],[object Object],[object Object]

====Tue Mar 31 2020 22:11:08 ====
RESPONSE [{"id":1,"username":"ProRobinHoodTr1","password":"Impossible123!!2","email":"jaledarely","phone":"9165178775","followers":786,"type":"promoImage","following":4998,"owner":1},{"id":2,"username":"StockJesus","password":"Impossible123","email":"robbrandon02","phone":"9165178775","followers":1262,"type":"promoText","following":5001,"owner":1},{"id":3,"username":"joo11244620","password":"Impossible123!!!","email":"abrahaminiguez06@gmail.com","phone":"9165178775","followers":660,"type":null,"following":5000,"owner":1},{"id":5,"username":"MarkZion19","password":"Impossible123!!","email":"teresainiguez12345","phone":"9165178775","followers":0,"type":null,"following":0,"owner":1},{"id":6,"username":"johnson_maximum","password":"Impossible123!","email":null,"phone":"9165178775","followers":160,"type":null,"following":1289,"owner":1}]

====Tue Mar 31 2020 22:11:31 ====
undefined

====Tue Mar 31 2020 22:13:12 ====
undefined

====Tue Mar 31 2020 22:13:16 ====
<ref *2> Socket {
  connecting: false,
  _hadError: false,
  _parent: null,
  _host: null,
  _readableState: ReadableState {
    objectMode: false,
    highWaterMark: 16384,
    buffer: BufferList { head: null, tail: null, length: 0 },
    length: 0,
    pipes: [],
    flowing: true,
    ended: false,
    endEmitted: false,
    reading: true,
    sync: false,
    needReadable: true,
    emittedReadable: false,
    readableListening: false,
    resumeScheduled: true,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    destroyed: false,
    defaultEncoding: 'utf8',
    awaitDrainWriters: null,
    multiAwaitDrain: false,
    readingMore: false,
    decoder: null,
    encoding: null,
    [Symbol(kPaused)]: false
  },
  readable: true,
  _events: [Object: null prototype] {
    end: [ [Function: onReadableStreamEnd], [Function: bound socketOnEnd] ],
    timeout: [Function: socketOnTimeout],
    data: [Function: bound socketOnData],
    error: [Function: socketOnError],
    close: [Function: bound socketOnClose],
    drain: [Function: bound socketOnDrain],
    resume: [Function: onSocketResume],
    pause: [Function: onSocketPause]
  },
  _eventsCount: 8,
  _maxListeners: undefined,
  _writableState: WritableState {
    objectMode: false,
    highWaterMark: 16384,
    finalCalled: false,
    needDrain: false,
    ending: false,
    ended: false,
    finished: false,
    destroyed: false,
    decodeStrings: false,
    defaultEncoding: 'utf8',
    length: 0,
    writing: false,
    corked: 0,
    sync: true,
    bufferProcessing: false,
    onwrite: [Function: bound onwrite],
    writecb: null,
    writelen: 0,
    afterWriteTickInfo: null,
    bufferedRequest: null,
    lastBufferedRequest: null,
    pendingcb: 0,
    prefinished: false,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    errored: false,
    bufferedRequestCount: 0,
    corkedRequestsFree: {
      next: null,
      entry: null,
      finish: [Function: bound onCorkedFinish]
    }
  },
  writable: true,
  allowHalfOpen: true,
  _sockname: null,
  _pendingData: null,
  _pendingEncoding: '',
  server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 1,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  _server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 1,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  parser: HTTPParser {
    '0': [Function: parserOnHeaders],
    '1': [Function: parserOnHeadersComplete],
    '2': [Function: parserOnBody],
    '3': [Function: parserOnMessageComplete],
    '4': [Function: bound onParserExecute],
    _headers: [],
    _url: '',
    socket: [Circular *2],
    incoming: null,
    outgoing: null,
    maxHeaderPairs: 2000,
    _consumed: true,
    onIncoming: [Function: bound parserOnIncoming],
    parsingHeadersStart: 1585717996327
  },
  on: [Function: socketListenerWrap],
  addListener: [Function: socketListenerWrap],
  prependListener: [Function: socketListenerWrap],
  _paused: false,
  [Symbol(asyncId)]: 10,
  [Symbol(kHandle)]: TCP {
    reading: true,
    onconnection: null,
    _consumed: true,
    [Symbol(owner)]: [Circular *2]
  },
  [Symbol(kSetNoDelay)]: false,
  [Symbol(lastWriteQueueSize)]: 0,
  [Symbol(timeout)]: null,
  [Symbol(kBuffer)]: null,
  [Symbol(kBufferCb)]: null,
  [Symbol(kBufferGen)]: null,
  [Symbol(kCapture)]: false,
  [Symbol(kBytesRead)]: 0,
  [Symbol(kBytesWritten)]: 0
}

====Tue Mar 31 2020 22:13:16 ====
<ref *2> Socket {
  connecting: false,
  _hadError: false,
  _parent: null,
  _host: null,
  _readableState: ReadableState {
    objectMode: false,
    highWaterMark: 16384,
    buffer: BufferList { head: null, tail: null, length: 0 },
    length: 0,
    pipes: [],
    flowing: true,
    ended: false,
    endEmitted: false,
    reading: true,
    sync: false,
    needReadable: true,
    emittedReadable: false,
    readableListening: false,
    resumeScheduled: true,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    destroyed: false,
    defaultEncoding: 'utf8',
    awaitDrainWriters: null,
    multiAwaitDrain: false,
    readingMore: false,
    decoder: null,
    encoding: null,
    [Symbol(kPaused)]: false
  },
  readable: true,
  _events: [Object: null prototype] {
    end: [ [Function: onReadableStreamEnd], [Function: bound socketOnEnd] ],
    timeout: [Function: socketOnTimeout],
    data: [Function: bound socketOnData],
    error: [Function: socketOnError],
    close: [Function: bound socketOnClose],
    drain: [Function: bound socketOnDrain],
    resume: [Function: onSocketResume],
    pause: [Function: onSocketPause]
  },
  _eventsCount: 8,
  _maxListeners: undefined,
  _writableState: WritableState {
    objectMode: false,
    highWaterMark: 16384,
    finalCalled: false,
    needDrain: false,
    ending: false,
    ended: false,
    finished: false,
    destroyed: false,
    decodeStrings: false,
    defaultEncoding: 'utf8',
    length: 0,
    writing: false,
    corked: 0,
    sync: true,
    bufferProcessing: false,
    onwrite: [Function: bound onwrite],
    writecb: null,
    writelen: 0,
    afterWriteTickInfo: null,
    bufferedRequest: null,
    lastBufferedRequest: null,
    pendingcb: 0,
    prefinished: false,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    errored: false,
    bufferedRequestCount: 0,
    corkedRequestsFree: {
      next: null,
      entry: null,
      finish: [Function: bound onCorkedFinish]
    }
  },
  writable: true,
  allowHalfOpen: true,
  _sockname: null,
  _pendingData: null,
  _pendingEncoding: '',
  server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 2,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  _server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 2,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  parser: HTTPParser {
    '0': [Function: parserOnHeaders],
    '1': [Function: parserOnHeadersComplete],
    '2': [Function: parserOnBody],
    '3': [Function: parserOnMessageComplete],
    '4': [Function: bound onParserExecute],
    _headers: [],
    _url: '',
    socket: [Circular *2],
    incoming: null,
    outgoing: null,
    maxHeaderPairs: 2000,
    _consumed: true,
    onIncoming: [Function: bound parserOnIncoming],
    parsingHeadersStart: 1585717996327
  },
  on: [Function: socketListenerWrap],
  addListener: [Function: socketListenerWrap],
  prependListener: [Function: socketListenerWrap],
  _paused: false,
  [Symbol(asyncId)]: 15,
  [Symbol(kHandle)]: TCP {
    reading: true,
    onconnection: null,
    _consumed: true,
    [Symbol(owner)]: [Circular *2]
  },
  [Symbol(kSetNoDelay)]: false,
  [Symbol(lastWriteQueueSize)]: 0,
  [Symbol(timeout)]: null,
  [Symbol(kBuffer)]: null,
  [Symbol(kBufferCb)]: null,
  [Symbol(kBufferGen)]: null,
  [Symbol(kCapture)]: false,
  [Symbol(kBytesRead)]: 0,
  [Symbol(kBytesWritten)]: 0
}

====Tue Mar 31 2020 22:13:16 ====
GET /accounts/

====Tue Mar 31 2020 22:13:16 ====
RESPONSE [object Object],[object Object],[object Object],[object Object],[object Object]

====Tue Mar 31 2020 22:13:16 ====
RESPONSE [{"id":1,"username":"ProRobinHoodTr1","password":"Impossible123!!2","email":"jaledarely","phone":"9165178775","followers":786,"type":"promoImage","following":4998,"owner":1},{"id":2,"username":"StockJesus","password":"Impossible123","email":"robbrandon02","phone":"9165178775","followers":1262,"type":"promoText","following":5001,"owner":1},{"id":3,"username":"joo11244620","password":"Impossible123!!!","email":"abrahaminiguez06@gmail.com","phone":"9165178775","followers":660,"type":null,"following":5000,"owner":1},{"id":5,"username":"MarkZion19","password":"Impossible123!!","email":"teresainiguez12345","phone":"9165178775","followers":0,"type":null,"following":0,"owner":1},{"id":6,"username":"johnson_maximum","password":"Impossible123!","email":null,"phone":"9165178775","followers":160,"type":null,"following":1289,"owner":1}]

====Tue Mar 31 2020 22:13:17 ====
GET /accounts/

====Tue Mar 31 2020 22:13:17 ====
RESPONSE [object Object],[object Object],[object Object],[object Object],[object Object]

====Tue Mar 31 2020 22:13:17 ====
RESPONSE [{"id":1,"username":"ProRobinHoodTr1","password":"Impossible123!!2","email":"jaledarely","phone":"9165178775","followers":786,"type":"promoImage","following":4998,"owner":1},{"id":2,"username":"StockJesus","password":"Impossible123","email":"robbrandon02","phone":"9165178775","followers":1262,"type":"promoText","following":5001,"owner":1},{"id":3,"username":"joo11244620","password":"Impossible123!!!","email":"abrahaminiguez06@gmail.com","phone":"9165178775","followers":660,"type":null,"following":5000,"owner":1},{"id":5,"username":"MarkZion19","password":"Impossible123!!","email":"teresainiguez12345","phone":"9165178775","followers":0,"type":null,"following":0,"owner":1},{"id":6,"username":"johnson_maximum","password":"Impossible123!","email":null,"phone":"9165178775","followers":160,"type":null,"following":1289,"owner":1}]

====Tue Mar 31 2020 22:13:27 ====
<ref *2> Socket {
  connecting: false,
  _hadError: false,
  _parent: null,
  _host: null,
  _readableState: ReadableState {
    objectMode: false,
    highWaterMark: 16384,
    buffer: BufferList { head: null, tail: null, length: 0 },
    length: 0,
    pipes: [],
    flowing: true,
    ended: false,
    endEmitted: false,
    reading: true,
    sync: false,
    needReadable: true,
    emittedReadable: false,
    readableListening: false,
    resumeScheduled: true,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    destroyed: false,
    defaultEncoding: 'utf8',
    awaitDrainWriters: null,
    multiAwaitDrain: false,
    readingMore: false,
    decoder: null,
    encoding: null,
    [Symbol(kPaused)]: false
  },
  readable: true,
  _events: [Object: null prototype] {
    end: [ [Function: onReadableStreamEnd], [Function: bound socketOnEnd] ],
    timeout: [Function: socketOnTimeout],
    data: [Function: bound socketOnData],
    error: [Function: socketOnError],
    close: [Function: bound socketOnClose],
    drain: [Function: bound socketOnDrain],
    resume: [Function: onSocketResume],
    pause: [Function: onSocketPause]
  },
  _eventsCount: 8,
  _maxListeners: undefined,
  _writableState: WritableState {
    objectMode: false,
    highWaterMark: 16384,
    finalCalled: false,
    needDrain: false,
    ending: false,
    ended: false,
    finished: false,
    destroyed: false,
    decodeStrings: false,
    defaultEncoding: 'utf8',
    length: 0,
    writing: false,
    corked: 0,
    sync: true,
    bufferProcessing: false,
    onwrite: [Function: bound onwrite],
    writecb: null,
    writelen: 0,
    afterWriteTickInfo: null,
    bufferedRequest: null,
    lastBufferedRequest: null,
    pendingcb: 0,
    prefinished: false,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    errored: false,
    bufferedRequestCount: 0,
    corkedRequestsFree: {
      next: null,
      entry: null,
      finish: [Function: bound onCorkedFinish]
    }
  },
  writable: true,
  allowHalfOpen: true,
  _sockname: null,
  _pendingData: null,
  _pendingEncoding: '',
  server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 2,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  _server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 2,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  parser: HTTPParser {
    '0': [Function: parserOnHeaders],
    '1': [Function: parserOnHeadersComplete],
    '2': [Function: parserOnBody],
    '3': [Function: parserOnMessageComplete],
    '4': [Function: bound onParserExecute],
    _headers: [],
    _url: '',
    socket: [Circular *2],
    incoming: null,
    outgoing: null,
    maxHeaderPairs: 2000,
    _consumed: true,
    onIncoming: [Function: bound parserOnIncoming],
    parsingHeadersStart: 1585718007807
  },
  on: [Function: socketListenerWrap],
  addListener: [Function: socketListenerWrap],
  prependListener: [Function: socketListenerWrap],
  _paused: false,
  [Symbol(asyncId)]: 78,
  [Symbol(kHandle)]: TCP {
    reading: true,
    onconnection: null,
    _consumed: true,
    [Symbol(owner)]: [Circular *2]
  },
  [Symbol(kSetNoDelay)]: false,
  [Symbol(lastWriteQueueSize)]: 0,
  [Symbol(timeout)]: null,
  [Symbol(kBuffer)]: null,
  [Symbol(kBufferCb)]: null,
  [Symbol(kBufferGen)]: null,
  [Symbol(kCapture)]: false,
  [Symbol(kBytesRead)]: 0,
  [Symbol(kBytesWritten)]: 0
}

====Tue Mar 31 2020 22:13:27 ====
<ref *2> Socket {
  connecting: false,
  _hadError: false,
  _parent: null,
  _host: null,
  _readableState: ReadableState {
    objectMode: false,
    highWaterMark: 16384,
    buffer: BufferList { head: null, tail: null, length: 0 },
    length: 0,
    pipes: [],
    flowing: true,
    ended: false,
    endEmitted: false,
    reading: true,
    sync: false,
    needReadable: true,
    emittedReadable: false,
    readableListening: false,
    resumeScheduled: true,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    destroyed: false,
    defaultEncoding: 'utf8',
    awaitDrainWriters: null,
    multiAwaitDrain: false,
    readingMore: false,
    decoder: null,
    encoding: null,
    [Symbol(kPaused)]: false
  },
  readable: true,
  _events: [Object: null prototype] {
    end: [ [Function: onReadableStreamEnd], [Function: bound socketOnEnd] ],
    timeout: [Function: socketOnTimeout],
    data: [Function: bound socketOnData],
    error: [Function: socketOnError],
    close: [Function: bound socketOnClose],
    drain: [Function: bound socketOnDrain],
    resume: [Function: onSocketResume],
    pause: [Function: onSocketPause]
  },
  _eventsCount: 8,
  _maxListeners: undefined,
  _writableState: WritableState {
    objectMode: false,
    highWaterMark: 16384,
    finalCalled: false,
    needDrain: false,
    ending: false,
    ended: false,
    finished: false,
    destroyed: false,
    decodeStrings: false,
    defaultEncoding: 'utf8',
    length: 0,
    writing: false,
    corked: 0,
    sync: true,
    bufferProcessing: false,
    onwrite: [Function: bound onwrite],
    writecb: null,
    writelen: 0,
    afterWriteTickInfo: null,
    bufferedRequest: null,
    lastBufferedRequest: null,
    pendingcb: 0,
    prefinished: false,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    errored: false,
    bufferedRequestCount: 0,
    corkedRequestsFree: {
      next: null,
      entry: null,
      finish: [Function: bound onCorkedFinish]
    }
  },
  writable: true,
  allowHalfOpen: true,
  _sockname: null,
  _pendingData: null,
  _pendingEncoding: '',
  server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 3,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  _server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 3,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  parser: HTTPParser {
    '0': [Function: parserOnHeaders],
    '1': [Function: parserOnHeadersComplete],
    '2': [Function: parserOnBody],
    '3': [Function: parserOnMessageComplete],
    '4': [Function: bound onParserExecute],
    _headers: [],
    _url: '',
    socket: [Circular *2],
    incoming: null,
    outgoing: null,
    maxHeaderPairs: 2000,
    _consumed: true,
    onIncoming: [Function: bound parserOnIncoming],
    parsingHeadersStart: 1585718007807
  },
  on: [Function: socketListenerWrap],
  addListener: [Function: socketListenerWrap],
  prependListener: [Function: socketListenerWrap],
  _paused: false,
  [Symbol(asyncId)]: 83,
  [Symbol(kHandle)]: TCP {
    reading: true,
    onconnection: null,
    _consumed: true,
    [Symbol(owner)]: [Circular *2]
  },
  [Symbol(kSetNoDelay)]: false,
  [Symbol(lastWriteQueueSize)]: 0,
  [Symbol(timeout)]: null,
  [Symbol(kBuffer)]: null,
  [Symbol(kBufferCb)]: null,
  [Symbol(kBufferGen)]: null,
  [Symbol(kCapture)]: false,
  [Symbol(kBytesRead)]: 0,
  [Symbol(kBytesWritten)]: 0
}

====Tue Mar 31 2020 22:13:27 ====
GET /accounts/

====Tue Mar 31 2020 22:13:27 ====
RESPONSE [object Object],[object Object],[object Object],[object Object],[object Object]

====Tue Mar 31 2020 22:13:27 ====
RESPONSE [{"id":1,"username":"ProRobinHoodTr1","password":"Impossible123!!2","email":"jaledarely","phone":"9165178775","followers":786,"type":"promoImage","following":4998,"owner":1},{"id":2,"username":"StockJesus","password":"Impossible123","email":"robbrandon02","phone":"9165178775","followers":1262,"type":"promoText","following":5001,"owner":1},{"id":3,"username":"joo11244620","password":"Impossible123!!!","email":"abrahaminiguez06@gmail.com","phone":"9165178775","followers":660,"type":null,"following":5000,"owner":1},{"id":5,"username":"MarkZion19","password":"Impossible123!!","email":"teresainiguez12345","phone":"9165178775","followers":0,"type":null,"following":0,"owner":1},{"id":6,"username":"johnson_maximum","password":"Impossible123!","email":null,"phone":"9165178775","followers":160,"type":null,"following":1289,"owner":1}]

====Tue Mar 31 2020 22:13:38 ====
undefined

====Tue Mar 31 2020 22:13:39 ====
<ref *2> Socket {
  connecting: false,
  _hadError: false,
  _parent: null,
  _host: null,
  _readableState: ReadableState {
    objectMode: false,
    highWaterMark: 16384,
    buffer: BufferList { head: null, tail: null, length: 0 },
    length: 0,
    pipes: [],
    flowing: true,
    ended: false,
    endEmitted: false,
    reading: true,
    sync: false,
    needReadable: true,
    emittedReadable: false,
    readableListening: false,
    resumeScheduled: true,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    destroyed: false,
    defaultEncoding: 'utf8',
    awaitDrainWriters: null,
    multiAwaitDrain: false,
    readingMore: false,
    decoder: null,
    encoding: null,
    [Symbol(kPaused)]: false
  },
  readable: true,
  _events: [Object: null prototype] {
    end: [ [Function: onReadableStreamEnd], [Function: bound socketOnEnd] ],
    timeout: [Function: socketOnTimeout],
    data: [Function: bound socketOnData],
    error: [Function: socketOnError],
    close: [Function: bound socketOnClose],
    drain: [Function: bound socketOnDrain],
    resume: [Function: onSocketResume],
    pause: [Function: onSocketPause]
  },
  _eventsCount: 8,
  _maxListeners: undefined,
  _writableState: WritableState {
    objectMode: false,
    highWaterMark: 16384,
    finalCalled: false,
    needDrain: false,
    ending: false,
    ended: false,
    finished: false,
    destroyed: false,
    decodeStrings: false,
    defaultEncoding: 'utf8',
    length: 0,
    writing: false,
    corked: 0,
    sync: true,
    bufferProcessing: false,
    onwrite: [Function: bound onwrite],
    writecb: null,
    writelen: 0,
    afterWriteTickInfo: null,
    bufferedRequest: null,
    lastBufferedRequest: null,
    pendingcb: 0,
    prefinished: false,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    errored: false,
    bufferedRequestCount: 0,
    corkedRequestsFree: {
      next: null,
      entry: null,
      finish: [Function: bound onCorkedFinish]
    }
  },
  writable: true,
  allowHalfOpen: true,
  _sockname: null,
  _pendingData: null,
  _pendingEncoding: '',
  server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 1,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  _server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 1,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  parser: HTTPParser {
    '0': [Function: parserOnHeaders],
    '1': [Function: parserOnHeadersComplete],
    '2': [Function: parserOnBody],
    '3': [Function: parserOnMessageComplete],
    '4': [Function: bound onParserExecute],
    _headers: [],
    _url: '',
    socket: [Circular *2],
    incoming: null,
    outgoing: null,
    maxHeaderPairs: 2000,
    _consumed: true,
    onIncoming: [Function: bound parserOnIncoming],
    parsingHeadersStart: 1585718019008
  },
  on: [Function: socketListenerWrap],
  addListener: [Function: socketListenerWrap],
  prependListener: [Function: socketListenerWrap],
  _paused: false,
  [Symbol(asyncId)]: 10,
  [Symbol(kHandle)]: TCP {
    reading: true,
    onconnection: null,
    _consumed: true,
    [Symbol(owner)]: [Circular *2]
  },
  [Symbol(kSetNoDelay)]: false,
  [Symbol(lastWriteQueueSize)]: 0,
  [Symbol(timeout)]: null,
  [Symbol(kBuffer)]: null,
  [Symbol(kBufferCb)]: null,
  [Symbol(kBufferGen)]: null,
  [Symbol(kCapture)]: false,
  [Symbol(kBytesRead)]: 0,
  [Symbol(kBytesWritten)]: 0
}

====Tue Mar 31 2020 22:13:39 ====
<ref *2> Socket {
  connecting: false,
  _hadError: false,
  _parent: null,
  _host: null,
  _readableState: ReadableState {
    objectMode: false,
    highWaterMark: 16384,
    buffer: BufferList { head: null, tail: null, length: 0 },
    length: 0,
    pipes: [],
    flowing: true,
    ended: false,
    endEmitted: false,
    reading: true,
    sync: false,
    needReadable: true,
    emittedReadable: false,
    readableListening: false,
    resumeScheduled: true,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    destroyed: false,
    defaultEncoding: 'utf8',
    awaitDrainWriters: null,
    multiAwaitDrain: false,
    readingMore: false,
    decoder: null,
    encoding: null,
    [Symbol(kPaused)]: false
  },
  readable: true,
  _events: [Object: null prototype] {
    end: [ [Function: onReadableStreamEnd], [Function: bound socketOnEnd] ],
    timeout: [Function: socketOnTimeout],
    data: [Function: bound socketOnData],
    error: [Function: socketOnError],
    close: [Function: bound socketOnClose],
    drain: [Function: bound socketOnDrain],
    resume: [Function: onSocketResume],
    pause: [Function: onSocketPause]
  },
  _eventsCount: 8,
  _maxListeners: undefined,
  _writableState: WritableState {
    objectMode: false,
    highWaterMark: 16384,
    finalCalled: false,
    needDrain: false,
    ending: false,
    ended: false,
    finished: false,
    destroyed: false,
    decodeStrings: false,
    defaultEncoding: 'utf8',
    length: 0,
    writing: false,
    corked: 0,
    sync: true,
    bufferProcessing: false,
    onwrite: [Function: bound onwrite],
    writecb: null,
    writelen: 0,
    afterWriteTickInfo: null,
    bufferedRequest: null,
    lastBufferedRequest: null,
    pendingcb: 0,
    prefinished: false,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    errored: false,
    bufferedRequestCount: 0,
    corkedRequestsFree: {
      next: null,
      entry: null,
      finish: [Function: bound onCorkedFinish]
    }
  },
  writable: true,
  allowHalfOpen: true,
  _sockname: null,
  _pendingData: null,
  _pendingEncoding: '',
  server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 2,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  _server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 2,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  parser: HTTPParser {
    '0': [Function: parserOnHeaders],
    '1': [Function: parserOnHeadersComplete],
    '2': [Function: parserOnBody],
    '3': [Function: parserOnMessageComplete],
    '4': [Function: bound onParserExecute],
    _headers: [],
    _url: '',
    socket: [Circular *2],
    incoming: null,
    outgoing: null,
    maxHeaderPairs: 2000,
    _consumed: true,
    onIncoming: [Function: bound parserOnIncoming],
    parsingHeadersStart: 1585718019008
  },
  on: [Function: socketListenerWrap],
  addListener: [Function: socketListenerWrap],
  prependListener: [Function: socketListenerWrap],
  _paused: false,
  [Symbol(asyncId)]: 15,
  [Symbol(kHandle)]: TCP {
    reading: true,
    onconnection: null,
    _consumed: true,
    [Symbol(owner)]: [Circular *2]
  },
  [Symbol(kSetNoDelay)]: false,
  [Symbol(lastWriteQueueSize)]: 0,
  [Symbol(timeout)]: null,
  [Symbol(kBuffer)]: null,
  [Symbol(kBufferCb)]: null,
  [Symbol(kBufferGen)]: null,
  [Symbol(kCapture)]: false,
  [Symbol(kBytesRead)]: 0,
  [Symbol(kBytesWritten)]: 0
}

====Tue Mar 31 2020 22:13:39 ====
GET /accounts/

====Tue Mar 31 2020 22:13:39 ====
RESPONSE [object Object],[object Object],[object Object],[object Object],[object Object]

====Tue Mar 31 2020 22:13:39 ====
RESPONSE [{"id":1,"username":"ProRobinHoodTr1","password":"Impossible123!!2","email":"jaledarely","phone":"9165178775","followers":786,"type":"promoImage","following":4998,"owner":1},{"id":2,"username":"StockJesus","password":"Impossible123","email":"robbrandon02","phone":"9165178775","followers":1262,"type":"promoText","following":5001,"owner":1},{"id":3,"username":"joo11244620","password":"Impossible123!!!","email":"abrahaminiguez06@gmail.com","phone":"9165178775","followers":660,"type":null,"following":5000,"owner":1},{"id":5,"username":"MarkZion19","password":"Impossible123!!","email":"teresainiguez12345","phone":"9165178775","followers":0,"type":null,"following":0,"owner":1},{"id":6,"username":"johnson_maximum","password":"Impossible123!","email":null,"phone":"9165178775","followers":160,"type":null,"following":1289,"owner":1}]

====Tue Mar 31 2020 22:15:16 ====
<ref *2> Socket {
  connecting: false,
  _hadError: false,
  _parent: null,
  _host: null,
  _readableState: ReadableState {
    objectMode: false,
    highWaterMark: 16384,
    buffer: BufferList { head: null, tail: null, length: 0 },
    length: 0,
    pipes: [],
    flowing: true,
    ended: false,
    endEmitted: false,
    reading: true,
    sync: false,
    needReadable: true,
    emittedReadable: false,
    readableListening: false,
    resumeScheduled: true,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    destroyed: false,
    defaultEncoding: 'utf8',
    awaitDrainWriters: null,
    multiAwaitDrain: false,
    readingMore: false,
    decoder: null,
    encoding: null,
    [Symbol(kPaused)]: false
  },
  readable: true,
  _events: [Object: null prototype] {
    end: [ [Function: onReadableStreamEnd], [Function: bound socketOnEnd] ],
    timeout: [Function: socketOnTimeout],
    data: [Function: bound socketOnData],
    error: [Function: socketOnError],
    close: [Function: bound socketOnClose],
    drain: [Function: bound socketOnDrain],
    resume: [Function: onSocketResume],
    pause: [Function: onSocketPause]
  },
  _eventsCount: 8,
  _maxListeners: undefined,
  _writableState: WritableState {
    objectMode: false,
    highWaterMark: 16384,
    finalCalled: false,
    needDrain: false,
    ending: false,
    ended: false,
    finished: false,
    destroyed: false,
    decodeStrings: false,
    defaultEncoding: 'utf8',
    length: 0,
    writing: false,
    corked: 0,
    sync: true,
    bufferProcessing: false,
    onwrite: [Function: bound onwrite],
    writecb: null,
    writelen: 0,
    afterWriteTickInfo: null,
    bufferedRequest: null,
    lastBufferedRequest: null,
    pendingcb: 0,
    prefinished: false,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    errored: false,
    bufferedRequestCount: 0,
    corkedRequestsFree: {
      next: null,
      entry: null,
      finish: [Function: bound onCorkedFinish]
    }
  },
  writable: true,
  allowHalfOpen: true,
  _sockname: null,
  _pendingData: null,
  _pendingEncoding: '',
  server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 2,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  _server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 2,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  parser: HTTPParser {
    '0': [Function: parserOnHeaders],
    '1': [Function: parserOnHeadersComplete],
    '2': [Function: parserOnBody],
    '3': [Function: parserOnMessageComplete],
    '4': [Function: bound onParserExecute],
    _headers: [],
    _url: '',
    socket: [Circular *2],
    incoming: null,
    outgoing: null,
    maxHeaderPairs: 2000,
    _consumed: true,
    onIncoming: [Function: bound parserOnIncoming],
    parsingHeadersStart: 1585718116699
  },
  on: [Function: socketListenerWrap],
  addListener: [Function: socketListenerWrap],
  prependListener: [Function: socketListenerWrap],
  _paused: false,
  [Symbol(asyncId)]: 50,
  [Symbol(kHandle)]: TCP {
    reading: true,
    onconnection: null,
    _consumed: true,
    [Symbol(owner)]: [Circular *2]
  },
  [Symbol(kSetNoDelay)]: false,
  [Symbol(lastWriteQueueSize)]: 0,
  [Symbol(timeout)]: null,
  [Symbol(kBuffer)]: null,
  [Symbol(kBufferCb)]: null,
  [Symbol(kBufferGen)]: null,
  [Symbol(kCapture)]: false,
  [Symbol(kBytesRead)]: 0,
  [Symbol(kBytesWritten)]: 0
}

====Tue Mar 31 2020 22:15:16 ====
<ref *2> Socket {
  connecting: false,
  _hadError: false,
  _parent: null,
  _host: null,
  _readableState: ReadableState {
    objectMode: false,
    highWaterMark: 16384,
    buffer: BufferList { head: null, tail: null, length: 0 },
    length: 0,
    pipes: [],
    flowing: true,
    ended: false,
    endEmitted: false,
    reading: true,
    sync: false,
    needReadable: true,
    emittedReadable: false,
    readableListening: false,
    resumeScheduled: true,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    destroyed: false,
    defaultEncoding: 'utf8',
    awaitDrainWriters: null,
    multiAwaitDrain: false,
    readingMore: false,
    decoder: null,
    encoding: null,
    [Symbol(kPaused)]: false
  },
  readable: true,
  _events: [Object: null prototype] {
    end: [ [Function: onReadableStreamEnd], [Function: bound socketOnEnd] ],
    timeout: [Function: socketOnTimeout],
    data: [Function: bound socketOnData],
    error: [Function: socketOnError],
    close: [Function: bound socketOnClose],
    drain: [Function: bound socketOnDrain],
    resume: [Function: onSocketResume],
    pause: [Function: onSocketPause]
  },
  _eventsCount: 8,
  _maxListeners: undefined,
  _writableState: WritableState {
    objectMode: false,
    highWaterMark: 16384,
    finalCalled: false,
    needDrain: false,
    ending: false,
    ended: false,
    finished: false,
    destroyed: false,
    decodeStrings: false,
    defaultEncoding: 'utf8',
    length: 0,
    writing: false,
    corked: 0,
    sync: true,
    bufferProcessing: false,
    onwrite: [Function: bound onwrite],
    writecb: null,
    writelen: 0,
    afterWriteTickInfo: null,
    bufferedRequest: null,
    lastBufferedRequest: null,
    pendingcb: 0,
    prefinished: false,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    errored: false,
    bufferedRequestCount: 0,
    corkedRequestsFree: {
      next: null,
      entry: null,
      finish: [Function: bound onCorkedFinish]
    }
  },
  writable: true,
  allowHalfOpen: true,
  _sockname: null,
  _pendingData: null,
  _pendingEncoding: '',
  server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 3,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  _server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 3,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  parser: HTTPParser {
    '0': [Function: parserOnHeaders],
    '1': [Function: parserOnHeadersComplete],
    '2': [Function: parserOnBody],
    '3': [Function: parserOnMessageComplete],
    '4': [Function: bound onParserExecute],
    _headers: [],
    _url: '',
    socket: [Circular *2],
    incoming: null,
    outgoing: null,
    maxHeaderPairs: 2000,
    _consumed: true,
    onIncoming: [Function: bound parserOnIncoming],
    parsingHeadersStart: 1585718116699
  },
  on: [Function: socketListenerWrap],
  addListener: [Function: socketListenerWrap],
  prependListener: [Function: socketListenerWrap],
  _paused: false,
  [Symbol(asyncId)]: 55,
  [Symbol(kHandle)]: TCP {
    reading: true,
    onconnection: null,
    _consumed: true,
    [Symbol(owner)]: [Circular *2]
  },
  [Symbol(kSetNoDelay)]: false,
  [Symbol(lastWriteQueueSize)]: 0,
  [Symbol(timeout)]: null,
  [Symbol(kBuffer)]: null,
  [Symbol(kBufferCb)]: null,
  [Symbol(kBufferGen)]: null,
  [Symbol(kCapture)]: false,
  [Symbol(kBytesRead)]: 0,
  [Symbol(kBytesWritten)]: 0
}

====Tue Mar 31 2020 22:15:16 ====
GET /accounts/

====Tue Mar 31 2020 22:15:16 ====
RESPONSE [object Object],[object Object],[object Object],[object Object],[object Object]

====Tue Mar 31 2020 22:15:16 ====
RESPONSE [{"id":1,"username":"ProRobinHoodTr1","password":"Impossible123!!2","email":"jaledarely","phone":"9165178775","followers":786,"type":"promoImage","following":4998,"owner":1},{"id":2,"username":"StockJesus","password":"Impossible123","email":"robbrandon02","phone":"9165178775","followers":1262,"type":"promoText","following":5001,"owner":1},{"id":3,"username":"joo11244620","password":"Impossible123!!!","email":"abrahaminiguez06@gmail.com","phone":"9165178775","followers":660,"type":null,"following":5000,"owner":1},{"id":5,"username":"MarkZion19","password":"Impossible123!!","email":"teresainiguez12345","phone":"9165178775","followers":0,"type":null,"following":0,"owner":1},{"id":6,"username":"johnson_maximum","password":"Impossible123!","email":null,"phone":"9165178775","followers":160,"type":null,"following":1289,"owner":1}]

====Tue Mar 31 2020 22:16:03 ====
undefined

====Tue Mar 31 2020 22:16:03 ====
<ref *2> Socket {
  connecting: false,
  _hadError: false,
  _parent: null,
  _host: null,
  _readableState: ReadableState {
    objectMode: false,
    highWaterMark: 16384,
    buffer: BufferList { head: null, tail: null, length: 0 },
    length: 0,
    pipes: [],
    flowing: true,
    ended: false,
    endEmitted: false,
    reading: true,
    sync: false,
    needReadable: true,
    emittedReadable: false,
    readableListening: false,
    resumeScheduled: true,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    destroyed: false,
    defaultEncoding: 'utf8',
    awaitDrainWriters: null,
    multiAwaitDrain: false,
    readingMore: false,
    decoder: null,
    encoding: null,
    [Symbol(kPaused)]: false
  },
  readable: true,
  _events: [Object: null prototype] {
    end: [ [Function: onReadableStreamEnd], [Function: bound socketOnEnd] ],
    timeout: [Function: socketOnTimeout],
    data: [Function: bound socketOnData],
    error: [Function: socketOnError],
    close: [Function: bound socketOnClose],
    drain: [Function: bound socketOnDrain],
    resume: [Function: onSocketResume],
    pause: [Function: onSocketPause]
  },
  _eventsCount: 8,
  _maxListeners: undefined,
  _writableState: WritableState {
    objectMode: false,
    highWaterMark: 16384,
    finalCalled: false,
    needDrain: false,
    ending: false,
    ended: false,
    finished: false,
    destroyed: false,
    decodeStrings: false,
    defaultEncoding: 'utf8',
    length: 0,
    writing: false,
    corked: 0,
    sync: true,
    bufferProcessing: false,
    onwrite: [Function: bound onwrite],
    writecb: null,
    writelen: 0,
    afterWriteTickInfo: null,
    bufferedRequest: null,
    lastBufferedRequest: null,
    pendingcb: 0,
    prefinished: false,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    errored: false,
    bufferedRequestCount: 0,
    corkedRequestsFree: {
      next: null,
      entry: null,
      finish: [Function: bound onCorkedFinish]
    }
  },
  writable: true,
  allowHalfOpen: true,
  _sockname: null,
  _pendingData: null,
  _pendingEncoding: '',
  server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 1,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  _server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 1,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  parser: HTTPParser {
    '0': [Function: parserOnHeaders],
    '1': [Function: parserOnHeadersComplete],
    '2': [Function: parserOnBody],
    '3': [Function: parserOnMessageComplete],
    '4': [Function: bound onParserExecute],
    _headers: [],
    _url: '',
    socket: [Circular *2],
    incoming: null,
    outgoing: null,
    maxHeaderPairs: 2000,
    _consumed: true,
    onIncoming: [Function: bound parserOnIncoming],
    parsingHeadersStart: 1585718163274
  },
  on: [Function: socketListenerWrap],
  addListener: [Function: socketListenerWrap],
  prependListener: [Function: socketListenerWrap],
  _paused: false,
  [Symbol(asyncId)]: 10,
  [Symbol(kHandle)]: TCP {
    reading: true,
    onconnection: null,
    _consumed: true,
    [Symbol(owner)]: [Circular *2]
  },
  [Symbol(kSetNoDelay)]: false,
  [Symbol(lastWriteQueueSize)]: 0,
  [Symbol(timeout)]: null,
  [Symbol(kBuffer)]: null,
  [Symbol(kBufferCb)]: null,
  [Symbol(kBufferGen)]: null,
  [Symbol(kCapture)]: false,
  [Symbol(kBytesRead)]: 0,
  [Symbol(kBytesWritten)]: 0
}

====Tue Mar 31 2020 22:16:03 ====
<ref *2> Socket {
  connecting: false,
  _hadError: false,
  _parent: null,
  _host: null,
  _readableState: ReadableState {
    objectMode: false,
    highWaterMark: 16384,
    buffer: BufferList { head: null, tail: null, length: 0 },
    length: 0,
    pipes: [],
    flowing: true,
    ended: false,
    endEmitted: false,
    reading: true,
    sync: false,
    needReadable: true,
    emittedReadable: false,
    readableListening: false,
    resumeScheduled: true,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    destroyed: false,
    defaultEncoding: 'utf8',
    awaitDrainWriters: null,
    multiAwaitDrain: false,
    readingMore: false,
    decoder: null,
    encoding: null,
    [Symbol(kPaused)]: false
  },
  readable: true,
  _events: [Object: null prototype] {
    end: [ [Function: onReadableStreamEnd], [Function: bound socketOnEnd] ],
    timeout: [Function: socketOnTimeout],
    data: [Function: bound socketOnData],
    error: [Function: socketOnError],
    close: [Function: bound socketOnClose],
    drain: [Function: bound socketOnDrain],
    resume: [Function: onSocketResume],
    pause: [Function: onSocketPause]
  },
  _eventsCount: 8,
  _maxListeners: undefined,
  _writableState: WritableState {
    objectMode: false,
    highWaterMark: 16384,
    finalCalled: false,
    needDrain: false,
    ending: false,
    ended: false,
    finished: false,
    destroyed: false,
    decodeStrings: false,
    defaultEncoding: 'utf8',
    length: 0,
    writing: false,
    corked: 0,
    sync: true,
    bufferProcessing: false,
    onwrite: [Function: bound onwrite],
    writecb: null,
    writelen: 0,
    afterWriteTickInfo: null,
    bufferedRequest: null,
    lastBufferedRequest: null,
    pendingcb: 0,
    prefinished: false,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    errored: false,
    bufferedRequestCount: 0,
    corkedRequestsFree: {
      next: null,
      entry: null,
      finish: [Function: bound onCorkedFinish]
    }
  },
  writable: true,
  allowHalfOpen: true,
  _sockname: null,
  _pendingData: null,
  _pendingEncoding: '',
  server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 2,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  _server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 2,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  parser: HTTPParser {
    '0': [Function: parserOnHeaders],
    '1': [Function: parserOnHeadersComplete],
    '2': [Function: parserOnBody],
    '3': [Function: parserOnMessageComplete],
    '4': [Function: bound onParserExecute],
    _headers: [],
    _url: '',
    socket: [Circular *2],
    incoming: null,
    outgoing: null,
    maxHeaderPairs: 2000,
    _consumed: true,
    onIncoming: [Function: bound parserOnIncoming],
    parsingHeadersStart: 1585718163274
  },
  on: [Function: socketListenerWrap],
  addListener: [Function: socketListenerWrap],
  prependListener: [Function: socketListenerWrap],
  _paused: false,
  [Symbol(asyncId)]: 15,
  [Symbol(kHandle)]: TCP {
    reading: true,
    onconnection: null,
    _consumed: true,
    [Symbol(owner)]: [Circular *2]
  },
  [Symbol(kSetNoDelay)]: false,
  [Symbol(lastWriteQueueSize)]: 0,
  [Symbol(timeout)]: null,
  [Symbol(kBuffer)]: null,
  [Symbol(kBufferCb)]: null,
  [Symbol(kBufferGen)]: null,
  [Symbol(kCapture)]: false,
  [Symbol(kBytesRead)]: 0,
  [Symbol(kBytesWritten)]: 0
}

====Tue Mar 31 2020 22:16:03 ====
GET /accounts/

====Tue Mar 31 2020 22:16:07 ====
undefined

====Tue Mar 31 2020 22:16:07 ====
<ref *2> Socket {
  connecting: false,
  _hadError: false,
  _parent: null,
  _host: null,
  _readableState: ReadableState {
    objectMode: false,
    highWaterMark: 16384,
    buffer: BufferList { head: null, tail: null, length: 0 },
    length: 0,
    pipes: [],
    flowing: true,
    ended: false,
    endEmitted: false,
    reading: true,
    sync: false,
    needReadable: true,
    emittedReadable: false,
    readableListening: false,
    resumeScheduled: true,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    destroyed: false,
    defaultEncoding: 'utf8',
    awaitDrainWriters: null,
    multiAwaitDrain: false,
    readingMore: false,
    decoder: null,
    encoding: null,
    [Symbol(kPaused)]: false
  },
  readable: true,
  _events: [Object: null prototype] {
    end: [ [Function: onReadableStreamEnd], [Function: bound socketOnEnd] ],
    timeout: [Function: socketOnTimeout],
    data: [Function: bound socketOnData],
    error: [Function: socketOnError],
    close: [Function: bound socketOnClose],
    drain: [Function: bound socketOnDrain],
    resume: [Function: onSocketResume],
    pause: [Function: onSocketPause]
  },
  _eventsCount: 8,
  _maxListeners: undefined,
  _writableState: WritableState {
    objectMode: false,
    highWaterMark: 16384,
    finalCalled: false,
    needDrain: false,
    ending: false,
    ended: false,
    finished: false,
    destroyed: false,
    decodeStrings: false,
    defaultEncoding: 'utf8',
    length: 0,
    writing: false,
    corked: 0,
    sync: true,
    bufferProcessing: false,
    onwrite: [Function: bound onwrite],
    writecb: null,
    writelen: 0,
    afterWriteTickInfo: null,
    bufferedRequest: null,
    lastBufferedRequest: null,
    pendingcb: 0,
    prefinished: false,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    errored: false,
    bufferedRequestCount: 0,
    corkedRequestsFree: {
      next: null,
      entry: null,
      finish: [Function: bound onCorkedFinish]
    }
  },
  writable: true,
  allowHalfOpen: true,
  _sockname: null,
  _pendingData: null,
  _pendingEncoding: '',
  server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 1,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  _server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 1,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  parser: HTTPParser {
    '0': [Function: parserOnHeaders],
    '1': [Function: parserOnHeadersComplete],
    '2': [Function: parserOnBody],
    '3': [Function: parserOnMessageComplete],
    '4': [Function: bound onParserExecute],
    _headers: [],
    _url: '',
    socket: [Circular *2],
    incoming: null,
    outgoing: null,
    maxHeaderPairs: 2000,
    _consumed: true,
    onIncoming: [Function: bound parserOnIncoming],
    parsingHeadersStart: 1585718167668
  },
  on: [Function: socketListenerWrap],
  addListener: [Function: socketListenerWrap],
  prependListener: [Function: socketListenerWrap],
  _paused: false,
  [Symbol(asyncId)]: 10,
  [Symbol(kHandle)]: TCP {
    reading: true,
    onconnection: null,
    _consumed: true,
    [Symbol(owner)]: [Circular *2]
  },
  [Symbol(kSetNoDelay)]: false,
  [Symbol(lastWriteQueueSize)]: 0,
  [Symbol(timeout)]: null,
  [Symbol(kBuffer)]: null,
  [Symbol(kBufferCb)]: null,
  [Symbol(kBufferGen)]: null,
  [Symbol(kCapture)]: false,
  [Symbol(kBytesRead)]: 0,
  [Symbol(kBytesWritten)]: 0
}

====Tue Mar 31 2020 22:16:07 ====
<ref *2> Socket {
  connecting: false,
  _hadError: false,
  _parent: null,
  _host: null,
  _readableState: ReadableState {
    objectMode: false,
    highWaterMark: 16384,
    buffer: BufferList { head: null, tail: null, length: 0 },
    length: 0,
    pipes: [],
    flowing: true,
    ended: false,
    endEmitted: false,
    reading: true,
    sync: false,
    needReadable: true,
    emittedReadable: false,
    readableListening: false,
    resumeScheduled: true,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    destroyed: false,
    defaultEncoding: 'utf8',
    awaitDrainWriters: null,
    multiAwaitDrain: false,
    readingMore: false,
    decoder: null,
    encoding: null,
    [Symbol(kPaused)]: false
  },
  readable: true,
  _events: [Object: null prototype] {
    end: [ [Function: onReadableStreamEnd], [Function: bound socketOnEnd] ],
    timeout: [Function: socketOnTimeout],
    data: [Function: bound socketOnData],
    error: [Function: socketOnError],
    close: [Function: bound socketOnClose],
    drain: [Function: bound socketOnDrain],
    resume: [Function: onSocketResume],
    pause: [Function: onSocketPause]
  },
  _eventsCount: 8,
  _maxListeners: undefined,
  _writableState: WritableState {
    objectMode: false,
    highWaterMark: 16384,
    finalCalled: false,
    needDrain: false,
    ending: false,
    ended: false,
    finished: false,
    destroyed: false,
    decodeStrings: false,
    defaultEncoding: 'utf8',
    length: 0,
    writing: false,
    corked: 0,
    sync: true,
    bufferProcessing: false,
    onwrite: [Function: bound onwrite],
    writecb: null,
    writelen: 0,
    afterWriteTickInfo: null,
    bufferedRequest: null,
    lastBufferedRequest: null,
    pendingcb: 0,
    prefinished: false,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    errored: false,
    bufferedRequestCount: 0,
    corkedRequestsFree: {
      next: null,
      entry: null,
      finish: [Function: bound onCorkedFinish]
    }
  },
  writable: true,
  allowHalfOpen: true,
  _sockname: null,
  _pendingData: null,
  _pendingEncoding: '',
  server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 2,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  _server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 2,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  parser: HTTPParser {
    '0': [Function: parserOnHeaders],
    '1': [Function: parserOnHeadersComplete],
    '2': [Function: parserOnBody],
    '3': [Function: parserOnMessageComplete],
    '4': [Function: bound onParserExecute],
    _headers: [],
    _url: '',
    socket: [Circular *2],
    incoming: null,
    outgoing: null,
    maxHeaderPairs: 2000,
    _consumed: true,
    onIncoming: [Function: bound parserOnIncoming],
    parsingHeadersStart: 1585718167668
  },
  on: [Function: socketListenerWrap],
  addListener: [Function: socketListenerWrap],
  prependListener: [Function: socketListenerWrap],
  _paused: false,
  [Symbol(asyncId)]: 15,
  [Symbol(kHandle)]: TCP {
    reading: true,
    onconnection: null,
    _consumed: true,
    [Symbol(owner)]: [Circular *2]
  },
  [Symbol(kSetNoDelay)]: false,
  [Symbol(lastWriteQueueSize)]: 0,
  [Symbol(timeout)]: null,
  [Symbol(kBuffer)]: null,
  [Symbol(kBufferCb)]: null,
  [Symbol(kBufferGen)]: null,
  [Symbol(kCapture)]: false,
  [Symbol(kBytesRead)]: 0,
  [Symbol(kBytesWritten)]: 0
}

====Tue Mar 31 2020 22:16:07 ====
GET /accounts/

====Tue Mar 31 2020 22:16:07 ====
RESPONSE [object Object],[object Object],[object Object],[object Object],[object Object]

====Tue Mar 31 2020 22:16:07 ====
RESPONSE [{"id":1,"username":"ProRobinHoodTr1","password":"Impossible123!!2","email":"jaledarely","phone":"9165178775","followers":786,"type":"promoImage","following":4998,"owner":1},{"id":2,"username":"StockJesus","password":"Impossible123","email":"robbrandon02","phone":"9165178775","followers":1262,"type":"promoText","following":5001,"owner":1},{"id":3,"username":"joo11244620","password":"Impossible123!!!","email":"abrahaminiguez06@gmail.com","phone":"9165178775","followers":660,"type":null,"following":5000,"owner":1},{"id":5,"username":"MarkZion19","password":"Impossible123!!","email":"teresainiguez12345","phone":"9165178775","followers":0,"type":null,"following":0,"owner":1},{"id":6,"username":"johnson_maximum","password":"Impossible123!","email":null,"phone":"9165178775","followers":160,"type":null,"following":1289,"owner":1}]

====Tue Mar 31 2020 22:17:02 ====
undefined

====Tue Mar 31 2020 22:17:07 ====
<ref *2> Socket {
  connecting: false,
  _hadError: false,
  _parent: null,
  _host: null,
  _readableState: ReadableState {
    objectMode: false,
    highWaterMark: 16384,
    buffer: BufferList { head: null, tail: null, length: 0 },
    length: 0,
    pipes: [],
    flowing: true,
    ended: false,
    endEmitted: false,
    reading: true,
    sync: false,
    needReadable: true,
    emittedReadable: false,
    readableListening: false,
    resumeScheduled: true,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    destroyed: false,
    defaultEncoding: 'utf8',
    awaitDrainWriters: null,
    multiAwaitDrain: false,
    readingMore: false,
    decoder: null,
    encoding: null,
    [Symbol(kPaused)]: false
  },
  readable: true,
  _events: [Object: null prototype] {
    end: [ [Function: onReadableStreamEnd], [Function: bound socketOnEnd] ],
    timeout: [Function: socketOnTimeout],
    data: [Function: bound socketOnData],
    error: [Function: socketOnError],
    close: [Function: bound socketOnClose],
    drain: [Function: bound socketOnDrain],
    resume: [Function: onSocketResume],
    pause: [Function: onSocketPause]
  },
  _eventsCount: 8,
  _maxListeners: undefined,
  _writableState: WritableState {
    objectMode: false,
    highWaterMark: 16384,
    finalCalled: false,
    needDrain: false,
    ending: false,
    ended: false,
    finished: false,
    destroyed: false,
    decodeStrings: false,
    defaultEncoding: 'utf8',
    length: 0,
    writing: false,
    corked: 0,
    sync: true,
    bufferProcessing: false,
    onwrite: [Function: bound onwrite],
    writecb: null,
    writelen: 0,
    afterWriteTickInfo: null,
    bufferedRequest: null,
    lastBufferedRequest: null,
    pendingcb: 0,
    prefinished: false,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    errored: false,
    bufferedRequestCount: 0,
    corkedRequestsFree: {
      next: null,
      entry: null,
      finish: [Function: bound onCorkedFinish]
    }
  },
  writable: true,
  allowHalfOpen: true,
  _sockname: null,
  _pendingData: null,
  _pendingEncoding: '',
  server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 1,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  _server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 1,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  parser: HTTPParser {
    '0': [Function: parserOnHeaders],
    '1': [Function: parserOnHeadersComplete],
    '2': [Function: parserOnBody],
    '3': [Function: parserOnMessageComplete],
    '4': [Function: bound onParserExecute],
    _headers: [],
    _url: '',
    socket: [Circular *2],
    incoming: null,
    outgoing: null,
    maxHeaderPairs: 2000,
    _consumed: true,
    onIncoming: [Function: bound parserOnIncoming],
    parsingHeadersStart: 1585718227649
  },
  on: [Function: socketListenerWrap],
  addListener: [Function: socketListenerWrap],
  prependListener: [Function: socketListenerWrap],
  _paused: false,
  [Symbol(asyncId)]: 10,
  [Symbol(kHandle)]: TCP {
    reading: true,
    onconnection: null,
    _consumed: true,
    [Symbol(owner)]: [Circular *2]
  },
  [Symbol(kSetNoDelay)]: false,
  [Symbol(lastWriteQueueSize)]: 0,
  [Symbol(timeout)]: null,
  [Symbol(kBuffer)]: null,
  [Symbol(kBufferCb)]: null,
  [Symbol(kBufferGen)]: null,
  [Symbol(kCapture)]: false,
  [Symbol(kBytesRead)]: 0,
  [Symbol(kBytesWritten)]: 0
}

====Tue Mar 31 2020 22:17:07 ====
<ref *2> Socket {
  connecting: false,
  _hadError: false,
  _parent: null,
  _host: null,
  _readableState: ReadableState {
    objectMode: false,
    highWaterMark: 16384,
    buffer: BufferList { head: null, tail: null, length: 0 },
    length: 0,
    pipes: [],
    flowing: true,
    ended: false,
    endEmitted: false,
    reading: true,
    sync: false,
    needReadable: true,
    emittedReadable: false,
    readableListening: false,
    resumeScheduled: true,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    destroyed: false,
    defaultEncoding: 'utf8',
    awaitDrainWriters: null,
    multiAwaitDrain: false,
    readingMore: false,
    decoder: null,
    encoding: null,
    [Symbol(kPaused)]: false
  },
  readable: true,
  _events: [Object: null prototype] {
    end: [ [Function: onReadableStreamEnd], [Function: bound socketOnEnd] ],
    timeout: [Function: socketOnTimeout],
    data: [Function: bound socketOnData],
    error: [Function: socketOnError],
    close: [Function: bound socketOnClose],
    drain: [Function: bound socketOnDrain],
    resume: [Function: onSocketResume],
    pause: [Function: onSocketPause]
  },
  _eventsCount: 8,
  _maxListeners: undefined,
  _writableState: WritableState {
    objectMode: false,
    highWaterMark: 16384,
    finalCalled: false,
    needDrain: false,
    ending: false,
    ended: false,
    finished: false,
    destroyed: false,
    decodeStrings: false,
    defaultEncoding: 'utf8',
    length: 0,
    writing: false,
    corked: 0,
    sync: true,
    bufferProcessing: false,
    onwrite: [Function: bound onwrite],
    writecb: null,
    writelen: 0,
    afterWriteTickInfo: null,
    bufferedRequest: null,
    lastBufferedRequest: null,
    pendingcb: 0,
    prefinished: false,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    errored: false,
    bufferedRequestCount: 0,
    corkedRequestsFree: {
      next: null,
      entry: null,
      finish: [Function: bound onCorkedFinish]
    }
  },
  writable: true,
  allowHalfOpen: true,
  _sockname: null,
  _pendingData: null,
  _pendingEncoding: '',
  server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 2,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  _server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 2,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  parser: HTTPParser {
    '0': [Function: parserOnHeaders],
    '1': [Function: parserOnHeadersComplete],
    '2': [Function: parserOnBody],
    '3': [Function: parserOnMessageComplete],
    '4': [Function: bound onParserExecute],
    _headers: [],
    _url: '',
    socket: [Circular *2],
    incoming: null,
    outgoing: null,
    maxHeaderPairs: 2000,
    _consumed: true,
    onIncoming: [Function: bound parserOnIncoming],
    parsingHeadersStart: 1585718227649
  },
  on: [Function: socketListenerWrap],
  addListener: [Function: socketListenerWrap],
  prependListener: [Function: socketListenerWrap],
  _paused: false,
  [Symbol(asyncId)]: 15,
  [Symbol(kHandle)]: TCP {
    reading: true,
    onconnection: null,
    _consumed: true,
    [Symbol(owner)]: [Circular *2]
  },
  [Symbol(kSetNoDelay)]: false,
  [Symbol(lastWriteQueueSize)]: 0,
  [Symbol(timeout)]: null,
  [Symbol(kBuffer)]: null,
  [Symbol(kBufferCb)]: null,
  [Symbol(kBufferGen)]: null,
  [Symbol(kCapture)]: false,
  [Symbol(kBytesRead)]: 0,
  [Symbol(kBytesWritten)]: 0
}

====Tue Mar 31 2020 22:17:07 ====
GET /accounts/

====Tue Mar 31 2020 22:17:34 ====
undefined

====Tue Mar 31 2020 22:17:36 ====
<ref *2> Socket {
  connecting: false,
  _hadError: false,
  _parent: null,
  _host: null,
  _readableState: ReadableState {
    objectMode: false,
    highWaterMark: 16384,
    buffer: BufferList { head: null, tail: null, length: 0 },
    length: 0,
    pipes: [],
    flowing: true,
    ended: false,
    endEmitted: false,
    reading: true,
    sync: false,
    needReadable: true,
    emittedReadable: false,
    readableListening: false,
    resumeScheduled: true,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    destroyed: false,
    defaultEncoding: 'utf8',
    awaitDrainWriters: null,
    multiAwaitDrain: false,
    readingMore: false,
    decoder: null,
    encoding: null,
    [Symbol(kPaused)]: false
  },
  readable: true,
  _events: [Object: null prototype] {
    end: [ [Function: onReadableStreamEnd], [Function: bound socketOnEnd] ],
    timeout: [Function: socketOnTimeout],
    data: [Function: bound socketOnData],
    error: [Function: socketOnError],
    close: [Function: bound socketOnClose],
    drain: [Function: bound socketOnDrain],
    resume: [Function: onSocketResume],
    pause: [Function: onSocketPause]
  },
  _eventsCount: 8,
  _maxListeners: undefined,
  _writableState: WritableState {
    objectMode: false,
    highWaterMark: 16384,
    finalCalled: false,
    needDrain: false,
    ending: false,
    ended: false,
    finished: false,
    destroyed: false,
    decodeStrings: false,
    defaultEncoding: 'utf8',
    length: 0,
    writing: false,
    corked: 0,
    sync: true,
    bufferProcessing: false,
    onwrite: [Function: bound onwrite],
    writecb: null,
    writelen: 0,
    afterWriteTickInfo: null,
    bufferedRequest: null,
    lastBufferedRequest: null,
    pendingcb: 0,
    prefinished: false,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    errored: false,
    bufferedRequestCount: 0,
    corkedRequestsFree: {
      next: null,
      entry: null,
      finish: [Function: bound onCorkedFinish]
    }
  },
  writable: true,
  allowHalfOpen: true,
  _sockname: null,
  _pendingData: null,
  _pendingEncoding: '',
  server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 1,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  _server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 1,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  parser: HTTPParser {
    '0': [Function: parserOnHeaders],
    '1': [Function: parserOnHeadersComplete],
    '2': [Function: parserOnBody],
    '3': [Function: parserOnMessageComplete],
    '4': [Function: bound onParserExecute],
    _headers: [],
    _url: '',
    socket: [Circular *2],
    incoming: null,
    outgoing: null,
    maxHeaderPairs: 2000,
    _consumed: true,
    onIncoming: [Function: bound parserOnIncoming],
    parsingHeadersStart: 1585718256840
  },
  on: [Function: socketListenerWrap],
  addListener: [Function: socketListenerWrap],
  prependListener: [Function: socketListenerWrap],
  _paused: false,
  [Symbol(asyncId)]: 10,
  [Symbol(kHandle)]: TCP {
    reading: true,
    onconnection: null,
    _consumed: true,
    [Symbol(owner)]: [Circular *2]
  },
  [Symbol(kSetNoDelay)]: false,
  [Symbol(lastWriteQueueSize)]: 0,
  [Symbol(timeout)]: null,
  [Symbol(kBuffer)]: null,
  [Symbol(kBufferCb)]: null,
  [Symbol(kBufferGen)]: null,
  [Symbol(kCapture)]: false,
  [Symbol(kBytesRead)]: 0,
  [Symbol(kBytesWritten)]: 0
}

====Tue Mar 31 2020 22:17:36 ====
<ref *2> Socket {
  connecting: false,
  _hadError: false,
  _parent: null,
  _host: null,
  _readableState: ReadableState {
    objectMode: false,
    highWaterMark: 16384,
    buffer: BufferList { head: null, tail: null, length: 0 },
    length: 0,
    pipes: [],
    flowing: true,
    ended: false,
    endEmitted: false,
    reading: true,
    sync: false,
    needReadable: true,
    emittedReadable: false,
    readableListening: false,
    resumeScheduled: true,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    destroyed: false,
    defaultEncoding: 'utf8',
    awaitDrainWriters: null,
    multiAwaitDrain: false,
    readingMore: false,
    decoder: null,
    encoding: null,
    [Symbol(kPaused)]: false
  },
  readable: true,
  _events: [Object: null prototype] {
    end: [ [Function: onReadableStreamEnd], [Function: bound socketOnEnd] ],
    timeout: [Function: socketOnTimeout],
    data: [Function: bound socketOnData],
    error: [Function: socketOnError],
    close: [Function: bound socketOnClose],
    drain: [Function: bound socketOnDrain],
    resume: [Function: onSocketResume],
    pause: [Function: onSocketPause]
  },
  _eventsCount: 8,
  _maxListeners: undefined,
  _writableState: WritableState {
    objectMode: false,
    highWaterMark: 16384,
    finalCalled: false,
    needDrain: false,
    ending: false,
    ended: false,
    finished: false,
    destroyed: false,
    decodeStrings: false,
    defaultEncoding: 'utf8',
    length: 0,
    writing: false,
    corked: 0,
    sync: true,
    bufferProcessing: false,
    onwrite: [Function: bound onwrite],
    writecb: null,
    writelen: 0,
    afterWriteTickInfo: null,
    bufferedRequest: null,
    lastBufferedRequest: null,
    pendingcb: 0,
    prefinished: false,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    errored: false,
    bufferedRequestCount: 0,
    corkedRequestsFree: {
      next: null,
      entry: null,
      finish: [Function: bound onCorkedFinish]
    }
  },
  writable: true,
  allowHalfOpen: true,
  _sockname: null,
  _pendingData: null,
  _pendingEncoding: '',
  server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 2,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  _server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 2,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  parser: HTTPParser {
    '0': [Function: parserOnHeaders],
    '1': [Function: parserOnHeadersComplete],
    '2': [Function: parserOnBody],
    '3': [Function: parserOnMessageComplete],
    '4': [Function: bound onParserExecute],
    _headers: [],
    _url: '',
    socket: [Circular *2],
    incoming: null,
    outgoing: null,
    maxHeaderPairs: 2000,
    _consumed: true,
    onIncoming: [Function: bound parserOnIncoming],
    parsingHeadersStart: 1585718256840
  },
  on: [Function: socketListenerWrap],
  addListener: [Function: socketListenerWrap],
  prependListener: [Function: socketListenerWrap],
  _paused: false,
  [Symbol(asyncId)]: 15,
  [Symbol(kHandle)]: TCP {
    reading: true,
    onconnection: null,
    _consumed: true,
    [Symbol(owner)]: [Circular *2]
  },
  [Symbol(kSetNoDelay)]: false,
  [Symbol(lastWriteQueueSize)]: 0,
  [Symbol(timeout)]: null,
  [Symbol(kBuffer)]: null,
  [Symbol(kBufferCb)]: null,
  [Symbol(kBufferGen)]: null,
  [Symbol(kCapture)]: false,
  [Symbol(kBytesRead)]: 0,
  [Symbol(kBytesWritten)]: 0
}

====Tue Mar 31 2020 22:17:36 ====
GET /accounts/

====Tue Mar 31 2020 22:17:36 ====
RESPONSE Something broke!

====Tue Mar 31 2020 22:17:36 ====
RESPONSE [object Object],[object Object],[object Object],[object Object],[object Object]

====Tue Mar 31 2020 22:17:36 ====
RESPONSE [{"id":1,"username":"ProRobinHoodTr1","password":"Impossible123!!2","email":"jaledarely","phone":"9165178775","followers":786,"type":"promoImage","following":4998,"owner":1},{"id":2,"username":"StockJesus","password":"Impossible123","email":"robbrandon02","phone":"9165178775","followers":1262,"type":"promoText","following":5001,"owner":1},{"id":3,"username":"joo11244620","password":"Impossible123!!!","email":"abrahaminiguez06@gmail.com","phone":"9165178775","followers":660,"type":null,"following":5000,"owner":1},{"id":5,"username":"MarkZion19","password":"Impossible123!!","email":"teresainiguez12345","phone":"9165178775","followers":0,"type":null,"following":0,"owner":1},{"id":6,"username":"johnson_maximum","password":"Impossible123!","email":null,"phone":"9165178775","followers":160,"type":null,"following":1289,"owner":1}]

====Tue Mar 31 2020 22:17:36 ====
Error [ERR_HTTP_HEADERS_SENT]: Cannot set headers after they are sent to the client
    at ServerResponse.setHeader (_http_outgoing.js:535:11)
    at ServerResponse.header (/Users/aaroniniguez/AutoPromote/server/node_modules/express/lib/response.js:771:10)
    at ServerResponse.send (/Users/aaroniniguez/AutoPromote/server/node_modules/express/lib/response.js:170:12)
    at ServerResponse.app.response.send (/Users/aaroniniguez/AutoPromote/server/main.js:41:14)
    at ServerResponse.json (/Users/aaroniniguez/AutoPromote/server/node_modules/express/lib/response.js:267:15)
    at ServerResponse.send (/Users/aaroniniguez/AutoPromote/server/node_modules/express/lib/response.js:158:21)
    at ServerResponse.app.response.send (/Users/aaroniniguez/AutoPromote/server/main.js:41:14)
    at /Users/aaroniniguez/AutoPromote/server/routes/accounts.js:7:28
    at processTicksAndRejections (internal/process/task_queues.js:97:5) {
  code: 'ERR_HTTP_HEADERS_SENT'
}

====Tue Mar 31 2020 22:19:12 ====
undefined

====Tue Mar 31 2020 22:19:21 ====
undefined

====Tue Mar 31 2020 22:19:25 ====
<ref *2> Socket {
  connecting: false,
  _hadError: false,
  _parent: null,
  _host: null,
  _readableState: ReadableState {
    objectMode: false,
    highWaterMark: 16384,
    buffer: BufferList { head: null, tail: null, length: 0 },
    length: 0,
    pipes: [],
    flowing: true,
    ended: false,
    endEmitted: false,
    reading: true,
    sync: false,
    needReadable: true,
    emittedReadable: false,
    readableListening: false,
    resumeScheduled: true,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    destroyed: false,
    defaultEncoding: 'utf8',
    awaitDrainWriters: null,
    multiAwaitDrain: false,
    readingMore: false,
    decoder: null,
    encoding: null,
    [Symbol(kPaused)]: false
  },
  readable: true,
  _events: [Object: null prototype] {
    end: [ [Function: onReadableStreamEnd], [Function: bound socketOnEnd] ],
    timeout: [Function: socketOnTimeout],
    data: [Function: bound socketOnData],
    error: [Function: socketOnError],
    close: [Function: bound socketOnClose],
    drain: [Function: bound socketOnDrain],
    resume: [Function: onSocketResume],
    pause: [Function: onSocketPause]
  },
  _eventsCount: 8,
  _maxListeners: undefined,
  _writableState: WritableState {
    objectMode: false,
    highWaterMark: 16384,
    finalCalled: false,
    needDrain: false,
    ending: false,
    ended: false,
    finished: false,
    destroyed: false,
    decodeStrings: false,
    defaultEncoding: 'utf8',
    length: 0,
    writing: false,
    corked: 0,
    sync: true,
    bufferProcessing: false,
    onwrite: [Function: bound onwrite],
    writecb: null,
    writelen: 0,
    afterWriteTickInfo: null,
    bufferedRequest: null,
    lastBufferedRequest: null,
    pendingcb: 0,
    prefinished: false,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    errored: false,
    bufferedRequestCount: 0,
    corkedRequestsFree: {
      next: null,
      entry: null,
      finish: [Function: bound onCorkedFinish]
    }
  },
  writable: true,
  allowHalfOpen: true,
  _sockname: null,
  _pendingData: null,
  _pendingEncoding: '',
  server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 1,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  _server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 1,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  parser: HTTPParser {
    '0': [Function: parserOnHeaders],
    '1': [Function: parserOnHeadersComplete],
    '2': [Function: parserOnBody],
    '3': [Function: parserOnMessageComplete],
    '4': [Function: bound onParserExecute],
    _headers: [],
    _url: '',
    socket: [Circular *2],
    incoming: null,
    outgoing: null,
    maxHeaderPairs: 2000,
    _consumed: true,
    onIncoming: [Function: bound parserOnIncoming],
    parsingHeadersStart: 1585718365997
  },
  on: [Function: socketListenerWrap],
  addListener: [Function: socketListenerWrap],
  prependListener: [Function: socketListenerWrap],
  _paused: false,
  [Symbol(asyncId)]: 10,
  [Symbol(kHandle)]: TCP {
    reading: true,
    onconnection: null,
    _consumed: true,
    [Symbol(owner)]: [Circular *2]
  },
  [Symbol(kSetNoDelay)]: false,
  [Symbol(lastWriteQueueSize)]: 0,
  [Symbol(timeout)]: null,
  [Symbol(kBuffer)]: null,
  [Symbol(kBufferCb)]: null,
  [Symbol(kBufferGen)]: null,
  [Symbol(kCapture)]: false,
  [Symbol(kBytesRead)]: 0,
  [Symbol(kBytesWritten)]: 0
}

====Tue Mar 31 2020 22:19:26 ====
<ref *2> Socket {
  connecting: false,
  _hadError: false,
  _parent: null,
  _host: null,
  _readableState: ReadableState {
    objectMode: false,
    highWaterMark: 16384,
    buffer: BufferList { head: null, tail: null, length: 0 },
    length: 0,
    pipes: [],
    flowing: true,
    ended: false,
    endEmitted: false,
    reading: true,
    sync: false,
    needReadable: true,
    emittedReadable: false,
    readableListening: false,
    resumeScheduled: true,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    destroyed: false,
    defaultEncoding: 'utf8',
    awaitDrainWriters: null,
    multiAwaitDrain: false,
    readingMore: false,
    decoder: null,
    encoding: null,
    [Symbol(kPaused)]: false
  },
  readable: true,
  _events: [Object: null prototype] {
    end: [ [Function: onReadableStreamEnd], [Function: bound socketOnEnd] ],
    timeout: [Function: socketOnTimeout],
    data: [Function: bound socketOnData],
    error: [Function: socketOnError],
    close: [Function: bound socketOnClose],
    drain: [Function: bound socketOnDrain],
    resume: [Function: onSocketResume],
    pause: [Function: onSocketPause]
  },
  _eventsCount: 8,
  _maxListeners: undefined,
  _writableState: WritableState {
    objectMode: false,
    highWaterMark: 16384,
    finalCalled: false,
    needDrain: false,
    ending: false,
    ended: false,
    finished: false,
    destroyed: false,
    decodeStrings: false,
    defaultEncoding: 'utf8',
    length: 0,
    writing: false,
    corked: 0,
    sync: true,
    bufferProcessing: false,
    onwrite: [Function: bound onwrite],
    writecb: null,
    writelen: 0,
    afterWriteTickInfo: null,
    bufferedRequest: null,
    lastBufferedRequest: null,
    pendingcb: 0,
    prefinished: false,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    errored: false,
    bufferedRequestCount: 0,
    corkedRequestsFree: {
      next: null,
      entry: null,
      finish: [Function: bound onCorkedFinish]
    }
  },
  writable: true,
  allowHalfOpen: true,
  _sockname: null,
  _pendingData: null,
  _pendingEncoding: '',
  server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 2,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  _server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 2,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  parser: HTTPParser {
    '0': [Function: parserOnHeaders],
    '1': [Function: parserOnHeadersComplete],
    '2': [Function: parserOnBody],
    '3': [Function: parserOnMessageComplete],
    '4': [Function: bound onParserExecute],
    _headers: [],
    _url: '',
    socket: [Circular *2],
    incoming: null,
    outgoing: null,
    maxHeaderPairs: 2000,
    _consumed: true,
    onIncoming: [Function: bound parserOnIncoming],
    parsingHeadersStart: 1585718366000
  },
  on: [Function: socketListenerWrap],
  addListener: [Function: socketListenerWrap],
  prependListener: [Function: socketListenerWrap],
  _paused: false,
  [Symbol(asyncId)]: 15,
  [Symbol(kHandle)]: TCP {
    reading: true,
    onconnection: null,
    _consumed: true,
    [Symbol(owner)]: [Circular *2]
  },
  [Symbol(kSetNoDelay)]: false,
  [Symbol(lastWriteQueueSize)]: 0,
  [Symbol(timeout)]: null,
  [Symbol(kBuffer)]: null,
  [Symbol(kBufferCb)]: null,
  [Symbol(kBufferGen)]: null,
  [Symbol(kCapture)]: false,
  [Symbol(kBytesRead)]: 0,
  [Symbol(kBytesWritten)]: 0
}

====Tue Mar 31 2020 22:19:26 ====
GET /accounts/

====Tue Mar 31 2020 22:19:26 ====
RESPONSE Something broke!

====Tue Mar 31 2020 22:19:26 ====
RESPONSE [object Object],[object Object],[object Object],[object Object],[object Object]

====Tue Mar 31 2020 22:19:26 ====
RESPONSE [{"id":1,"username":"ProRobinHoodTr1","password":"Impossible123!!2","email":"jaledarely","phone":"9165178775","followers":786,"type":"promoImage","following":4998,"owner":1},{"id":2,"username":"StockJesus","password":"Impossible123","email":"robbrandon02","phone":"9165178775","followers":1262,"type":"promoText","following":5001,"owner":1},{"id":3,"username":"joo11244620","password":"Impossible123!!!","email":"abrahaminiguez06@gmail.com","phone":"9165178775","followers":660,"type":null,"following":5000,"owner":1},{"id":5,"username":"MarkZion19","password":"Impossible123!!","email":"teresainiguez12345","phone":"9165178775","followers":0,"type":null,"following":0,"owner":1},{"id":6,"username":"johnson_maximum","password":"Impossible123!","email":null,"phone":"9165178775","followers":160,"type":null,"following":1289,"owner":1}]

====Tue Mar 31 2020 22:19:26 ====
RESPONSE something broke: 

====Tue Mar 31 2020 22:19:29 ====
undefined

====Tue Mar 31 2020 22:19:31 ====
<ref *2> Socket {
  connecting: false,
  _hadError: false,
  _parent: null,
  _host: null,
  _readableState: ReadableState {
    objectMode: false,
    highWaterMark: 16384,
    buffer: BufferList { head: null, tail: null, length: 0 },
    length: 0,
    pipes: [],
    flowing: true,
    ended: false,
    endEmitted: false,
    reading: true,
    sync: false,
    needReadable: true,
    emittedReadable: false,
    readableListening: false,
    resumeScheduled: true,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    destroyed: false,
    defaultEncoding: 'utf8',
    awaitDrainWriters: null,
    multiAwaitDrain: false,
    readingMore: false,
    decoder: null,
    encoding: null,
    [Symbol(kPaused)]: false
  },
  readable: true,
  _events: [Object: null prototype] {
    end: [ [Function: onReadableStreamEnd], [Function: bound socketOnEnd] ],
    timeout: [Function: socketOnTimeout],
    data: [Function: bound socketOnData],
    error: [Function: socketOnError],
    close: [Function: bound socketOnClose],
    drain: [Function: bound socketOnDrain],
    resume: [Function: onSocketResume],
    pause: [Function: onSocketPause]
  },
  _eventsCount: 8,
  _maxListeners: undefined,
  _writableState: WritableState {
    objectMode: false,
    highWaterMark: 16384,
    finalCalled: false,
    needDrain: false,
    ending: false,
    ended: false,
    finished: false,
    destroyed: false,
    decodeStrings: false,
    defaultEncoding: 'utf8',
    length: 0,
    writing: false,
    corked: 0,
    sync: true,
    bufferProcessing: false,
    onwrite: [Function: bound onwrite],
    writecb: null,
    writelen: 0,
    afterWriteTickInfo: null,
    bufferedRequest: null,
    lastBufferedRequest: null,
    pendingcb: 0,
    prefinished: false,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    errored: false,
    bufferedRequestCount: 0,
    corkedRequestsFree: {
      next: null,
      entry: null,
      finish: [Function: bound onCorkedFinish]
    }
  },
  writable: true,
  allowHalfOpen: true,
  _sockname: null,
  _pendingData: null,
  _pendingEncoding: '',
  server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 1,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  _server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 1,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  parser: HTTPParser {
    '0': [Function: parserOnHeaders],
    '1': [Function: parserOnHeadersComplete],
    '2': [Function: parserOnBody],
    '3': [Function: parserOnMessageComplete],
    '4': [Function: bound onParserExecute],
    _headers: [],
    _url: '',
    socket: [Circular *2],
    incoming: null,
    outgoing: null,
    maxHeaderPairs: 2000,
    _consumed: true,
    onIncoming: [Function: bound parserOnIncoming],
    parsingHeadersStart: 1585718371656
  },
  on: [Function: socketListenerWrap],
  addListener: [Function: socketListenerWrap],
  prependListener: [Function: socketListenerWrap],
  _paused: false,
  [Symbol(asyncId)]: 10,
  [Symbol(kHandle)]: TCP {
    reading: true,
    onconnection: null,
    _consumed: true,
    [Symbol(owner)]: [Circular *2]
  },
  [Symbol(kSetNoDelay)]: false,
  [Symbol(lastWriteQueueSize)]: 0,
  [Symbol(timeout)]: null,
  [Symbol(kBuffer)]: null,
  [Symbol(kBufferCb)]: null,
  [Symbol(kBufferGen)]: null,
  [Symbol(kCapture)]: false,
  [Symbol(kBytesRead)]: 0,
  [Symbol(kBytesWritten)]: 0
}

====Tue Mar 31 2020 22:19:31 ====
<ref *2> Socket {
  connecting: false,
  _hadError: false,
  _parent: null,
  _host: null,
  _readableState: ReadableState {
    objectMode: false,
    highWaterMark: 16384,
    buffer: BufferList { head: null, tail: null, length: 0 },
    length: 0,
    pipes: [],
    flowing: true,
    ended: false,
    endEmitted: false,
    reading: true,
    sync: false,
    needReadable: true,
    emittedReadable: false,
    readableListening: false,
    resumeScheduled: true,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    destroyed: false,
    defaultEncoding: 'utf8',
    awaitDrainWriters: null,
    multiAwaitDrain: false,
    readingMore: false,
    decoder: null,
    encoding: null,
    [Symbol(kPaused)]: false
  },
  readable: true,
  _events: [Object: null prototype] {
    end: [ [Function: onReadableStreamEnd], [Function: bound socketOnEnd] ],
    timeout: [Function: socketOnTimeout],
    data: [Function: bound socketOnData],
    error: [Function: socketOnError],
    close: [Function: bound socketOnClose],
    drain: [Function: bound socketOnDrain],
    resume: [Function: onSocketResume],
    pause: [Function: onSocketPause]
  },
  _eventsCount: 8,
  _maxListeners: undefined,
  _writableState: WritableState {
    objectMode: false,
    highWaterMark: 16384,
    finalCalled: false,
    needDrain: false,
    ending: false,
    ended: false,
    finished: false,
    destroyed: false,
    decodeStrings: false,
    defaultEncoding: 'utf8',
    length: 0,
    writing: false,
    corked: 0,
    sync: true,
    bufferProcessing: false,
    onwrite: [Function: bound onwrite],
    writecb: null,
    writelen: 0,
    afterWriteTickInfo: null,
    bufferedRequest: null,
    lastBufferedRequest: null,
    pendingcb: 0,
    prefinished: false,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    errored: false,
    bufferedRequestCount: 0,
    corkedRequestsFree: {
      next: null,
      entry: null,
      finish: [Function: bound onCorkedFinish]
    }
  },
  writable: true,
  allowHalfOpen: true,
  _sockname: null,
  _pendingData: null,
  _pendingEncoding: '',
  server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 2,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  _server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 2,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  parser: HTTPParser {
    '0': [Function: parserOnHeaders],
    '1': [Function: parserOnHeadersComplete],
    '2': [Function: parserOnBody],
    '3': [Function: parserOnMessageComplete],
    '4': [Function: bound onParserExecute],
    _headers: [],
    _url: '',
    socket: [Circular *2],
    incoming: null,
    outgoing: null,
    maxHeaderPairs: 2000,
    _consumed: true,
    onIncoming: [Function: bound parserOnIncoming],
    parsingHeadersStart: 1585718371656
  },
  on: [Function: socketListenerWrap],
  addListener: [Function: socketListenerWrap],
  prependListener: [Function: socketListenerWrap],
  _paused: false,
  [Symbol(asyncId)]: 15,
  [Symbol(kHandle)]: TCP {
    reading: true,
    onconnection: null,
    _consumed: true,
    [Symbol(owner)]: [Circular *2]
  },
  [Symbol(kSetNoDelay)]: false,
  [Symbol(lastWriteQueueSize)]: 0,
  [Symbol(timeout)]: null,
  [Symbol(kBuffer)]: null,
  [Symbol(kBufferCb)]: null,
  [Symbol(kBufferGen)]: null,
  [Symbol(kCapture)]: false,
  [Symbol(kBytesRead)]: 0,
  [Symbol(kBytesWritten)]: 0
}

====Tue Mar 31 2020 22:19:31 ====
GET /accounts/

====Tue Mar 31 2020 22:19:31 ====
RESPONSE [object Object],[object Object],[object Object],[object Object],[object Object]

====Tue Mar 31 2020 22:19:31 ====
RESPONSE [{"id":1,"username":"ProRobinHoodTr1","password":"Impossible123!!2","email":"jaledarely","phone":"9165178775","followers":786,"type":"promoImage","following":4998,"owner":1},{"id":2,"username":"StockJesus","password":"Impossible123","email":"robbrandon02","phone":"9165178775","followers":1262,"type":"promoText","following":5001,"owner":1},{"id":3,"username":"joo11244620","password":"Impossible123!!!","email":"abrahaminiguez06@gmail.com","phone":"9165178775","followers":660,"type":null,"following":5000,"owner":1},{"id":5,"username":"MarkZion19","password":"Impossible123!!","email":"teresainiguez12345","phone":"9165178775","followers":0,"type":null,"following":0,"owner":1},{"id":6,"username":"johnson_maximum","password":"Impossible123!","email":null,"phone":"9165178775","followers":160,"type":null,"following":1289,"owner":1}]

====Tue Mar 31 2020 22:20:48 ====
undefined

====Tue Mar 31 2020 22:20:50 ====
<ref *2> Socket {
  connecting: false,
  _hadError: false,
  _parent: null,
  _host: null,
  _readableState: ReadableState {
    objectMode: false,
    highWaterMark: 16384,
    buffer: BufferList { head: null, tail: null, length: 0 },
    length: 0,
    pipes: [],
    flowing: true,
    ended: false,
    endEmitted: false,
    reading: true,
    sync: false,
    needReadable: true,
    emittedReadable: false,
    readableListening: false,
    resumeScheduled: true,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    destroyed: false,
    defaultEncoding: 'utf8',
    awaitDrainWriters: null,
    multiAwaitDrain: false,
    readingMore: false,
    decoder: null,
    encoding: null,
    [Symbol(kPaused)]: false
  },
  readable: true,
  _events: [Object: null prototype] {
    end: [ [Function: onReadableStreamEnd], [Function: bound socketOnEnd] ],
    timeout: [Function: socketOnTimeout],
    data: [Function: bound socketOnData],
    error: [Function: socketOnError],
    close: [Function: bound socketOnClose],
    drain: [Function: bound socketOnDrain],
    resume: [Function: onSocketResume],
    pause: [Function: onSocketPause]
  },
  _eventsCount: 8,
  _maxListeners: undefined,
  _writableState: WritableState {
    objectMode: false,
    highWaterMark: 16384,
    finalCalled: false,
    needDrain: false,
    ending: false,
    ended: false,
    finished: false,
    destroyed: false,
    decodeStrings: false,
    defaultEncoding: 'utf8',
    length: 0,
    writing: false,
    corked: 0,
    sync: true,
    bufferProcessing: false,
    onwrite: [Function: bound onwrite],
    writecb: null,
    writelen: 0,
    afterWriteTickInfo: null,
    bufferedRequest: null,
    lastBufferedRequest: null,
    pendingcb: 0,
    prefinished: false,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    errored: false,
    bufferedRequestCount: 0,
    corkedRequestsFree: {
      next: null,
      entry: null,
      finish: [Function: bound onCorkedFinish]
    }
  },
  writable: true,
  allowHalfOpen: true,
  _sockname: null,
  _pendingData: null,
  _pendingEncoding: '',
  server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 1,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  _server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 1,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  parser: HTTPParser {
    '0': [Function: parserOnHeaders],
    '1': [Function: parserOnHeadersComplete],
    '2': [Function: parserOnBody],
    '3': [Function: parserOnMessageComplete],
    '4': [Function: bound onParserExecute],
    _headers: [],
    _url: '',
    socket: [Circular *2],
    incoming: null,
    outgoing: null,
    maxHeaderPairs: 2000,
    _consumed: true,
    onIncoming: [Function: bound parserOnIncoming],
    parsingHeadersStart: 1585718450377
  },
  on: [Function: socketListenerWrap],
  addListener: [Function: socketListenerWrap],
  prependListener: [Function: socketListenerWrap],
  _paused: false,
  [Symbol(asyncId)]: 10,
  [Symbol(kHandle)]: TCP {
    reading: true,
    onconnection: null,
    _consumed: true,
    [Symbol(owner)]: [Circular *2]
  },
  [Symbol(kSetNoDelay)]: false,
  [Symbol(lastWriteQueueSize)]: 0,
  [Symbol(timeout)]: null,
  [Symbol(kBuffer)]: null,
  [Symbol(kBufferCb)]: null,
  [Symbol(kBufferGen)]: null,
  [Symbol(kCapture)]: false,
  [Symbol(kBytesRead)]: 0,
  [Symbol(kBytesWritten)]: 0
}

====Tue Mar 31 2020 22:20:50 ====
<ref *2> Socket {
  connecting: false,
  _hadError: false,
  _parent: null,
  _host: null,
  _readableState: ReadableState {
    objectMode: false,
    highWaterMark: 16384,
    buffer: BufferList { head: null, tail: null, length: 0 },
    length: 0,
    pipes: [],
    flowing: true,
    ended: false,
    endEmitted: false,
    reading: true,
    sync: false,
    needReadable: true,
    emittedReadable: false,
    readableListening: false,
    resumeScheduled: true,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    destroyed: false,
    defaultEncoding: 'utf8',
    awaitDrainWriters: null,
    multiAwaitDrain: false,
    readingMore: false,
    decoder: null,
    encoding: null,
    [Symbol(kPaused)]: false
  },
  readable: true,
  _events: [Object: null prototype] {
    end: [ [Function: onReadableStreamEnd], [Function: bound socketOnEnd] ],
    timeout: [Function: socketOnTimeout],
    data: [Function: bound socketOnData],
    error: [Function: socketOnError],
    close: [Function: bound socketOnClose],
    drain: [Function: bound socketOnDrain],
    resume: [Function: onSocketResume],
    pause: [Function: onSocketPause]
  },
  _eventsCount: 8,
  _maxListeners: undefined,
  _writableState: WritableState {
    objectMode: false,
    highWaterMark: 16384,
    finalCalled: false,
    needDrain: false,
    ending: false,
    ended: false,
    finished: false,
    destroyed: false,
    decodeStrings: false,
    defaultEncoding: 'utf8',
    length: 0,
    writing: false,
    corked: 0,
    sync: true,
    bufferProcessing: false,
    onwrite: [Function: bound onwrite],
    writecb: null,
    writelen: 0,
    afterWriteTickInfo: null,
    bufferedRequest: null,
    lastBufferedRequest: null,
    pendingcb: 0,
    prefinished: false,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    errored: false,
    bufferedRequestCount: 0,
    corkedRequestsFree: {
      next: null,
      entry: null,
      finish: [Function: bound onCorkedFinish]
    }
  },
  writable: true,
  allowHalfOpen: true,
  _sockname: null,
  _pendingData: null,
  _pendingEncoding: '',
  server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 2,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  _server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 2,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  parser: HTTPParser {
    '0': [Function: parserOnHeaders],
    '1': [Function: parserOnHeadersComplete],
    '2': [Function: parserOnBody],
    '3': [Function: parserOnMessageComplete],
    '4': [Function: bound onParserExecute],
    _headers: [],
    _url: '',
    socket: [Circular *2],
    incoming: null,
    outgoing: null,
    maxHeaderPairs: 2000,
    _consumed: true,
    onIncoming: [Function: bound parserOnIncoming],
    parsingHeadersStart: 1585718450377
  },
  on: [Function: socketListenerWrap],
  addListener: [Function: socketListenerWrap],
  prependListener: [Function: socketListenerWrap],
  _paused: false,
  [Symbol(asyncId)]: 15,
  [Symbol(kHandle)]: TCP {
    reading: true,
    onconnection: null,
    _consumed: true,
    [Symbol(owner)]: [Circular *2]
  },
  [Symbol(kSetNoDelay)]: false,
  [Symbol(lastWriteQueueSize)]: 0,
  [Symbol(timeout)]: null,
  [Symbol(kBuffer)]: null,
  [Symbol(kBufferCb)]: null,
  [Symbol(kBufferGen)]: null,
  [Symbol(kCapture)]: false,
  [Symbol(kBytesRead)]: 0,
  [Symbol(kBytesWritten)]: 0
}

====Tue Mar 31 2020 22:20:50 ====
GET /accounts/

====Tue Mar 31 2020 22:20:50 ====
RESPONSE something broke: 

====Tue Mar 31 2020 22:21:09 ====
undefined

====Tue Mar 31 2020 22:21:09 ====
<ref *2> Socket {
  connecting: false,
  _hadError: false,
  _parent: null,
  _host: null,
  _readableState: ReadableState {
    objectMode: false,
    highWaterMark: 16384,
    buffer: BufferList { head: null, tail: null, length: 0 },
    length: 0,
    pipes: [],
    flowing: true,
    ended: false,
    endEmitted: false,
    reading: true,
    sync: false,
    needReadable: true,
    emittedReadable: false,
    readableListening: false,
    resumeScheduled: true,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    destroyed: false,
    defaultEncoding: 'utf8',
    awaitDrainWriters: null,
    multiAwaitDrain: false,
    readingMore: false,
    decoder: null,
    encoding: null,
    [Symbol(kPaused)]: false
  },
  readable: true,
  _events: [Object: null prototype] {
    end: [ [Function: onReadableStreamEnd], [Function: bound socketOnEnd] ],
    timeout: [Function: socketOnTimeout],
    data: [Function: bound socketOnData],
    error: [Function: socketOnError],
    close: [Function: bound socketOnClose],
    drain: [Function: bound socketOnDrain],
    resume: [Function: onSocketResume],
    pause: [Function: onSocketPause]
  },
  _eventsCount: 8,
  _maxListeners: undefined,
  _writableState: WritableState {
    objectMode: false,
    highWaterMark: 16384,
    finalCalled: false,
    needDrain: false,
    ending: false,
    ended: false,
    finished: false,
    destroyed: false,
    decodeStrings: false,
    defaultEncoding: 'utf8',
    length: 0,
    writing: false,
    corked: 0,
    sync: true,
    bufferProcessing: false,
    onwrite: [Function: bound onwrite],
    writecb: null,
    writelen: 0,
    afterWriteTickInfo: null,
    bufferedRequest: null,
    lastBufferedRequest: null,
    pendingcb: 0,
    prefinished: false,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    errored: false,
    bufferedRequestCount: 0,
    corkedRequestsFree: {
      next: null,
      entry: null,
      finish: [Function: bound onCorkedFinish]
    }
  },
  writable: true,
  allowHalfOpen: true,
  _sockname: null,
  _pendingData: null,
  _pendingEncoding: '',
  server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 1,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  _server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 1,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  parser: HTTPParser {
    '0': [Function: parserOnHeaders],
    '1': [Function: parserOnHeadersComplete],
    '2': [Function: parserOnBody],
    '3': [Function: parserOnMessageComplete],
    '4': [Function: bound onParserExecute],
    _headers: [],
    _url: '',
    socket: [Circular *2],
    incoming: null,
    outgoing: null,
    maxHeaderPairs: 2000,
    _consumed: true,
    onIncoming: [Function: bound parserOnIncoming],
    parsingHeadersStart: 1585718469872
  },
  on: [Function: socketListenerWrap],
  addListener: [Function: socketListenerWrap],
  prependListener: [Function: socketListenerWrap],
  _paused: false,
  [Symbol(asyncId)]: 10,
  [Symbol(kHandle)]: TCP {
    reading: true,
    onconnection: null,
    _consumed: true,
    [Symbol(owner)]: [Circular *2]
  },
  [Symbol(kSetNoDelay)]: false,
  [Symbol(lastWriteQueueSize)]: 0,
  [Symbol(timeout)]: null,
  [Symbol(kBuffer)]: null,
  [Symbol(kBufferCb)]: null,
  [Symbol(kBufferGen)]: null,
  [Symbol(kCapture)]: false,
  [Symbol(kBytesRead)]: 0,
  [Symbol(kBytesWritten)]: 0
}

====Tue Mar 31 2020 22:21:09 ====
<ref *2> Socket {
  connecting: false,
  _hadError: false,
  _parent: null,
  _host: null,
  _readableState: ReadableState {
    objectMode: false,
    highWaterMark: 16384,
    buffer: BufferList { head: null, tail: null, length: 0 },
    length: 0,
    pipes: [],
    flowing: true,
    ended: false,
    endEmitted: false,
    reading: true,
    sync: false,
    needReadable: true,
    emittedReadable: false,
    readableListening: false,
    resumeScheduled: true,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    destroyed: false,
    defaultEncoding: 'utf8',
    awaitDrainWriters: null,
    multiAwaitDrain: false,
    readingMore: false,
    decoder: null,
    encoding: null,
    [Symbol(kPaused)]: false
  },
  readable: true,
  _events: [Object: null prototype] {
    end: [ [Function: onReadableStreamEnd], [Function: bound socketOnEnd] ],
    timeout: [Function: socketOnTimeout],
    data: [Function: bound socketOnData],
    error: [Function: socketOnError],
    close: [Function: bound socketOnClose],
    drain: [Function: bound socketOnDrain],
    resume: [Function: onSocketResume],
    pause: [Function: onSocketPause]
  },
  _eventsCount: 8,
  _maxListeners: undefined,
  _writableState: WritableState {
    objectMode: false,
    highWaterMark: 16384,
    finalCalled: false,
    needDrain: false,
    ending: false,
    ended: false,
    finished: false,
    destroyed: false,
    decodeStrings: false,
    defaultEncoding: 'utf8',
    length: 0,
    writing: false,
    corked: 0,
    sync: true,
    bufferProcessing: false,
    onwrite: [Function: bound onwrite],
    writecb: null,
    writelen: 0,
    afterWriteTickInfo: null,
    bufferedRequest: null,
    lastBufferedRequest: null,
    pendingcb: 0,
    prefinished: false,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    errored: false,
    bufferedRequestCount: 0,
    corkedRequestsFree: {
      next: null,
      entry: null,
      finish: [Function: bound onCorkedFinish]
    }
  },
  writable: true,
  allowHalfOpen: true,
  _sockname: null,
  _pendingData: null,
  _pendingEncoding: '',
  server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 2,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  _server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 2,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  parser: HTTPParser {
    '0': [Function: parserOnHeaders],
    '1': [Function: parserOnHeadersComplete],
    '2': [Function: parserOnBody],
    '3': [Function: parserOnMessageComplete],
    '4': [Function: bound onParserExecute],
    _headers: [],
    _url: '',
    socket: [Circular *2],
    incoming: null,
    outgoing: null,
    maxHeaderPairs: 2000,
    _consumed: true,
    onIncoming: [Function: bound parserOnIncoming],
    parsingHeadersStart: 1585718469872
  },
  on: [Function: socketListenerWrap],
  addListener: [Function: socketListenerWrap],
  prependListener: [Function: socketListenerWrap],
  _paused: false,
  [Symbol(asyncId)]: 15,
  [Symbol(kHandle)]: TCP {
    reading: true,
    onconnection: null,
    _consumed: true,
    [Symbol(owner)]: [Circular *2]
  },
  [Symbol(kSetNoDelay)]: false,
  [Symbol(lastWriteQueueSize)]: 0,
  [Symbol(timeout)]: null,
  [Symbol(kBuffer)]: null,
  [Symbol(kBufferCb)]: null,
  [Symbol(kBufferGen)]: null,
  [Symbol(kCapture)]: false,
  [Symbol(kBytesRead)]: 0,
  [Symbol(kBytesWritten)]: 0
}

====Tue Mar 31 2020 22:21:09 ====
GET /accounts/

====Tue Mar 31 2020 22:21:09 ====
RESPONSE something broke: [object Object]

====Tue Mar 31 2020 22:21:25 ====
undefined

====Tue Mar 31 2020 22:25:46 ====
undefined

====Tue Mar 31 2020 22:25:57 ====
undefined

====Tue Mar 31 2020 22:26:38 ====
undefined

====Tue Mar 31 2020 22:26:41 ====
<ref *2> Socket {
  connecting: false,
  _hadError: false,
  _parent: null,
  _host: null,
  _readableState: ReadableState {
    objectMode: false,
    highWaterMark: 16384,
    buffer: BufferList { head: null, tail: null, length: 0 },
    length: 0,
    pipes: [],
    flowing: true,
    ended: false,
    endEmitted: false,
    reading: true,
    sync: false,
    needReadable: true,
    emittedReadable: false,
    readableListening: false,
    resumeScheduled: true,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    destroyed: false,
    defaultEncoding: 'utf8',
    awaitDrainWriters: null,
    multiAwaitDrain: false,
    readingMore: false,
    decoder: null,
    encoding: null,
    [Symbol(kPaused)]: false
  },
  readable: true,
  _events: [Object: null prototype] {
    end: [ [Function: onReadableStreamEnd], [Function: bound socketOnEnd] ],
    timeout: [Function: socketOnTimeout],
    data: [Function: bound socketOnData],
    error: [Function: socketOnError],
    close: [Function: bound socketOnClose],
    drain: [Function: bound socketOnDrain],
    resume: [Function: onSocketResume],
    pause: [Function: onSocketPause]
  },
  _eventsCount: 8,
  _maxListeners: undefined,
  _writableState: WritableState {
    objectMode: false,
    highWaterMark: 16384,
    finalCalled: false,
    needDrain: false,
    ending: false,
    ended: false,
    finished: false,
    destroyed: false,
    decodeStrings: false,
    defaultEncoding: 'utf8',
    length: 0,
    writing: false,
    corked: 0,
    sync: true,
    bufferProcessing: false,
    onwrite: [Function: bound onwrite],
    writecb: null,
    writelen: 0,
    afterWriteTickInfo: null,
    bufferedRequest: null,
    lastBufferedRequest: null,
    pendingcb: 0,
    prefinished: false,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    errored: false,
    bufferedRequestCount: 0,
    corkedRequestsFree: {
      next: null,
      entry: null,
      finish: [Function: bound onCorkedFinish]
    }
  },
  writable: true,
  allowHalfOpen: true,
  _sockname: null,
  _pendingData: null,
  _pendingEncoding: '',
  server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 1,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  _server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 1,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  parser: HTTPParser {
    '0': [Function: parserOnHeaders],
    '1': [Function: parserOnHeadersComplete],
    '2': [Function: parserOnBody],
    '3': [Function: parserOnMessageComplete],
    '4': [Function: bound onParserExecute],
    _headers: [],
    _url: '',
    socket: [Circular *2],
    incoming: null,
    outgoing: null,
    maxHeaderPairs: 2000,
    _consumed: true,
    onIncoming: [Function: bound parserOnIncoming],
    parsingHeadersStart: 1585718801511
  },
  on: [Function: socketListenerWrap],
  addListener: [Function: socketListenerWrap],
  prependListener: [Function: socketListenerWrap],
  _paused: false,
  [Symbol(asyncId)]: 10,
  [Symbol(kHandle)]: TCP {
    reading: true,
    onconnection: null,
    _consumed: true,
    [Symbol(owner)]: [Circular *2]
  },
  [Symbol(kSetNoDelay)]: false,
  [Symbol(lastWriteQueueSize)]: 0,
  [Symbol(timeout)]: null,
  [Symbol(kBuffer)]: null,
  [Symbol(kBufferCb)]: null,
  [Symbol(kBufferGen)]: null,
  [Symbol(kCapture)]: false,
  [Symbol(kBytesRead)]: 0,
  [Symbol(kBytesWritten)]: 0
}

====Tue Mar 31 2020 22:26:41 ====
<ref *2> Socket {
  connecting: false,
  _hadError: false,
  _parent: null,
  _host: null,
  _readableState: ReadableState {
    objectMode: false,
    highWaterMark: 16384,
    buffer: BufferList { head: null, tail: null, length: 0 },
    length: 0,
    pipes: [],
    flowing: true,
    ended: false,
    endEmitted: false,
    reading: true,
    sync: false,
    needReadable: true,
    emittedReadable: false,
    readableListening: false,
    resumeScheduled: true,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    destroyed: false,
    defaultEncoding: 'utf8',
    awaitDrainWriters: null,
    multiAwaitDrain: false,
    readingMore: false,
    decoder: null,
    encoding: null,
    [Symbol(kPaused)]: false
  },
  readable: true,
  _events: [Object: null prototype] {
    end: [ [Function: onReadableStreamEnd], [Function: bound socketOnEnd] ],
    timeout: [Function: socketOnTimeout],
    data: [Function: bound socketOnData],
    error: [Function: socketOnError],
    close: [Function: bound socketOnClose],
    drain: [Function: bound socketOnDrain],
    resume: [Function: onSocketResume],
    pause: [Function: onSocketPause]
  },
  _eventsCount: 8,
  _maxListeners: undefined,
  _writableState: WritableState {
    objectMode: false,
    highWaterMark: 16384,
    finalCalled: false,
    needDrain: false,
    ending: false,
    ended: false,
    finished: false,
    destroyed: false,
    decodeStrings: false,
    defaultEncoding: 'utf8',
    length: 0,
    writing: false,
    corked: 0,
    sync: true,
    bufferProcessing: false,
    onwrite: [Function: bound onwrite],
    writecb: null,
    writelen: 0,
    afterWriteTickInfo: null,
    bufferedRequest: null,
    lastBufferedRequest: null,
    pendingcb: 0,
    prefinished: false,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    errored: false,
    bufferedRequestCount: 0,
    corkedRequestsFree: {
      next: null,
      entry: null,
      finish: [Function: bound onCorkedFinish]
    }
  },
  writable: true,
  allowHalfOpen: true,
  _sockname: null,
  _pendingData: null,
  _pendingEncoding: '',
  server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 2,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  _server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 2,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  parser: HTTPParser {
    '0': [Function: parserOnHeaders],
    '1': [Function: parserOnHeadersComplete],
    '2': [Function: parserOnBody],
    '3': [Function: parserOnMessageComplete],
    '4': [Function: bound onParserExecute],
    _headers: [],
    _url: '',
    socket: [Circular *2],
    incoming: null,
    outgoing: null,
    maxHeaderPairs: 2000,
    _consumed: true,
    onIncoming: [Function: bound parserOnIncoming],
    parsingHeadersStart: 1585718801511
  },
  on: [Function: socketListenerWrap],
  addListener: [Function: socketListenerWrap],
  prependListener: [Function: socketListenerWrap],
  _paused: false,
  [Symbol(asyncId)]: 15,
  [Symbol(kHandle)]: TCP {
    reading: true,
    onconnection: null,
    _consumed: true,
    [Symbol(owner)]: [Circular *2]
  },
  [Symbol(kSetNoDelay)]: false,
  [Symbol(lastWriteQueueSize)]: 0,
  [Symbol(timeout)]: null,
  [Symbol(kBuffer)]: null,
  [Symbol(kBufferCb)]: null,
  [Symbol(kBufferGen)]: null,
  [Symbol(kCapture)]: false,
  [Symbol(kBytesRead)]: 0,
  [Symbol(kBytesWritten)]: 0
}

====Tue Mar 31 2020 22:26:41 ====
GET /accounts/

====Tue Mar 31 2020 22:26:41 ====
RESPONSE [object Object],[object Object],[object Object],[object Object],[object Object]

====Tue Mar 31 2020 22:26:41 ====
RESPONSE [{"id":1,"username":"ProRobinHoodTr1","password":"Impossible123!!2","email":"jaledarely","phone":"9165178775","followers":786,"type":"promoImage","following":4998,"owner":1},{"id":2,"username":"StockJesus","password":"Impossible123","email":"robbrandon02","phone":"9165178775","followers":1262,"type":"promoText","following":5001,"owner":1},{"id":3,"username":"joo11244620","password":"Impossible123!!!","email":"abrahaminiguez06@gmail.com","phone":"9165178775","followers":660,"type":null,"following":5000,"owner":1},{"id":5,"username":"MarkZion19","password":"Impossible123!!","email":"teresainiguez12345","phone":"9165178775","followers":0,"type":null,"following":0,"owner":1},{"id":6,"username":"johnson_maximum","password":"Impossible123!","email":null,"phone":"9165178775","followers":160,"type":null,"following":1289,"owner":1}]

====Tue Mar 31 2020 22:32:57 ====
<ref *2> Socket {
  connecting: false,
  _hadError: false,
  _parent: null,
  _host: null,
  _readableState: ReadableState {
    objectMode: false,
    highWaterMark: 16384,
    buffer: BufferList { head: null, tail: null, length: 0 },
    length: 0,
    pipes: [],
    flowing: true,
    ended: false,
    endEmitted: false,
    reading: true,
    sync: false,
    needReadable: true,
    emittedReadable: false,
    readableListening: false,
    resumeScheduled: true,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    destroyed: false,
    defaultEncoding: 'utf8',
    awaitDrainWriters: null,
    multiAwaitDrain: false,
    readingMore: false,
    decoder: null,
    encoding: null,
    [Symbol(kPaused)]: false
  },
  readable: true,
  _events: [Object: null prototype] {
    end: [ [Function: onReadableStreamEnd], [Function: bound socketOnEnd] ],
    timeout: [Function: socketOnTimeout],
    data: [Function: bound socketOnData],
    error: [Function: socketOnError],
    close: [Function: bound socketOnClose],
    drain: [Function: bound socketOnDrain],
    resume: [Function: onSocketResume],
    pause: [Function: onSocketPause]
  },
  _eventsCount: 8,
  _maxListeners: undefined,
  _writableState: WritableState {
    objectMode: false,
    highWaterMark: 16384,
    finalCalled: false,
    needDrain: false,
    ending: false,
    ended: false,
    finished: false,
    destroyed: false,
    decodeStrings: false,
    defaultEncoding: 'utf8',
    length: 0,
    writing: false,
    corked: 0,
    sync: true,
    bufferProcessing: false,
    onwrite: [Function: bound onwrite],
    writecb: null,
    writelen: 0,
    afterWriteTickInfo: null,
    bufferedRequest: null,
    lastBufferedRequest: null,
    pendingcb: 0,
    prefinished: false,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    errored: false,
    bufferedRequestCount: 0,
    corkedRequestsFree: {
      next: null,
      entry: null,
      finish: [Function: bound onCorkedFinish]
    }
  },
  writable: true,
  allowHalfOpen: true,
  _sockname: null,
  _pendingData: null,
  _pendingEncoding: '',
  server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 1,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  _server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 1,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  parser: HTTPParser {
    '0': [Function: parserOnHeaders],
    '1': [Function: parserOnHeadersComplete],
    '2': [Function: parserOnBody],
    '3': [Function: parserOnMessageComplete],
    '4': [Function: bound onParserExecute],
    _headers: [],
    _url: '',
    socket: [Circular *2],
    incoming: null,
    outgoing: null,
    maxHeaderPairs: 2000,
    _consumed: true,
    onIncoming: [Function: bound parserOnIncoming],
    parsingHeadersStart: 1585719177944
  },
  on: [Function: socketListenerWrap],
  addListener: [Function: socketListenerWrap],
  prependListener: [Function: socketListenerWrap],
  _paused: false,
  [Symbol(asyncId)]: 50,
  [Symbol(kHandle)]: TCP {
    reading: true,
    onconnection: null,
    _consumed: true,
    [Symbol(owner)]: [Circular *2]
  },
  [Symbol(kSetNoDelay)]: false,
  [Symbol(lastWriteQueueSize)]: 0,
  [Symbol(timeout)]: null,
  [Symbol(kBuffer)]: null,
  [Symbol(kBufferCb)]: null,
  [Symbol(kBufferGen)]: null,
  [Symbol(kCapture)]: false,
  [Symbol(kBytesRead)]: 0,
  [Symbol(kBytesWritten)]: 0
}

====Tue Mar 31 2020 22:32:58 ====
<ref *2> Socket {
  connecting: false,
  _hadError: false,
  _parent: null,
  _host: null,
  _readableState: ReadableState {
    objectMode: false,
    highWaterMark: 16384,
    buffer: BufferList { head: null, tail: null, length: 0 },
    length: 0,
    pipes: [],
    flowing: true,
    ended: false,
    endEmitted: false,
    reading: true,
    sync: false,
    needReadable: true,
    emittedReadable: false,
    readableListening: false,
    resumeScheduled: true,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    destroyed: false,
    defaultEncoding: 'utf8',
    awaitDrainWriters: null,
    multiAwaitDrain: false,
    readingMore: false,
    decoder: null,
    encoding: null,
    [Symbol(kPaused)]: false
  },
  readable: true,
  _events: [Object: null prototype] {
    end: [ [Function: onReadableStreamEnd], [Function: bound socketOnEnd] ],
    timeout: [Function: socketOnTimeout],
    data: [Function: bound socketOnData],
    error: [Function: socketOnError],
    close: [Function: bound socketOnClose],
    drain: [Function: bound socketOnDrain],
    resume: [Function: onSocketResume],
    pause: [Function: onSocketPause]
  },
  _eventsCount: 8,
  _maxListeners: undefined,
  _writableState: WritableState {
    objectMode: false,
    highWaterMark: 16384,
    finalCalled: false,
    needDrain: false,
    ending: false,
    ended: false,
    finished: false,
    destroyed: false,
    decodeStrings: false,
    defaultEncoding: 'utf8',
    length: 0,
    writing: false,
    corked: 0,
    sync: true,
    bufferProcessing: false,
    onwrite: [Function: bound onwrite],
    writecb: null,
    writelen: 0,
    afterWriteTickInfo: null,
    bufferedRequest: null,
    lastBufferedRequest: null,
    pendingcb: 0,
    prefinished: false,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    errored: false,
    bufferedRequestCount: 0,
    corkedRequestsFree: {
      next: null,
      entry: null,
      finish: [Function: bound onCorkedFinish]
    }
  },
  writable: true,
  allowHalfOpen: true,
  _sockname: null,
  _pendingData: null,
  _pendingEncoding: '',
  server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 2,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  _server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 2,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  parser: HTTPParser {
    '0': [Function: parserOnHeaders],
    '1': [Function: parserOnHeadersComplete],
    '2': [Function: parserOnBody],
    '3': [Function: parserOnMessageComplete],
    '4': [Function: bound onParserExecute],
    _headers: [],
    _url: '',
    socket: [Circular *2],
    incoming: null,
    outgoing: null,
    maxHeaderPairs: 2000,
    _consumed: true,
    onIncoming: [Function: bound parserOnIncoming],
    parsingHeadersStart: 1585719178419
  },
  on: [Function: socketListenerWrap],
  addListener: [Function: socketListenerWrap],
  prependListener: [Function: socketListenerWrap],
  _paused: false,
  [Symbol(asyncId)]: 56,
  [Symbol(kHandle)]: TCP {
    reading: true,
    onconnection: null,
    _consumed: true,
    [Symbol(owner)]: [Circular *2]
  },
  [Symbol(kSetNoDelay)]: false,
  [Symbol(lastWriteQueueSize)]: 0,
  [Symbol(timeout)]: null,
  [Symbol(kBuffer)]: null,
  [Symbol(kBufferCb)]: null,
  [Symbol(kBufferGen)]: null,
  [Symbol(kCapture)]: false,
  [Symbol(kBytesRead)]: 0,
  [Symbol(kBytesWritten)]: 0
}

====Tue Mar 31 2020 22:32:58 ====
OPTIONS /accounts

====Tue Mar 31 2020 22:32:58 ====
RESPONSE GET,HEAD

====Tue Mar 31 2020 22:33:22 ====
<ref *2> Socket {
  connecting: false,
  _hadError: false,
  _parent: null,
  _host: null,
  _readableState: ReadableState {
    objectMode: false,
    highWaterMark: 16384,
    buffer: BufferList { head: null, tail: null, length: 0 },
    length: 0,
    pipes: [],
    flowing: true,
    ended: false,
    endEmitted: false,
    reading: true,
    sync: false,
    needReadable: true,
    emittedReadable: false,
    readableListening: false,
    resumeScheduled: true,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    destroyed: false,
    defaultEncoding: 'utf8',
    awaitDrainWriters: null,
    multiAwaitDrain: false,
    readingMore: false,
    decoder: null,
    encoding: null,
    [Symbol(kPaused)]: false
  },
  readable: true,
  _events: [Object: null prototype] {
    end: [ [Function: onReadableStreamEnd], [Function: bound socketOnEnd] ],
    timeout: [Function: socketOnTimeout],
    data: [Function: bound socketOnData],
    error: [Function: socketOnError],
    close: [Function: bound socketOnClose],
    drain: [Function: bound socketOnDrain],
    resume: [Function: onSocketResume],
    pause: [Function: onSocketPause]
  },
  _eventsCount: 8,
  _maxListeners: undefined,
  _writableState: WritableState {
    objectMode: false,
    highWaterMark: 16384,
    finalCalled: false,
    needDrain: false,
    ending: false,
    ended: false,
    finished: false,
    destroyed: false,
    decodeStrings: false,
    defaultEncoding: 'utf8',
    length: 0,
    writing: false,
    corked: 0,
    sync: true,
    bufferProcessing: false,
    onwrite: [Function: bound onwrite],
    writecb: null,
    writelen: 0,
    afterWriteTickInfo: null,
    bufferedRequest: null,
    lastBufferedRequest: null,
    pendingcb: 0,
    prefinished: false,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    errored: false,
    bufferedRequestCount: 0,
    corkedRequestsFree: {
      next: null,
      entry: null,
      finish: [Function: bound onCorkedFinish]
    }
  },
  writable: true,
  allowHalfOpen: true,
  _sockname: null,
  _pendingData: null,
  _pendingEncoding: '',
  server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 1,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  _server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 1,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  parser: HTTPParser {
    '0': [Function: parserOnHeaders],
    '1': [Function: parserOnHeadersComplete],
    '2': [Function: parserOnBody],
    '3': [Function: parserOnMessageComplete],
    '4': [Function: bound onParserExecute],
    _headers: [],
    _url: '',
    socket: [Circular *2],
    incoming: null,
    outgoing: null,
    maxHeaderPairs: 2000,
    _consumed: true,
    onIncoming: [Function: bound parserOnIncoming],
    parsingHeadersStart: 1585719202869
  },
  on: [Function: socketListenerWrap],
  addListener: [Function: socketListenerWrap],
  prependListener: [Function: socketListenerWrap],
  _paused: false,
  [Symbol(asyncId)]: 76,
  [Symbol(kHandle)]: TCP {
    reading: true,
    onconnection: null,
    _consumed: true,
    [Symbol(owner)]: [Circular *2]
  },
  [Symbol(kSetNoDelay)]: false,
  [Symbol(lastWriteQueueSize)]: 0,
  [Symbol(timeout)]: null,
  [Symbol(kBuffer)]: null,
  [Symbol(kBufferCb)]: null,
  [Symbol(kBufferGen)]: null,
  [Symbol(kCapture)]: false,
  [Symbol(kBytesRead)]: 0,
  [Symbol(kBytesWritten)]: 0
}

====Tue Mar 31 2020 22:33:22 ====
OPTIONS /accounts

====Tue Mar 31 2020 22:33:22 ====
RESPONSE GET,HEAD

====Tue Mar 31 2020 22:33:29 ====
<ref *2> Socket {
  connecting: false,
  _hadError: false,
  _parent: null,
  _host: null,
  _readableState: ReadableState {
    objectMode: false,
    highWaterMark: 16384,
    buffer: BufferList { head: null, tail: null, length: 0 },
    length: 0,
    pipes: [],
    flowing: true,
    ended: false,
    endEmitted: false,
    reading: true,
    sync: false,
    needReadable: true,
    emittedReadable: false,
    readableListening: false,
    resumeScheduled: true,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    destroyed: false,
    defaultEncoding: 'utf8',
    awaitDrainWriters: null,
    multiAwaitDrain: false,
    readingMore: false,
    decoder: null,
    encoding: null,
    [Symbol(kPaused)]: false
  },
  readable: true,
  _events: [Object: null prototype] {
    end: [ [Function: onReadableStreamEnd], [Function: bound socketOnEnd] ],
    timeout: [Function: socketOnTimeout],
    data: [Function: bound socketOnData],
    error: [Function: socketOnError],
    close: [Function: bound socketOnClose],
    drain: [Function: bound socketOnDrain],
    resume: [Function: onSocketResume],
    pause: [Function: onSocketPause]
  },
  _eventsCount: 8,
  _maxListeners: undefined,
  _writableState: WritableState {
    objectMode: false,
    highWaterMark: 16384,
    finalCalled: false,
    needDrain: false,
    ending: false,
    ended: false,
    finished: false,
    destroyed: false,
    decodeStrings: false,
    defaultEncoding: 'utf8',
    length: 0,
    writing: false,
    corked: 0,
    sync: true,
    bufferProcessing: false,
    onwrite: [Function: bound onwrite],
    writecb: null,
    writelen: 0,
    afterWriteTickInfo: null,
    bufferedRequest: null,
    lastBufferedRequest: null,
    pendingcb: 0,
    prefinished: false,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    errored: false,
    bufferedRequestCount: 0,
    corkedRequestsFree: {
      next: null,
      entry: null,
      finish: [Function: bound onCorkedFinish]
    }
  },
  writable: true,
  allowHalfOpen: true,
  _sockname: null,
  _pendingData: null,
  _pendingEncoding: '',
  server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 1,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  _server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 1,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  parser: HTTPParser {
    '0': [Function: parserOnHeaders],
    '1': [Function: parserOnHeadersComplete],
    '2': [Function: parserOnBody],
    '3': [Function: parserOnMessageComplete],
    '4': [Function: bound onParserExecute],
    _headers: [],
    _url: '',
    socket: [Circular *2],
    incoming: null,
    outgoing: null,
    maxHeaderPairs: 2000,
    _consumed: true,
    onIncoming: [Function: bound parserOnIncoming],
    parsingHeadersStart: 1585719209313
  },
  on: [Function: socketListenerWrap],
  addListener: [Function: socketListenerWrap],
  prependListener: [Function: socketListenerWrap],
  _paused: false,
  [Symbol(asyncId)]: 92,
  [Symbol(kHandle)]: TCP {
    reading: true,
    onconnection: null,
    _consumed: true,
    [Symbol(owner)]: [Circular *2]
  },
  [Symbol(kSetNoDelay)]: false,
  [Symbol(lastWriteQueueSize)]: 0,
  [Symbol(timeout)]: null,
  [Symbol(kBuffer)]: null,
  [Symbol(kBufferCb)]: null,
  [Symbol(kBufferGen)]: null,
  [Symbol(kCapture)]: false,
  [Symbol(kBytesRead)]: 0,
  [Symbol(kBytesWritten)]: 0
}

====Tue Mar 31 2020 22:33:29 ====
OPTIONS /accounts

====Tue Mar 31 2020 22:33:29 ====
RESPONSE GET,HEAD

====Tue Mar 31 2020 22:33:43 ====
<ref *2> Socket {
  connecting: false,
  _hadError: false,
  _parent: null,
  _host: null,
  _readableState: ReadableState {
    objectMode: false,
    highWaterMark: 16384,
    buffer: BufferList { head: null, tail: null, length: 0 },
    length: 0,
    pipes: [],
    flowing: true,
    ended: false,
    endEmitted: false,
    reading: true,
    sync: false,
    needReadable: true,
    emittedReadable: false,
    readableListening: false,
    resumeScheduled: true,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    destroyed: false,
    defaultEncoding: 'utf8',
    awaitDrainWriters: null,
    multiAwaitDrain: false,
    readingMore: false,
    decoder: null,
    encoding: null,
    [Symbol(kPaused)]: false
  },
  readable: true,
  _events: [Object: null prototype] {
    end: [ [Function: onReadableStreamEnd], [Function: bound socketOnEnd] ],
    timeout: [Function: socketOnTimeout],
    data: [Function: bound socketOnData],
    error: [Function: socketOnError],
    close: [Function: bound socketOnClose],
    drain: [Function: bound socketOnDrain],
    resume: [Function: onSocketResume],
    pause: [Function: onSocketPause]
  },
  _eventsCount: 8,
  _maxListeners: undefined,
  _writableState: WritableState {
    objectMode: false,
    highWaterMark: 16384,
    finalCalled: false,
    needDrain: false,
    ending: false,
    ended: false,
    finished: false,
    destroyed: false,
    decodeStrings: false,
    defaultEncoding: 'utf8',
    length: 0,
    writing: false,
    corked: 0,
    sync: true,
    bufferProcessing: false,
    onwrite: [Function: bound onwrite],
    writecb: null,
    writelen: 0,
    afterWriteTickInfo: null,
    bufferedRequest: null,
    lastBufferedRequest: null,
    pendingcb: 0,
    prefinished: false,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    errored: false,
    bufferedRequestCount: 0,
    corkedRequestsFree: {
      next: null,
      entry: null,
      finish: [Function: bound onCorkedFinish]
    }
  },
  writable: true,
  allowHalfOpen: true,
  _sockname: null,
  _pendingData: null,
  _pendingEncoding: '',
  server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 1,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  _server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 1,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  parser: HTTPParser {
    '0': [Function: parserOnHeaders],
    '1': [Function: parserOnHeadersComplete],
    '2': [Function: parserOnBody],
    '3': [Function: parserOnMessageComplete],
    '4': [Function: bound onParserExecute],
    _headers: [],
    _url: '',
    socket: [Circular *2],
    incoming: null,
    outgoing: null,
    maxHeaderPairs: 2000,
    _consumed: true,
    onIncoming: [Function: bound parserOnIncoming],
    parsingHeadersStart: 1585719223180
  },
  on: [Function: socketListenerWrap],
  addListener: [Function: socketListenerWrap],
  prependListener: [Function: socketListenerWrap],
  _paused: false,
  [Symbol(asyncId)]: 108,
  [Symbol(kHandle)]: TCP {
    reading: true,
    onconnection: null,
    _consumed: true,
    [Symbol(owner)]: [Circular *2]
  },
  [Symbol(kSetNoDelay)]: false,
  [Symbol(lastWriteQueueSize)]: 0,
  [Symbol(timeout)]: null,
  [Symbol(kBuffer)]: null,
  [Symbol(kBufferCb)]: null,
  [Symbol(kBufferGen)]: null,
  [Symbol(kCapture)]: false,
  [Symbol(kBytesRead)]: 0,
  [Symbol(kBytesWritten)]: 0
}

====Tue Mar 31 2020 22:33:43 ====
<ref *2> Socket {
  connecting: false,
  _hadError: false,
  _parent: null,
  _host: null,
  _readableState: ReadableState {
    objectMode: false,
    highWaterMark: 16384,
    buffer: BufferList { head: null, tail: null, length: 0 },
    length: 0,
    pipes: [],
    flowing: true,
    ended: false,
    endEmitted: false,
    reading: true,
    sync: false,
    needReadable: true,
    emittedReadable: false,
    readableListening: false,
    resumeScheduled: true,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    destroyed: false,
    defaultEncoding: 'utf8',
    awaitDrainWriters: null,
    multiAwaitDrain: false,
    readingMore: false,
    decoder: null,
    encoding: null,
    [Symbol(kPaused)]: false
  },
  readable: true,
  _events: [Object: null prototype] {
    end: [ [Function: onReadableStreamEnd], [Function: bound socketOnEnd] ],
    timeout: [Function: socketOnTimeout],
    data: [Function: bound socketOnData],
    error: [Function: socketOnError],
    close: [Function: bound socketOnClose],
    drain: [Function: bound socketOnDrain],
    resume: [Function: onSocketResume],
    pause: [Function: onSocketPause]
  },
  _eventsCount: 8,
  _maxListeners: undefined,
  _writableState: WritableState {
    objectMode: false,
    highWaterMark: 16384,
    finalCalled: false,
    needDrain: false,
    ending: false,
    ended: false,
    finished: false,
    destroyed: false,
    decodeStrings: false,
    defaultEncoding: 'utf8',
    length: 0,
    writing: false,
    corked: 0,
    sync: true,
    bufferProcessing: false,
    onwrite: [Function: bound onwrite],
    writecb: null,
    writelen: 0,
    afterWriteTickInfo: null,
    bufferedRequest: null,
    lastBufferedRequest: null,
    pendingcb: 0,
    prefinished: false,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    errored: false,
    bufferedRequestCount: 0,
    corkedRequestsFree: {
      next: null,
      entry: null,
      finish: [Function: bound onCorkedFinish]
    }
  },
  writable: true,
  allowHalfOpen: true,
  _sockname: null,
  _pendingData: null,
  _pendingEncoding: '',
  server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 2,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  _server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 2,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  parser: HTTPParser {
    '0': [Function: parserOnHeaders],
    '1': [Function: parserOnHeadersComplete],
    '2': [Function: parserOnBody],
    '3': [Function: parserOnMessageComplete],
    '4': [Function: bound onParserExecute],
    _headers: [],
    _url: '',
    socket: [Circular *2],
    incoming: null,
    outgoing: null,
    maxHeaderPairs: 2000,
    _consumed: true,
    onIncoming: [Function: bound parserOnIncoming],
    parsingHeadersStart: 1585719223180
  },
  on: [Function: socketListenerWrap],
  addListener: [Function: socketListenerWrap],
  prependListener: [Function: socketListenerWrap],
  _paused: false,
  [Symbol(asyncId)]: 113,
  [Symbol(kHandle)]: TCP {
    reading: true,
    onconnection: null,
    _consumed: true,
    [Symbol(owner)]: [Circular *2]
  },
  [Symbol(kSetNoDelay)]: false,
  [Symbol(lastWriteQueueSize)]: 0,
  [Symbol(timeout)]: null,
  [Symbol(kBuffer)]: null,
  [Symbol(kBufferCb)]: null,
  [Symbol(kBufferGen)]: null,
  [Symbol(kCapture)]: false,
  [Symbol(kBytesRead)]: 0,
  [Symbol(kBytesWritten)]: 0
}

====Tue Mar 31 2020 22:33:43 ====
GET /accounts

====Tue Mar 31 2020 22:33:43 ====
RESPONSE [object Object],[object Object],[object Object],[object Object],[object Object]

====Tue Mar 31 2020 22:33:43 ====
RESPONSE [{"id":1,"username":"ProRobinHoodTr1","password":"Impossible123!!2","email":"jaledarely","phone":"9165178775","followers":786,"type":"promoImage","following":4998,"owner":1},{"id":2,"username":"StockJesus","password":"Impossible123","email":"robbrandon02","phone":"9165178775","followers":1262,"type":"promoText","following":5001,"owner":1},{"id":3,"username":"joo11244620","password":"Impossible123!!!","email":"abrahaminiguez06@gmail.com","phone":"9165178775","followers":660,"type":null,"following":5000,"owner":1},{"id":5,"username":"MarkZion19","password":"Impossible123!!","email":"teresainiguez12345","phone":"9165178775","followers":0,"type":null,"following":0,"owner":1},{"id":6,"username":"johnson_maximum","password":"Impossible123!","email":null,"phone":"9165178775","followers":160,"type":null,"following":1289,"owner":1}]

====Tue Mar 31 2020 22:45:41 ====
<ref *2> Socket {
  connecting: false,
  _hadError: false,
  _parent: null,
  _host: null,
  _readableState: ReadableState {
    objectMode: false,
    highWaterMark: 16384,
    buffer: BufferList { head: null, tail: null, length: 0 },
    length: 0,
    pipes: [],
    flowing: true,
    ended: false,
    endEmitted: false,
    reading: true,
    sync: false,
    needReadable: true,
    emittedReadable: false,
    readableListening: false,
    resumeScheduled: true,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    destroyed: false,
    defaultEncoding: 'utf8',
    awaitDrainWriters: null,
    multiAwaitDrain: false,
    readingMore: false,
    decoder: null,
    encoding: null,
    [Symbol(kPaused)]: false
  },
  readable: true,
  _events: [Object: null prototype] {
    end: [ [Function: onReadableStreamEnd], [Function: bound socketOnEnd] ],
    timeout: [Function: socketOnTimeout],
    data: [Function: bound socketOnData],
    error: [Function: socketOnError],
    close: [Function: bound socketOnClose],
    drain: [Function: bound socketOnDrain],
    resume: [Function: onSocketResume],
    pause: [Function: onSocketPause]
  },
  _eventsCount: 8,
  _maxListeners: undefined,
  _writableState: WritableState {
    objectMode: false,
    highWaterMark: 16384,
    finalCalled: false,
    needDrain: false,
    ending: false,
    ended: false,
    finished: false,
    destroyed: false,
    decodeStrings: false,
    defaultEncoding: 'utf8',
    length: 0,
    writing: false,
    corked: 0,
    sync: true,
    bufferProcessing: false,
    onwrite: [Function: bound onwrite],
    writecb: null,
    writelen: 0,
    afterWriteTickInfo: null,
    bufferedRequest: null,
    lastBufferedRequest: null,
    pendingcb: 0,
    prefinished: false,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    errored: false,
    bufferedRequestCount: 0,
    corkedRequestsFree: {
      next: null,
      entry: null,
      finish: [Function: bound onCorkedFinish]
    }
  },
  writable: true,
  allowHalfOpen: true,
  _sockname: null,
  _pendingData: null,
  _pendingEncoding: '',
  server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 1,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  _server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 1,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  parser: HTTPParser {
    '0': [Function: parserOnHeaders],
    '1': [Function: parserOnHeadersComplete],
    '2': [Function: parserOnBody],
    '3': [Function: parserOnMessageComplete],
    '4': [Function: bound onParserExecute],
    _headers: [],
    _url: '',
    socket: [Circular *2],
    incoming: null,
    outgoing: null,
    maxHeaderPairs: 2000,
    _consumed: true,
    onIncoming: [Function: bound parserOnIncoming],
    parsingHeadersStart: 1585719941747
  },
  on: [Function: socketListenerWrap],
  addListener: [Function: socketListenerWrap],
  prependListener: [Function: socketListenerWrap],
  _paused: false,
  [Symbol(asyncId)]: 148,
  [Symbol(kHandle)]: TCP {
    reading: true,
    onconnection: null,
    _consumed: true,
    [Symbol(owner)]: [Circular *2]
  },
  [Symbol(kSetNoDelay)]: false,
  [Symbol(lastWriteQueueSize)]: 0,
  [Symbol(timeout)]: null,
  [Symbol(kBuffer)]: null,
  [Symbol(kBufferCb)]: null,
  [Symbol(kBufferGen)]: null,
  [Symbol(kCapture)]: false,
  [Symbol(kBytesRead)]: 0,
  [Symbol(kBytesWritten)]: 0
}

====Tue Mar 31 2020 22:45:41 ====
OPTIONS /accounts

====Tue Mar 31 2020 22:45:41 ====
RESPONSE GET,HEAD

====Tue Mar 31 2020 22:48:06 ====
undefined

====Tue Mar 31 2020 22:48:09 ====
<ref *2> Socket {
  connecting: false,
  _hadError: false,
  _parent: null,
  _host: null,
  _readableState: ReadableState {
    objectMode: false,
    highWaterMark: 16384,
    buffer: BufferList { head: null, tail: null, length: 0 },
    length: 0,
    pipes: [],
    flowing: true,
    ended: false,
    endEmitted: false,
    reading: true,
    sync: false,
    needReadable: true,
    emittedReadable: false,
    readableListening: false,
    resumeScheduled: true,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    destroyed: false,
    defaultEncoding: 'utf8',
    awaitDrainWriters: null,
    multiAwaitDrain: false,
    readingMore: false,
    decoder: null,
    encoding: null,
    [Symbol(kPaused)]: false
  },
  readable: true,
  _events: [Object: null prototype] {
    end: [ [Function: onReadableStreamEnd], [Function: bound socketOnEnd] ],
    timeout: [Function: socketOnTimeout],
    data: [Function: bound socketOnData],
    error: [Function: socketOnError],
    close: [Function: bound socketOnClose],
    drain: [Function: bound socketOnDrain],
    resume: [Function: onSocketResume],
    pause: [Function: onSocketPause]
  },
  _eventsCount: 8,
  _maxListeners: undefined,
  _writableState: WritableState {
    objectMode: false,
    highWaterMark: 16384,
    finalCalled: false,
    needDrain: false,
    ending: false,
    ended: false,
    finished: false,
    destroyed: false,
    decodeStrings: false,
    defaultEncoding: 'utf8',
    length: 0,
    writing: false,
    corked: 0,
    sync: true,
    bufferProcessing: false,
    onwrite: [Function: bound onwrite],
    writecb: null,
    writelen: 0,
    afterWriteTickInfo: null,
    bufferedRequest: null,
    lastBufferedRequest: null,
    pendingcb: 0,
    prefinished: false,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    errored: false,
    bufferedRequestCount: 0,
    corkedRequestsFree: {
      next: null,
      entry: null,
      finish: [Function: bound onCorkedFinish]
    }
  },
  writable: true,
  allowHalfOpen: true,
  _sockname: null,
  _pendingData: null,
  _pendingEncoding: '',
  server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 1,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  _server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 1,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  parser: HTTPParser {
    '0': [Function: parserOnHeaders],
    '1': [Function: parserOnHeadersComplete],
    '2': [Function: parserOnBody],
    '3': [Function: parserOnMessageComplete],
    '4': [Function: bound onParserExecute],
    _headers: [],
    _url: '',
    socket: [Circular *2],
    incoming: null,
    outgoing: null,
    maxHeaderPairs: 2000,
    _consumed: true,
    onIncoming: [Function: bound parserOnIncoming],
    parsingHeadersStart: 1585720089847
  },
  on: [Function: socketListenerWrap],
  addListener: [Function: socketListenerWrap],
  prependListener: [Function: socketListenerWrap],
  _paused: false,
  [Symbol(asyncId)]: 10,
  [Symbol(kHandle)]: TCP {
    reading: true,
    onconnection: null,
    _consumed: true,
    [Symbol(owner)]: [Circular *2]
  },
  [Symbol(kSetNoDelay)]: false,
  [Symbol(lastWriteQueueSize)]: 0,
  [Symbol(timeout)]: null,
  [Symbol(kBuffer)]: null,
  [Symbol(kBufferCb)]: null,
  [Symbol(kBufferGen)]: null,
  [Symbol(kCapture)]: false,
  [Symbol(kBytesRead)]: 0,
  [Symbol(kBytesWritten)]: 0
}

====Tue Mar 31 2020 22:48:09 ====
GET /accounts

====Tue Mar 31 2020 22:48:09 ====
RESPONSE [object Object],[object Object],[object Object],[object Object],[object Object]

====Tue Mar 31 2020 22:48:09 ====
RESPONSE [{"id":1,"username":"ProRobinHoodTr1","password":"Impossible123!!2","email":"jaledarely","phone":"9165178775","followers":786,"type":"promoImage","following":4998,"owner":1},{"id":2,"username":"StockJesus","password":"Impossible123","email":"robbrandon02","phone":"9165178775","followers":1262,"type":"promoText","following":5001,"owner":1},{"id":3,"username":"joo11244620","password":"Impossible123!!!","email":"abrahaminiguez06@gmail.com","phone":"9165178775","followers":660,"type":null,"following":5000,"owner":1},{"id":5,"username":"MarkZion19","password":"Impossible123!!","email":"teresainiguez12345","phone":"9165178775","followers":0,"type":null,"following":0,"owner":1},{"id":6,"username":"johnson_maximum","password":"Impossible123!","email":null,"phone":"9165178775","followers":160,"type":null,"following":1289,"owner":1}]

====Tue Mar 31 2020 22:51:32 ====
<ref *2> Socket {
  connecting: false,
  _hadError: false,
  _parent: null,
  _host: null,
  _readableState: ReadableState {
    objectMode: false,
    highWaterMark: 16384,
    buffer: BufferList { head: null, tail: null, length: 0 },
    length: 0,
    pipes: [],
    flowing: true,
    ended: false,
    endEmitted: false,
    reading: true,
    sync: false,
    needReadable: true,
    emittedReadable: false,
    readableListening: false,
    resumeScheduled: true,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    destroyed: false,
    defaultEncoding: 'utf8',
    awaitDrainWriters: null,
    multiAwaitDrain: false,
    readingMore: false,
    decoder: null,
    encoding: null,
    [Symbol(kPaused)]: false
  },
  readable: true,
  _events: [Object: null prototype] {
    end: [ [Function: onReadableStreamEnd], [Function: bound socketOnEnd] ],
    timeout: [Function: socketOnTimeout],
    data: [Function: bound socketOnData],
    error: [Function: socketOnError],
    close: [Function: bound socketOnClose],
    drain: [Function: bound socketOnDrain],
    resume: [Function: onSocketResume],
    pause: [Function: onSocketPause]
  },
  _eventsCount: 8,
  _maxListeners: undefined,
  _writableState: WritableState {
    objectMode: false,
    highWaterMark: 16384,
    finalCalled: false,
    needDrain: false,
    ending: false,
    ended: false,
    finished: false,
    destroyed: false,
    decodeStrings: false,
    defaultEncoding: 'utf8',
    length: 0,
    writing: false,
    corked: 0,
    sync: true,
    bufferProcessing: false,
    onwrite: [Function: bound onwrite],
    writecb: null,
    writelen: 0,
    afterWriteTickInfo: null,
    bufferedRequest: null,
    lastBufferedRequest: null,
    pendingcb: 0,
    prefinished: false,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    errored: false,
    bufferedRequestCount: 0,
    corkedRequestsFree: {
      next: null,
      entry: null,
      finish: [Function: bound onCorkedFinish]
    }
  },
  writable: true,
  allowHalfOpen: true,
  _sockname: null,
  _pendingData: null,
  _pendingEncoding: '',
  server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 1,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  _server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 1,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  parser: HTTPParser {
    '0': [Function: parserOnHeaders],
    '1': [Function: parserOnHeadersComplete],
    '2': [Function: parserOnBody],
    '3': [Function: parserOnMessageComplete],
    '4': [Function: bound onParserExecute],
    _headers: [],
    _url: '',
    socket: [Circular *2],
    incoming: null,
    outgoing: null,
    maxHeaderPairs: 2000,
    _consumed: true,
    onIncoming: [Function: bound parserOnIncoming],
    parsingHeadersStart: 1585720292117
  },
  on: [Function: socketListenerWrap],
  addListener: [Function: socketListenerWrap],
  prependListener: [Function: socketListenerWrap],
  _paused: false,
  [Symbol(asyncId)]: 53,
  [Symbol(kHandle)]: TCP {
    reading: true,
    onconnection: null,
    _consumed: true,
    [Symbol(owner)]: [Circular *2]
  },
  [Symbol(kSetNoDelay)]: false,
  [Symbol(lastWriteQueueSize)]: 0,
  [Symbol(timeout)]: null,
  [Symbol(kBuffer)]: null,
  [Symbol(kBufferCb)]: null,
  [Symbol(kBufferGen)]: null,
  [Symbol(kCapture)]: false,
  [Symbol(kBytesRead)]: 0,
  [Symbol(kBytesWritten)]: 0
}

====Tue Mar 31 2020 22:51:32 ====
GET /accounts

====Tue Mar 31 2020 22:51:32 ====
RESPONSE [object Object],[object Object],[object Object],[object Object],[object Object]

====Tue Mar 31 2020 22:51:32 ====
RESPONSE [{"id":1,"username":"ProRobinHoodTr1","password":"Impossible123!!2","email":"jaledarely","phone":"9165178775","followers":786,"type":"promoImage","following":4998,"owner":1},{"id":2,"username":"StockJesus","password":"Impossible123","email":"robbrandon02","phone":"9165178775","followers":1262,"type":"promoText","following":5001,"owner":1},{"id":3,"username":"joo11244620","password":"Impossible123!!!","email":"abrahaminiguez06@gmail.com","phone":"9165178775","followers":660,"type":null,"following":5000,"owner":1},{"id":5,"username":"MarkZion19","password":"Impossible123!!","email":"teresainiguez12345","phone":"9165178775","followers":0,"type":null,"following":0,"owner":1},{"id":6,"username":"johnson_maximum","password":"Impossible123!","email":null,"phone":"9165178775","followers":160,"type":null,"following":1289,"owner":1}]

====Tue Mar 31 2020 22:51:43 ====
<ref *2> Socket {
  connecting: false,
  _hadError: false,
  _parent: null,
  _host: null,
  _readableState: ReadableState {
    objectMode: false,
    highWaterMark: 16384,
    buffer: BufferList { head: null, tail: null, length: 0 },
    length: 0,
    pipes: [],
    flowing: true,
    ended: false,
    endEmitted: false,
    reading: true,
    sync: false,
    needReadable: true,
    emittedReadable: false,
    readableListening: false,
    resumeScheduled: true,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    destroyed: false,
    defaultEncoding: 'utf8',
    awaitDrainWriters: null,
    multiAwaitDrain: false,
    readingMore: false,
    decoder: null,
    encoding: null,
    [Symbol(kPaused)]: false
  },
  readable: true,
  _events: [Object: null prototype] {
    end: [ [Function: onReadableStreamEnd], [Function: bound socketOnEnd] ],
    timeout: [Function: socketOnTimeout],
    data: [Function: bound socketOnData],
    error: [Function: socketOnError],
    close: [Function: bound socketOnClose],
    drain: [Function: bound socketOnDrain],
    resume: [Function: onSocketResume],
    pause: [Function: onSocketPause]
  },
  _eventsCount: 8,
  _maxListeners: undefined,
  _writableState: WritableState {
    objectMode: false,
    highWaterMark: 16384,
    finalCalled: false,
    needDrain: false,
    ending: false,
    ended: false,
    finished: false,
    destroyed: false,
    decodeStrings: false,
    defaultEncoding: 'utf8',
    length: 0,
    writing: false,
    corked: 0,
    sync: true,
    bufferProcessing: false,
    onwrite: [Function: bound onwrite],
    writecb: null,
    writelen: 0,
    afterWriteTickInfo: null,
    bufferedRequest: null,
    lastBufferedRequest: null,
    pendingcb: 0,
    prefinished: false,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    errored: false,
    bufferedRequestCount: 0,
    corkedRequestsFree: {
      next: null,
      entry: null,
      finish: [Function: bound onCorkedFinish]
    }
  },
  writable: true,
  allowHalfOpen: true,
  _sockname: null,
  _pendingData: null,
  _pendingEncoding: '',
  server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 1,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  _server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 1,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  parser: HTTPParser {
    '0': [Function: parserOnHeaders],
    '1': [Function: parserOnHeadersComplete],
    '2': [Function: parserOnBody],
    '3': [Function: parserOnMessageComplete],
    '4': [Function: bound onParserExecute],
    _headers: [],
    _url: '',
    socket: [Circular *2],
    incoming: null,
    outgoing: null,
    maxHeaderPairs: 2000,
    _consumed: true,
    onIncoming: [Function: bound parserOnIncoming],
    parsingHeadersStart: 1585720303365
  },
  on: [Function: socketListenerWrap],
  addListener: [Function: socketListenerWrap],
  prependListener: [Function: socketListenerWrap],
  _paused: false,
  [Symbol(asyncId)]: 95,
  [Symbol(kHandle)]: TCP {
    reading: true,
    onconnection: null,
    _consumed: true,
    [Symbol(owner)]: [Circular *2]
  },
  [Symbol(kSetNoDelay)]: false,
  [Symbol(lastWriteQueueSize)]: 0,
  [Symbol(timeout)]: null,
  [Symbol(kBuffer)]: null,
  [Symbol(kBufferCb)]: null,
  [Symbol(kBufferGen)]: null,
  [Symbol(kCapture)]: false,
  [Symbol(kBytesRead)]: 0,
  [Symbol(kBytesWritten)]: 0
}

====Tue Mar 31 2020 22:51:43 ====
GET /accounts

====Tue Mar 31 2020 22:51:43 ====
RESPONSE [object Object],[object Object],[object Object],[object Object],[object Object]

====Tue Mar 31 2020 22:51:43 ====
RESPONSE [{"id":1,"username":"ProRobinHoodTr1","password":"Impossible123!!2","email":"jaledarely","phone":"9165178775","followers":786,"type":"promoImage","following":4998,"owner":1},{"id":2,"username":"StockJesus","password":"Impossible123","email":"robbrandon02","phone":"9165178775","followers":1262,"type":"promoText","following":5001,"owner":1},{"id":3,"username":"joo11244620","password":"Impossible123!!!","email":"abrahaminiguez06@gmail.com","phone":"9165178775","followers":660,"type":null,"following":5000,"owner":1},{"id":5,"username":"MarkZion19","password":"Impossible123!!","email":"teresainiguez12345","phone":"9165178775","followers":0,"type":null,"following":0,"owner":1},{"id":6,"username":"johnson_maximum","password":"Impossible123!","email":null,"phone":"9165178775","followers":160,"type":null,"following":1289,"owner":1}]

====Tue Mar 31 2020 22:51:49 ====
<ref *2> Socket {
  connecting: false,
  _hadError: false,
  _parent: null,
  _host: null,
  _readableState: ReadableState {
    objectMode: false,
    highWaterMark: 16384,
    buffer: BufferList { head: null, tail: null, length: 0 },
    length: 0,
    pipes: [],
    flowing: true,
    ended: false,
    endEmitted: false,
    reading: true,
    sync: false,
    needReadable: true,
    emittedReadable: false,
    readableListening: false,
    resumeScheduled: true,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    destroyed: false,
    defaultEncoding: 'utf8',
    awaitDrainWriters: null,
    multiAwaitDrain: false,
    readingMore: false,
    decoder: null,
    encoding: null,
    [Symbol(kPaused)]: false
  },
  readable: true,
  _events: [Object: null prototype] {
    end: [ [Function: onReadableStreamEnd], [Function: bound socketOnEnd] ],
    timeout: [Function: socketOnTimeout],
    data: [Function: bound socketOnData],
    error: [Function: socketOnError],
    close: [Function: bound socketOnClose],
    drain: [Function: bound socketOnDrain],
    resume: [Function: onSocketResume],
    pause: [Function: onSocketPause]
  },
  _eventsCount: 8,
  _maxListeners: undefined,
  _writableState: WritableState {
    objectMode: false,
    highWaterMark: 16384,
    finalCalled: false,
    needDrain: false,
    ending: false,
    ended: false,
    finished: false,
    destroyed: false,
    decodeStrings: false,
    defaultEncoding: 'utf8',
    length: 0,
    writing: false,
    corked: 0,
    sync: true,
    bufferProcessing: false,
    onwrite: [Function: bound onwrite],
    writecb: null,
    writelen: 0,
    afterWriteTickInfo: null,
    bufferedRequest: null,
    lastBufferedRequest: null,
    pendingcb: 0,
    prefinished: false,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    errored: false,
    bufferedRequestCount: 0,
    corkedRequestsFree: {
      next: null,
      entry: null,
      finish: [Function: bound onCorkedFinish]
    }
  },
  writable: true,
  allowHalfOpen: true,
  _sockname: null,
  _pendingData: null,
  _pendingEncoding: '',
  server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 1,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  _server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 1,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  parser: HTTPParser {
    '0': [Function: parserOnHeaders],
    '1': [Function: parserOnHeadersComplete],
    '2': [Function: parserOnBody],
    '3': [Function: parserOnMessageComplete],
    '4': [Function: bound onParserExecute],
    _headers: [],
    _url: '',
    socket: [Circular *2],
    incoming: null,
    outgoing: null,
    maxHeaderPairs: 2000,
    _consumed: true,
    onIncoming: [Function: bound parserOnIncoming],
    parsingHeadersStart: 1585720309221
  },
  on: [Function: socketListenerWrap],
  addListener: [Function: socketListenerWrap],
  prependListener: [Function: socketListenerWrap],
  _paused: false,
  [Symbol(asyncId)]: 137,
  [Symbol(kHandle)]: TCP {
    reading: true,
    onconnection: null,
    _consumed: true,
    [Symbol(owner)]: [Circular *2]
  },
  [Symbol(kSetNoDelay)]: false,
  [Symbol(lastWriteQueueSize)]: 0,
  [Symbol(timeout)]: null,
  [Symbol(kBuffer)]: null,
  [Symbol(kBufferCb)]: null,
  [Symbol(kBufferGen)]: null,
  [Symbol(kCapture)]: false,
  [Symbol(kBytesRead)]: 0,
  [Symbol(kBytesWritten)]: 0
}

====Tue Mar 31 2020 22:51:49 ====
GET /accounts

====Tue Mar 31 2020 22:51:49 ====
RESPONSE [object Object],[object Object],[object Object],[object Object],[object Object]

====Tue Mar 31 2020 22:51:49 ====
RESPONSE [{"id":1,"username":"ProRobinHoodTr1","password":"Impossible123!!2","email":"jaledarely","phone":"9165178775","followers":786,"type":"promoImage","following":4998,"owner":1},{"id":2,"username":"StockJesus","password":"Impossible123","email":"robbrandon02","phone":"9165178775","followers":1262,"type":"promoText","following":5001,"owner":1},{"id":3,"username":"joo11244620","password":"Impossible123!!!","email":"abrahaminiguez06@gmail.com","phone":"9165178775","followers":660,"type":null,"following":5000,"owner":1},{"id":5,"username":"MarkZion19","password":"Impossible123!!","email":"teresainiguez12345","phone":"9165178775","followers":0,"type":null,"following":0,"owner":1},{"id":6,"username":"johnson_maximum","password":"Impossible123!","email":null,"phone":"9165178775","followers":160,"type":null,"following":1289,"owner":1}]

====Tue Mar 31 2020 22:53:43 ====
<ref *2> Socket {
  connecting: false,
  _hadError: false,
  _parent: null,
  _host: null,
  _readableState: ReadableState {
    objectMode: false,
    highWaterMark: 16384,
    buffer: BufferList { head: null, tail: null, length: 0 },
    length: 0,
    pipes: [],
    flowing: true,
    ended: false,
    endEmitted: false,
    reading: true,
    sync: false,
    needReadable: true,
    emittedReadable: false,
    readableListening: false,
    resumeScheduled: true,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    destroyed: false,
    defaultEncoding: 'utf8',
    awaitDrainWriters: null,
    multiAwaitDrain: false,
    readingMore: false,
    decoder: null,
    encoding: null,
    [Symbol(kPaused)]: false
  },
  readable: true,
  _events: [Object: null prototype] {
    end: [ [Function: onReadableStreamEnd], [Function: bound socketOnEnd] ],
    timeout: [Function: socketOnTimeout],
    data: [Function: bound socketOnData],
    error: [Function: socketOnError],
    close: [Function: bound socketOnClose],
    drain: [Function: bound socketOnDrain],
    resume: [Function: onSocketResume],
    pause: [Function: onSocketPause]
  },
  _eventsCount: 8,
  _maxListeners: undefined,
  _writableState: WritableState {
    objectMode: false,
    highWaterMark: 16384,
    finalCalled: false,
    needDrain: false,
    ending: false,
    ended: false,
    finished: false,
    destroyed: false,
    decodeStrings: false,
    defaultEncoding: 'utf8',
    length: 0,
    writing: false,
    corked: 0,
    sync: true,
    bufferProcessing: false,
    onwrite: [Function: bound onwrite],
    writecb: null,
    writelen: 0,
    afterWriteTickInfo: null,
    bufferedRequest: null,
    lastBufferedRequest: null,
    pendingcb: 0,
    prefinished: false,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    errored: false,
    bufferedRequestCount: 0,
    corkedRequestsFree: {
      next: null,
      entry: null,
      finish: [Function: bound onCorkedFinish]
    }
  },
  writable: true,
  allowHalfOpen: true,
  _sockname: null,
  _pendingData: null,
  _pendingEncoding: '',
  server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 1,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  _server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 1,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  parser: HTTPParser {
    '0': [Function: parserOnHeaders],
    '1': [Function: parserOnHeadersComplete],
    '2': [Function: parserOnBody],
    '3': [Function: parserOnMessageComplete],
    '4': [Function: bound onParserExecute],
    _headers: [],
    _url: '',
    socket: [Circular *2],
    incoming: null,
    outgoing: null,
    maxHeaderPairs: 2000,
    _consumed: true,
    onIncoming: [Function: bound parserOnIncoming],
    parsingHeadersStart: 1585720423060
  },
  on: [Function: socketListenerWrap],
  addListener: [Function: socketListenerWrap],
  prependListener: [Function: socketListenerWrap],
  _paused: false,
  [Symbol(asyncId)]: 179,
  [Symbol(kHandle)]: TCP {
    reading: true,
    onconnection: null,
    _consumed: true,
    [Symbol(owner)]: [Circular *2]
  },
  [Symbol(kSetNoDelay)]: false,
  [Symbol(lastWriteQueueSize)]: 0,
  [Symbol(timeout)]: null,
  [Symbol(kBuffer)]: null,
  [Symbol(kBufferCb)]: null,
  [Symbol(kBufferGen)]: null,
  [Symbol(kCapture)]: false,
  [Symbol(kBytesRead)]: 0,
  [Symbol(kBytesWritten)]: 0
}

====Tue Mar 31 2020 22:53:43 ====
GET /accounts

====Tue Mar 31 2020 22:53:43 ====
RESPONSE [object Object],[object Object],[object Object],[object Object],[object Object]

====Tue Mar 31 2020 22:53:43 ====
RESPONSE [{"id":1,"username":"ProRobinHoodTr1","password":"Impossible123!!2","email":"jaledarely","phone":"9165178775","followers":786,"type":"promoImage","following":4998,"owner":1},{"id":2,"username":"StockJesus","password":"Impossible123","email":"robbrandon02","phone":"9165178775","followers":1262,"type":"promoText","following":5001,"owner":1},{"id":3,"username":"joo11244620","password":"Impossible123!!!","email":"abrahaminiguez06@gmail.com","phone":"9165178775","followers":660,"type":null,"following":5000,"owner":1},{"id":5,"username":"MarkZion19","password":"Impossible123!!","email":"teresainiguez12345","phone":"9165178775","followers":0,"type":null,"following":0,"owner":1},{"id":6,"username":"johnson_maximum","password":"Impossible123!","email":null,"phone":"9165178775","followers":160,"type":null,"following":1289,"owner":1}]

====Tue Mar 31 2020 22:54:13 ====
<ref *2> Socket {
  connecting: false,
  _hadError: false,
  _parent: null,
  _host: null,
  _readableState: ReadableState {
    objectMode: false,
    highWaterMark: 16384,
    buffer: BufferList { head: null, tail: null, length: 0 },
    length: 0,
    pipes: [],
    flowing: true,
    ended: false,
    endEmitted: false,
    reading: true,
    sync: false,
    needReadable: true,
    emittedReadable: false,
    readableListening: false,
    resumeScheduled: true,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    destroyed: false,
    defaultEncoding: 'utf8',
    awaitDrainWriters: null,
    multiAwaitDrain: false,
    readingMore: false,
    decoder: null,
    encoding: null,
    [Symbol(kPaused)]: false
  },
  readable: true,
  _events: [Object: null prototype] {
    end: [ [Function: onReadableStreamEnd], [Function: bound socketOnEnd] ],
    timeout: [Function: socketOnTimeout],
    data: [Function: bound socketOnData],
    error: [Function: socketOnError],
    close: [Function: bound socketOnClose],
    drain: [Function: bound socketOnDrain],
    resume: [Function: onSocketResume],
    pause: [Function: onSocketPause]
  },
  _eventsCount: 8,
  _maxListeners: undefined,
  _writableState: WritableState {
    objectMode: false,
    highWaterMark: 16384,
    finalCalled: false,
    needDrain: false,
    ending: false,
    ended: false,
    finished: false,
    destroyed: false,
    decodeStrings: false,
    defaultEncoding: 'utf8',
    length: 0,
    writing: false,
    corked: 0,
    sync: true,
    bufferProcessing: false,
    onwrite: [Function: bound onwrite],
    writecb: null,
    writelen: 0,
    afterWriteTickInfo: null,
    bufferedRequest: null,
    lastBufferedRequest: null,
    pendingcb: 0,
    prefinished: false,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    errored: false,
    bufferedRequestCount: 0,
    corkedRequestsFree: {
      next: null,
      entry: null,
      finish: [Function: bound onCorkedFinish]
    }
  },
  writable: true,
  allowHalfOpen: true,
  _sockname: null,
  _pendingData: null,
  _pendingEncoding: '',
  server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 1,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  _server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 1,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  parser: HTTPParser {
    '0': [Function: parserOnHeaders],
    '1': [Function: parserOnHeadersComplete],
    '2': [Function: parserOnBody],
    '3': [Function: parserOnMessageComplete],
    '4': [Function: bound onParserExecute],
    _headers: [],
    _url: '',
    socket: [Circular *2],
    incoming: null,
    outgoing: null,
    maxHeaderPairs: 2000,
    _consumed: true,
    onIncoming: [Function: bound parserOnIncoming],
    parsingHeadersStart: 1585720453706
  },
  on: [Function: socketListenerWrap],
  addListener: [Function: socketListenerWrap],
  prependListener: [Function: socketListenerWrap],
  _paused: false,
  [Symbol(asyncId)]: 221,
  [Symbol(kHandle)]: TCP {
    reading: true,
    onconnection: null,
    _consumed: true,
    [Symbol(owner)]: [Circular *2]
  },
  [Symbol(kSetNoDelay)]: false,
  [Symbol(lastWriteQueueSize)]: 0,
  [Symbol(timeout)]: null,
  [Symbol(kBuffer)]: null,
  [Symbol(kBufferCb)]: null,
  [Symbol(kBufferGen)]: null,
  [Symbol(kCapture)]: false,
  [Symbol(kBytesRead)]: 0,
  [Symbol(kBytesWritten)]: 0
}

====Tue Mar 31 2020 22:54:13 ====
GET /accounts

====Tue Mar 31 2020 22:54:13 ====
RESPONSE [object Object],[object Object],[object Object],[object Object],[object Object]

====Tue Mar 31 2020 22:54:13 ====
RESPONSE [{"id":1,"username":"ProRobinHoodTr1","password":"Impossible123!!2","email":"jaledarely","phone":"9165178775","followers":786,"type":"promoImage","following":4998,"owner":1},{"id":2,"username":"StockJesus","password":"Impossible123","email":"robbrandon02","phone":"9165178775","followers":1262,"type":"promoText","following":5001,"owner":1},{"id":3,"username":"joo11244620","password":"Impossible123!!!","email":"abrahaminiguez06@gmail.com","phone":"9165178775","followers":660,"type":null,"following":5000,"owner":1},{"id":5,"username":"MarkZion19","password":"Impossible123!!","email":"teresainiguez12345","phone":"9165178775","followers":0,"type":null,"following":0,"owner":1},{"id":6,"username":"johnson_maximum","password":"Impossible123!","email":null,"phone":"9165178775","followers":160,"type":null,"following":1289,"owner":1}]

====Tue Mar 31 2020 22:54:28 ====
<ref *2> Socket {
  connecting: false,
  _hadError: false,
  _parent: null,
  _host: null,
  _readableState: ReadableState {
    objectMode: false,
    highWaterMark: 16384,
    buffer: BufferList { head: null, tail: null, length: 0 },
    length: 0,
    pipes: [],
    flowing: true,
    ended: false,
    endEmitted: false,
    reading: true,
    sync: false,
    needReadable: true,
    emittedReadable: false,
    readableListening: false,
    resumeScheduled: true,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    destroyed: false,
    defaultEncoding: 'utf8',
    awaitDrainWriters: null,
    multiAwaitDrain: false,
    readingMore: false,
    decoder: null,
    encoding: null,
    [Symbol(kPaused)]: false
  },
  readable: true,
  _events: [Object: null prototype] {
    end: [ [Function: onReadableStreamEnd], [Function: bound socketOnEnd] ],
    timeout: [Function: socketOnTimeout],
    data: [Function: bound socketOnData],
    error: [Function: socketOnError],
    close: [Function: bound socketOnClose],
    drain: [Function: bound socketOnDrain],
    resume: [Function: onSocketResume],
    pause: [Function: onSocketPause]
  },
  _eventsCount: 8,
  _maxListeners: undefined,
  _writableState: WritableState {
    objectMode: false,
    highWaterMark: 16384,
    finalCalled: false,
    needDrain: false,
    ending: false,
    ended: false,
    finished: false,
    destroyed: false,
    decodeStrings: false,
    defaultEncoding: 'utf8',
    length: 0,
    writing: false,
    corked: 0,
    sync: true,
    bufferProcessing: false,
    onwrite: [Function: bound onwrite],
    writecb: null,
    writelen: 0,
    afterWriteTickInfo: null,
    bufferedRequest: null,
    lastBufferedRequest: null,
    pendingcb: 0,
    prefinished: false,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    errored: false,
    bufferedRequestCount: 0,
    corkedRequestsFree: {
      next: null,
      entry: null,
      finish: [Function: bound onCorkedFinish]
    }
  },
  writable: true,
  allowHalfOpen: true,
  _sockname: null,
  _pendingData: null,
  _pendingEncoding: '',
  server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 1,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  _server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 1,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  parser: HTTPParser {
    '0': [Function: parserOnHeaders],
    '1': [Function: parserOnHeadersComplete],
    '2': [Function: parserOnBody],
    '3': [Function: parserOnMessageComplete],
    '4': [Function: bound onParserExecute],
    _headers: [],
    _url: '',
    socket: [Circular *2],
    incoming: null,
    outgoing: null,
    maxHeaderPairs: 2000,
    _consumed: true,
    onIncoming: [Function: bound parserOnIncoming],
    parsingHeadersStart: 1585720468748
  },
  on: [Function: socketListenerWrap],
  addListener: [Function: socketListenerWrap],
  prependListener: [Function: socketListenerWrap],
  _paused: false,
  [Symbol(asyncId)]: 263,
  [Symbol(kHandle)]: TCP {
    reading: true,
    onconnection: null,
    _consumed: true,
    [Symbol(owner)]: [Circular *2]
  },
  [Symbol(kSetNoDelay)]: false,
  [Symbol(lastWriteQueueSize)]: 0,
  [Symbol(timeout)]: null,
  [Symbol(kBuffer)]: null,
  [Symbol(kBufferCb)]: null,
  [Symbol(kBufferGen)]: null,
  [Symbol(kCapture)]: false,
  [Symbol(kBytesRead)]: 0,
  [Symbol(kBytesWritten)]: 0
}

====Tue Mar 31 2020 22:54:28 ====
GET /accounts

====Tue Mar 31 2020 22:54:28 ====
RESPONSE [object Object],[object Object],[object Object],[object Object],[object Object]

====Tue Mar 31 2020 22:54:28 ====
RESPONSE [{"id":1,"username":"ProRobinHoodTr1","password":"Impossible123!!2","email":"jaledarely","phone":"9165178775","followers":786,"type":"promoImage","following":4998,"owner":1},{"id":2,"username":"StockJesus","password":"Impossible123","email":"robbrandon02","phone":"9165178775","followers":1262,"type":"promoText","following":5001,"owner":1},{"id":3,"username":"joo11244620","password":"Impossible123!!!","email":"abrahaminiguez06@gmail.com","phone":"9165178775","followers":660,"type":null,"following":5000,"owner":1},{"id":5,"username":"MarkZion19","password":"Impossible123!!","email":"teresainiguez12345","phone":"9165178775","followers":0,"type":null,"following":0,"owner":1},{"id":6,"username":"johnson_maximum","password":"Impossible123!","email":null,"phone":"9165178775","followers":160,"type":null,"following":1289,"owner":1}]

====Tue Mar 31 2020 22:54:55 ====
<ref *2> Socket {
  connecting: false,
  _hadError: false,
  _parent: null,
  _host: null,
  _readableState: ReadableState {
    objectMode: false,
    highWaterMark: 16384,
    buffer: BufferList { head: null, tail: null, length: 0 },
    length: 0,
    pipes: [],
    flowing: true,
    ended: false,
    endEmitted: false,
    reading: true,
    sync: false,
    needReadable: true,
    emittedReadable: false,
    readableListening: false,
    resumeScheduled: true,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    destroyed: false,
    defaultEncoding: 'utf8',
    awaitDrainWriters: null,
    multiAwaitDrain: false,
    readingMore: false,
    decoder: null,
    encoding: null,
    [Symbol(kPaused)]: false
  },
  readable: true,
  _events: [Object: null prototype] {
    end: [ [Function: onReadableStreamEnd], [Function: bound socketOnEnd] ],
    timeout: [Function: socketOnTimeout],
    data: [Function: bound socketOnData],
    error: [Function: socketOnError],
    close: [Function: bound socketOnClose],
    drain: [Function: bound socketOnDrain],
    resume: [Function: onSocketResume],
    pause: [Function: onSocketPause]
  },
  _eventsCount: 8,
  _maxListeners: undefined,
  _writableState: WritableState {
    objectMode: false,
    highWaterMark: 16384,
    finalCalled: false,
    needDrain: false,
    ending: false,
    ended: false,
    finished: false,
    destroyed: false,
    decodeStrings: false,
    defaultEncoding: 'utf8',
    length: 0,
    writing: false,
    corked: 0,
    sync: true,
    bufferProcessing: false,
    onwrite: [Function: bound onwrite],
    writecb: null,
    writelen: 0,
    afterWriteTickInfo: null,
    bufferedRequest: null,
    lastBufferedRequest: null,
    pendingcb: 0,
    prefinished: false,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    errored: false,
    bufferedRequestCount: 0,
    corkedRequestsFree: {
      next: null,
      entry: null,
      finish: [Function: bound onCorkedFinish]
    }
  },
  writable: true,
  allowHalfOpen: true,
  _sockname: null,
  _pendingData: null,
  _pendingEncoding: '',
  server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 1,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  _server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 1,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  parser: HTTPParser {
    '0': [Function: parserOnHeaders],
    '1': [Function: parserOnHeadersComplete],
    '2': [Function: parserOnBody],
    '3': [Function: parserOnMessageComplete],
    '4': [Function: bound onParserExecute],
    _headers: [],
    _url: '',
    socket: [Circular *2],
    incoming: null,
    outgoing: null,
    maxHeaderPairs: 2000,
    _consumed: true,
    onIncoming: [Function: bound parserOnIncoming],
    parsingHeadersStart: 1585720495921
  },
  on: [Function: socketListenerWrap],
  addListener: [Function: socketListenerWrap],
  prependListener: [Function: socketListenerWrap],
  _paused: false,
  [Symbol(asyncId)]: 305,
  [Symbol(kHandle)]: TCP {
    reading: true,
    onconnection: null,
    _consumed: true,
    [Symbol(owner)]: [Circular *2]
  },
  [Symbol(kSetNoDelay)]: false,
  [Symbol(lastWriteQueueSize)]: 0,
  [Symbol(timeout)]: null,
  [Symbol(kBuffer)]: null,
  [Symbol(kBufferCb)]: null,
  [Symbol(kBufferGen)]: null,
  [Symbol(kCapture)]: false,
  [Symbol(kBytesRead)]: 0,
  [Symbol(kBytesWritten)]: 0
}

====Tue Mar 31 2020 22:54:55 ====
GET /accounts

====Tue Mar 31 2020 22:54:55 ====
RESPONSE [object Object],[object Object],[object Object],[object Object],[object Object]

====Tue Mar 31 2020 22:54:55 ====
RESPONSE [{"id":1,"username":"ProRobinHoodTr1","password":"Impossible123!!2","email":"jaledarely","phone":"9165178775","followers":786,"type":"promoImage","following":4998,"owner":1},{"id":2,"username":"StockJesus","password":"Impossible123","email":"robbrandon02","phone":"9165178775","followers":1262,"type":"promoText","following":5001,"owner":1},{"id":3,"username":"joo11244620","password":"Impossible123!!!","email":"abrahaminiguez06@gmail.com","phone":"9165178775","followers":660,"type":null,"following":5000,"owner":1},{"id":5,"username":"MarkZion19","password":"Impossible123!!","email":"teresainiguez12345","phone":"9165178775","followers":0,"type":null,"following":0,"owner":1},{"id":6,"username":"johnson_maximum","password":"Impossible123!","email":null,"phone":"9165178775","followers":160,"type":null,"following":1289,"owner":1}]

====Tue Mar 31 2020 22:55:10 ====
<ref *2> Socket {
  connecting: false,
  _hadError: false,
  _parent: null,
  _host: null,
  _readableState: ReadableState {
    objectMode: false,
    highWaterMark: 16384,
    buffer: BufferList { head: null, tail: null, length: 0 },
    length: 0,
    pipes: [],
    flowing: true,
    ended: false,
    endEmitted: false,
    reading: true,
    sync: false,
    needReadable: true,
    emittedReadable: false,
    readableListening: false,
    resumeScheduled: true,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    destroyed: false,
    defaultEncoding: 'utf8',
    awaitDrainWriters: null,
    multiAwaitDrain: false,
    readingMore: false,
    decoder: null,
    encoding: null,
    [Symbol(kPaused)]: false
  },
  readable: true,
  _events: [Object: null prototype] {
    end: [ [Function: onReadableStreamEnd], [Function: bound socketOnEnd] ],
    timeout: [Function: socketOnTimeout],
    data: [Function: bound socketOnData],
    error: [Function: socketOnError],
    close: [Function: bound socketOnClose],
    drain: [Function: bound socketOnDrain],
    resume: [Function: onSocketResume],
    pause: [Function: onSocketPause]
  },
  _eventsCount: 8,
  _maxListeners: undefined,
  _writableState: WritableState {
    objectMode: false,
    highWaterMark: 16384,
    finalCalled: false,
    needDrain: false,
    ending: false,
    ended: false,
    finished: false,
    destroyed: false,
    decodeStrings: false,
    defaultEncoding: 'utf8',
    length: 0,
    writing: false,
    corked: 0,
    sync: true,
    bufferProcessing: false,
    onwrite: [Function: bound onwrite],
    writecb: null,
    writelen: 0,
    afterWriteTickInfo: null,
    bufferedRequest: null,
    lastBufferedRequest: null,
    pendingcb: 0,
    prefinished: false,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    errored: false,
    bufferedRequestCount: 0,
    corkedRequestsFree: {
      next: null,
      entry: null,
      finish: [Function: bound onCorkedFinish]
    }
  },
  writable: true,
  allowHalfOpen: true,
  _sockname: null,
  _pendingData: null,
  _pendingEncoding: '',
  server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 1,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  _server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 1,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  parser: HTTPParser {
    '0': [Function: parserOnHeaders],
    '1': [Function: parserOnHeadersComplete],
    '2': [Function: parserOnBody],
    '3': [Function: parserOnMessageComplete],
    '4': [Function: bound onParserExecute],
    _headers: [],
    _url: '',
    socket: [Circular *2],
    incoming: null,
    outgoing: null,
    maxHeaderPairs: 2000,
    _consumed: true,
    onIncoming: [Function: bound parserOnIncoming],
    parsingHeadersStart: 1585720510508
  },
  on: [Function: socketListenerWrap],
  addListener: [Function: socketListenerWrap],
  prependListener: [Function: socketListenerWrap],
  _paused: false,
  [Symbol(asyncId)]: 347,
  [Symbol(kHandle)]: TCP {
    reading: true,
    onconnection: null,
    _consumed: true,
    [Symbol(owner)]: [Circular *2]
  },
  [Symbol(kSetNoDelay)]: false,
  [Symbol(lastWriteQueueSize)]: 0,
  [Symbol(timeout)]: null,
  [Symbol(kBuffer)]: null,
  [Symbol(kBufferCb)]: null,
  [Symbol(kBufferGen)]: null,
  [Symbol(kCapture)]: false,
  [Symbol(kBytesRead)]: 0,
  [Symbol(kBytesWritten)]: 0
}

====Tue Mar 31 2020 22:55:10 ====
GET /accounts

====Tue Mar 31 2020 22:55:10 ====
RESPONSE [object Object],[object Object],[object Object],[object Object],[object Object]

====Tue Mar 31 2020 22:55:10 ====
RESPONSE [{"id":1,"username":"ProRobinHoodTr1","password":"Impossible123!!2","email":"jaledarely","phone":"9165178775","followers":786,"type":"promoImage","following":4998,"owner":1},{"id":2,"username":"StockJesus","password":"Impossible123","email":"robbrandon02","phone":"9165178775","followers":1262,"type":"promoText","following":5001,"owner":1},{"id":3,"username":"joo11244620","password":"Impossible123!!!","email":"abrahaminiguez06@gmail.com","phone":"9165178775","followers":660,"type":null,"following":5000,"owner":1},{"id":5,"username":"MarkZion19","password":"Impossible123!!","email":"teresainiguez12345","phone":"9165178775","followers":0,"type":null,"following":0,"owner":1},{"id":6,"username":"johnson_maximum","password":"Impossible123!","email":null,"phone":"9165178775","followers":160,"type":null,"following":1289,"owner":1}]

====Tue Mar 31 2020 22:55:33 ====
<ref *2> Socket {
  connecting: false,
  _hadError: false,
  _parent: null,
  _host: null,
  _readableState: ReadableState {
    objectMode: false,
    highWaterMark: 16384,
    buffer: BufferList { head: null, tail: null, length: 0 },
    length: 0,
    pipes: [],
    flowing: true,
    ended: false,
    endEmitted: false,
    reading: true,
    sync: false,
    needReadable: true,
    emittedReadable: false,
    readableListening: false,
    resumeScheduled: true,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    destroyed: false,
    defaultEncoding: 'utf8',
    awaitDrainWriters: null,
    multiAwaitDrain: false,
    readingMore: false,
    decoder: null,
    encoding: null,
    [Symbol(kPaused)]: false
  },
  readable: true,
  _events: [Object: null prototype] {
    end: [ [Function: onReadableStreamEnd], [Function: bound socketOnEnd] ],
    timeout: [Function: socketOnTimeout],
    data: [Function: bound socketOnData],
    error: [Function: socketOnError],
    close: [Function: bound socketOnClose],
    drain: [Function: bound socketOnDrain],
    resume: [Function: onSocketResume],
    pause: [Function: onSocketPause]
  },
  _eventsCount: 8,
  _maxListeners: undefined,
  _writableState: WritableState {
    objectMode: false,
    highWaterMark: 16384,
    finalCalled: false,
    needDrain: false,
    ending: false,
    ended: false,
    finished: false,
    destroyed: false,
    decodeStrings: false,
    defaultEncoding: 'utf8',
    length: 0,
    writing: false,
    corked: 0,
    sync: true,
    bufferProcessing: false,
    onwrite: [Function: bound onwrite],
    writecb: null,
    writelen: 0,
    afterWriteTickInfo: null,
    bufferedRequest: null,
    lastBufferedRequest: null,
    pendingcb: 0,
    prefinished: false,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    errored: false,
    bufferedRequestCount: 0,
    corkedRequestsFree: {
      next: null,
      entry: null,
      finish: [Function: bound onCorkedFinish]
    }
  },
  writable: true,
  allowHalfOpen: true,
  _sockname: null,
  _pendingData: null,
  _pendingEncoding: '',
  server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 1,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  _server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 1,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  parser: HTTPParser {
    '0': [Function: parserOnHeaders],
    '1': [Function: parserOnHeadersComplete],
    '2': [Function: parserOnBody],
    '3': [Function: parserOnMessageComplete],
    '4': [Function: bound onParserExecute],
    _headers: [],
    _url: '',
    socket: [Circular *2],
    incoming: null,
    outgoing: null,
    maxHeaderPairs: 2000,
    _consumed: true,
    onIncoming: [Function: bound parserOnIncoming],
    parsingHeadersStart: 1585720533965
  },
  on: [Function: socketListenerWrap],
  addListener: [Function: socketListenerWrap],
  prependListener: [Function: socketListenerWrap],
  _paused: false,
  [Symbol(asyncId)]: 389,
  [Symbol(kHandle)]: TCP {
    reading: true,
    onconnection: null,
    _consumed: true,
    [Symbol(owner)]: [Circular *2]
  },
  [Symbol(kSetNoDelay)]: false,
  [Symbol(lastWriteQueueSize)]: 0,
  [Symbol(timeout)]: null,
  [Symbol(kBuffer)]: null,
  [Symbol(kBufferCb)]: null,
  [Symbol(kBufferGen)]: null,
  [Symbol(kCapture)]: false,
  [Symbol(kBytesRead)]: 0,
  [Symbol(kBytesWritten)]: 0
}

====Tue Mar 31 2020 22:55:33 ====
GET /accounts

====Tue Mar 31 2020 22:55:33 ====
RESPONSE [object Object],[object Object],[object Object],[object Object],[object Object]

====Tue Mar 31 2020 22:55:33 ====
RESPONSE [{"id":1,"username":"ProRobinHoodTr1","password":"Impossible123!!2","email":"jaledarely","phone":"9165178775","followers":786,"type":"promoImage","following":4998,"owner":1},{"id":2,"username":"StockJesus","password":"Impossible123","email":"robbrandon02","phone":"9165178775","followers":1262,"type":"promoText","following":5001,"owner":1},{"id":3,"username":"joo11244620","password":"Impossible123!!!","email":"abrahaminiguez06@gmail.com","phone":"9165178775","followers":660,"type":null,"following":5000,"owner":1},{"id":5,"username":"MarkZion19","password":"Impossible123!!","email":"teresainiguez12345","phone":"9165178775","followers":0,"type":null,"following":0,"owner":1},{"id":6,"username":"johnson_maximum","password":"Impossible123!","email":null,"phone":"9165178775","followers":160,"type":null,"following":1289,"owner":1}]

====Tue Mar 31 2020 22:55:48 ====
<ref *2> Socket {
  connecting: false,
  _hadError: false,
  _parent: null,
  _host: null,
  _readableState: ReadableState {
    objectMode: false,
    highWaterMark: 16384,
    buffer: BufferList { head: null, tail: null, length: 0 },
    length: 0,
    pipes: [],
    flowing: true,
    ended: false,
    endEmitted: false,
    reading: true,
    sync: false,
    needReadable: true,
    emittedReadable: false,
    readableListening: false,
    resumeScheduled: true,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    destroyed: false,
    defaultEncoding: 'utf8',
    awaitDrainWriters: null,
    multiAwaitDrain: false,
    readingMore: false,
    decoder: null,
    encoding: null,
    [Symbol(kPaused)]: false
  },
  readable: true,
  _events: [Object: null prototype] {
    end: [ [Function: onReadableStreamEnd], [Function: bound socketOnEnd] ],
    timeout: [Function: socketOnTimeout],
    data: [Function: bound socketOnData],
    error: [Function: socketOnError],
    close: [Function: bound socketOnClose],
    drain: [Function: bound socketOnDrain],
    resume: [Function: onSocketResume],
    pause: [Function: onSocketPause]
  },
  _eventsCount: 8,
  _maxListeners: undefined,
  _writableState: WritableState {
    objectMode: false,
    highWaterMark: 16384,
    finalCalled: false,
    needDrain: false,
    ending: false,
    ended: false,
    finished: false,
    destroyed: false,
    decodeStrings: false,
    defaultEncoding: 'utf8',
    length: 0,
    writing: false,
    corked: 0,
    sync: true,
    bufferProcessing: false,
    onwrite: [Function: bound onwrite],
    writecb: null,
    writelen: 0,
    afterWriteTickInfo: null,
    bufferedRequest: null,
    lastBufferedRequest: null,
    pendingcb: 0,
    prefinished: false,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    errored: false,
    bufferedRequestCount: 0,
    corkedRequestsFree: {
      next: null,
      entry: null,
      finish: [Function: bound onCorkedFinish]
    }
  },
  writable: true,
  allowHalfOpen: true,
  _sockname: null,
  _pendingData: null,
  _pendingEncoding: '',
  server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 1,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  _server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 1,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  parser: HTTPParser {
    '0': [Function: parserOnHeaders],
    '1': [Function: parserOnHeadersComplete],
    '2': [Function: parserOnBody],
    '3': [Function: parserOnMessageComplete],
    '4': [Function: bound onParserExecute],
    _headers: [],
    _url: '',
    socket: [Circular *2],
    incoming: null,
    outgoing: null,
    maxHeaderPairs: 2000,
    _consumed: true,
    onIncoming: [Function: bound parserOnIncoming],
    parsingHeadersStart: 1585720548883
  },
  on: [Function: socketListenerWrap],
  addListener: [Function: socketListenerWrap],
  prependListener: [Function: socketListenerWrap],
  _paused: false,
  [Symbol(asyncId)]: 431,
  [Symbol(kHandle)]: TCP {
    reading: true,
    onconnection: null,
    _consumed: true,
    [Symbol(owner)]: [Circular *2]
  },
  [Symbol(kSetNoDelay)]: false,
  [Symbol(lastWriteQueueSize)]: 0,
  [Symbol(timeout)]: null,
  [Symbol(kBuffer)]: null,
  [Symbol(kBufferCb)]: null,
  [Symbol(kBufferGen)]: null,
  [Symbol(kCapture)]: false,
  [Symbol(kBytesRead)]: 0,
  [Symbol(kBytesWritten)]: 0
}

====Tue Mar 31 2020 22:55:48 ====
GET /accounts

====Tue Mar 31 2020 22:55:48 ====
RESPONSE [object Object],[object Object],[object Object],[object Object],[object Object]

====Tue Mar 31 2020 22:55:48 ====
RESPONSE [{"id":1,"username":"ProRobinHoodTr1","password":"Impossible123!!2","email":"jaledarely","phone":"9165178775","followers":786,"type":"promoImage","following":4998,"owner":1},{"id":2,"username":"StockJesus","password":"Impossible123","email":"robbrandon02","phone":"9165178775","followers":1262,"type":"promoText","following":5001,"owner":1},{"id":3,"username":"joo11244620","password":"Impossible123!!!","email":"abrahaminiguez06@gmail.com","phone":"9165178775","followers":660,"type":null,"following":5000,"owner":1},{"id":5,"username":"MarkZion19","password":"Impossible123!!","email":"teresainiguez12345","phone":"9165178775","followers":0,"type":null,"following":0,"owner":1},{"id":6,"username":"johnson_maximum","password":"Impossible123!","email":null,"phone":"9165178775","followers":160,"type":null,"following":1289,"owner":1}]

====Tue Mar 31 2020 22:55:54 ====
<ref *2> Socket {
  connecting: false,
  _hadError: false,
  _parent: null,
  _host: null,
  _readableState: ReadableState {
    objectMode: false,
    highWaterMark: 16384,
    buffer: BufferList { head: null, tail: null, length: 0 },
    length: 0,
    pipes: [],
    flowing: true,
    ended: false,
    endEmitted: false,
    reading: true,
    sync: false,
    needReadable: true,
    emittedReadable: false,
    readableListening: false,
    resumeScheduled: true,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    destroyed: false,
    defaultEncoding: 'utf8',
    awaitDrainWriters: null,
    multiAwaitDrain: false,
    readingMore: false,
    decoder: null,
    encoding: null,
    [Symbol(kPaused)]: false
  },
  readable: true,
  _events: [Object: null prototype] {
    end: [ [Function: onReadableStreamEnd], [Function: bound socketOnEnd] ],
    timeout: [Function: socketOnTimeout],
    data: [Function: bound socketOnData],
    error: [Function: socketOnError],
    close: [Function: bound socketOnClose],
    drain: [Function: bound socketOnDrain],
    resume: [Function: onSocketResume],
    pause: [Function: onSocketPause]
  },
  _eventsCount: 8,
  _maxListeners: undefined,
  _writableState: WritableState {
    objectMode: false,
    highWaterMark: 16384,
    finalCalled: false,
    needDrain: false,
    ending: false,
    ended: false,
    finished: false,
    destroyed: false,
    decodeStrings: false,
    defaultEncoding: 'utf8',
    length: 0,
    writing: false,
    corked: 0,
    sync: true,
    bufferProcessing: false,
    onwrite: [Function: bound onwrite],
    writecb: null,
    writelen: 0,
    afterWriteTickInfo: null,
    bufferedRequest: null,
    lastBufferedRequest: null,
    pendingcb: 0,
    prefinished: false,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    errored: false,
    bufferedRequestCount: 0,
    corkedRequestsFree: {
      next: null,
      entry: null,
      finish: [Function: bound onCorkedFinish]
    }
  },
  writable: true,
  allowHalfOpen: true,
  _sockname: null,
  _pendingData: null,
  _pendingEncoding: '',
  server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 1,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  _server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 1,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  parser: HTTPParser {
    '0': [Function: parserOnHeaders],
    '1': [Function: parserOnHeadersComplete],
    '2': [Function: parserOnBody],
    '3': [Function: parserOnMessageComplete],
    '4': [Function: bound onParserExecute],
    _headers: [],
    _url: '',
    socket: [Circular *2],
    incoming: null,
    outgoing: null,
    maxHeaderPairs: 2000,
    _consumed: true,
    onIncoming: [Function: bound parserOnIncoming],
    parsingHeadersStart: 1585720554450
  },
  on: [Function: socketListenerWrap],
  addListener: [Function: socketListenerWrap],
  prependListener: [Function: socketListenerWrap],
  _paused: false,
  [Symbol(asyncId)]: 473,
  [Symbol(kHandle)]: TCP {
    reading: true,
    onconnection: null,
    _consumed: true,
    [Symbol(owner)]: [Circular *2]
  },
  [Symbol(kSetNoDelay)]: false,
  [Symbol(lastWriteQueueSize)]: 0,
  [Symbol(timeout)]: null,
  [Symbol(kBuffer)]: null,
  [Symbol(kBufferCb)]: null,
  [Symbol(kBufferGen)]: null,
  [Symbol(kCapture)]: false,
  [Symbol(kBytesRead)]: 0,
  [Symbol(kBytesWritten)]: 0
}

====Tue Mar 31 2020 22:55:54 ====
GET /accounts

====Tue Mar 31 2020 22:55:54 ====
RESPONSE [object Object],[object Object],[object Object],[object Object],[object Object]

====Tue Mar 31 2020 22:55:54 ====
RESPONSE [{"id":1,"username":"ProRobinHoodTr1","password":"Impossible123!!2","email":"jaledarely","phone":"9165178775","followers":786,"type":"promoImage","following":4998,"owner":1},{"id":2,"username":"StockJesus","password":"Impossible123","email":"robbrandon02","phone":"9165178775","followers":1262,"type":"promoText","following":5001,"owner":1},{"id":3,"username":"joo11244620","password":"Impossible123!!!","email":"abrahaminiguez06@gmail.com","phone":"9165178775","followers":660,"type":null,"following":5000,"owner":1},{"id":5,"username":"MarkZion19","password":"Impossible123!!","email":"teresainiguez12345","phone":"9165178775","followers":0,"type":null,"following":0,"owner":1},{"id":6,"username":"johnson_maximum","password":"Impossible123!","email":null,"phone":"9165178775","followers":160,"type":null,"following":1289,"owner":1}]

====Tue Mar 31 2020 22:57:12 ====
<ref *2> Socket {
  connecting: false,
  _hadError: false,
  _parent: null,
  _host: null,
  _readableState: ReadableState {
    objectMode: false,
    highWaterMark: 16384,
    buffer: BufferList { head: null, tail: null, length: 0 },
    length: 0,
    pipes: [],
    flowing: true,
    ended: false,
    endEmitted: false,
    reading: true,
    sync: false,
    needReadable: true,
    emittedReadable: false,
    readableListening: false,
    resumeScheduled: true,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    destroyed: false,
    defaultEncoding: 'utf8',
    awaitDrainWriters: null,
    multiAwaitDrain: false,
    readingMore: false,
    decoder: null,
    encoding: null,
    [Symbol(kPaused)]: false
  },
  readable: true,
  _events: [Object: null prototype] {
    end: [ [Function: onReadableStreamEnd], [Function: bound socketOnEnd] ],
    timeout: [Function: socketOnTimeout],
    data: [Function: bound socketOnData],
    error: [Function: socketOnError],
    close: [Function: bound socketOnClose],
    drain: [Function: bound socketOnDrain],
    resume: [Function: onSocketResume],
    pause: [Function: onSocketPause]
  },
  _eventsCount: 8,
  _maxListeners: undefined,
  _writableState: WritableState {
    objectMode: false,
    highWaterMark: 16384,
    finalCalled: false,
    needDrain: false,
    ending: false,
    ended: false,
    finished: false,
    destroyed: false,
    decodeStrings: false,
    defaultEncoding: 'utf8',
    length: 0,
    writing: false,
    corked: 0,
    sync: true,
    bufferProcessing: false,
    onwrite: [Function: bound onwrite],
    writecb: null,
    writelen: 0,
    afterWriteTickInfo: null,
    bufferedRequest: null,
    lastBufferedRequest: null,
    pendingcb: 0,
    prefinished: false,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    errored: false,
    bufferedRequestCount: 0,
    corkedRequestsFree: {
      next: null,
      entry: null,
      finish: [Function: bound onCorkedFinish]
    }
  },
  writable: true,
  allowHalfOpen: true,
  _sockname: null,
  _pendingData: null,
  _pendingEncoding: '',
  server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 1,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  _server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 1,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  parser: HTTPParser {
    '0': [Function: parserOnHeaders],
    '1': [Function: parserOnHeadersComplete],
    '2': [Function: parserOnBody],
    '3': [Function: parserOnMessageComplete],
    '4': [Function: bound onParserExecute],
    _headers: [],
    _url: '',
    socket: [Circular *2],
    incoming: null,
    outgoing: null,
    maxHeaderPairs: 2000,
    _consumed: true,
    onIncoming: [Function: bound parserOnIncoming],
    parsingHeadersStart: 1585720632033
  },
  on: [Function: socketListenerWrap],
  addListener: [Function: socketListenerWrap],
  prependListener: [Function: socketListenerWrap],
  _paused: false,
  [Symbol(asyncId)]: 515,
  [Symbol(kHandle)]: TCP {
    reading: true,
    onconnection: null,
    _consumed: true,
    [Symbol(owner)]: [Circular *2]
  },
  [Symbol(kSetNoDelay)]: false,
  [Symbol(lastWriteQueueSize)]: 0,
  [Symbol(timeout)]: null,
  [Symbol(kBuffer)]: null,
  [Symbol(kBufferCb)]: null,
  [Symbol(kBufferGen)]: null,
  [Symbol(kCapture)]: false,
  [Symbol(kBytesRead)]: 0,
  [Symbol(kBytesWritten)]: 0
}

====Tue Mar 31 2020 22:57:12 ====
GET /accounts

====Tue Mar 31 2020 22:57:12 ====
RESPONSE [object Object],[object Object],[object Object],[object Object],[object Object]

====Tue Mar 31 2020 22:57:12 ====
RESPONSE [{"id":1,"username":"ProRobinHoodTr1","password":"Impossible123!!2","email":"jaledarely","phone":"9165178775","followers":786,"type":"promoImage","following":4998,"owner":1},{"id":2,"username":"StockJesus","password":"Impossible123","email":"robbrandon02","phone":"9165178775","followers":1262,"type":"promoText","following":5001,"owner":1},{"id":3,"username":"joo11244620","password":"Impossible123!!!","email":"abrahaminiguez06@gmail.com","phone":"9165178775","followers":660,"type":null,"following":5000,"owner":1},{"id":5,"username":"MarkZion19","password":"Impossible123!!","email":"teresainiguez12345","phone":"9165178775","followers":0,"type":null,"following":0,"owner":1},{"id":6,"username":"johnson_maximum","password":"Impossible123!","email":null,"phone":"9165178775","followers":160,"type":null,"following":1289,"owner":1}]

====Tue Mar 31 2020 22:57:38 ====
<ref *2> Socket {
  connecting: false,
  _hadError: false,
  _parent: null,
  _host: null,
  _readableState: ReadableState {
    objectMode: false,
    highWaterMark: 16384,
    buffer: BufferList { head: null, tail: null, length: 0 },
    length: 0,
    pipes: [],
    flowing: true,
    ended: false,
    endEmitted: false,
    reading: true,
    sync: false,
    needReadable: true,
    emittedReadable: false,
    readableListening: false,
    resumeScheduled: true,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    destroyed: false,
    defaultEncoding: 'utf8',
    awaitDrainWriters: null,
    multiAwaitDrain: false,
    readingMore: false,
    decoder: null,
    encoding: null,
    [Symbol(kPaused)]: false
  },
  readable: true,
  _events: [Object: null prototype] {
    end: [ [Function: onReadableStreamEnd], [Function: bound socketOnEnd] ],
    timeout: [Function: socketOnTimeout],
    data: [Function: bound socketOnData],
    error: [Function: socketOnError],
    close: [Function: bound socketOnClose],
    drain: [Function: bound socketOnDrain],
    resume: [Function: onSocketResume],
    pause: [Function: onSocketPause]
  },
  _eventsCount: 8,
  _maxListeners: undefined,
  _writableState: WritableState {
    objectMode: false,
    highWaterMark: 16384,
    finalCalled: false,
    needDrain: false,
    ending: false,
    ended: false,
    finished: false,
    destroyed: false,
    decodeStrings: false,
    defaultEncoding: 'utf8',
    length: 0,
    writing: false,
    corked: 0,
    sync: true,
    bufferProcessing: false,
    onwrite: [Function: bound onwrite],
    writecb: null,
    writelen: 0,
    afterWriteTickInfo: null,
    bufferedRequest: null,
    lastBufferedRequest: null,
    pendingcb: 0,
    prefinished: false,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    errored: false,
    bufferedRequestCount: 0,
    corkedRequestsFree: {
      next: null,
      entry: null,
      finish: [Function: bound onCorkedFinish]
    }
  },
  writable: true,
  allowHalfOpen: true,
  _sockname: null,
  _pendingData: null,
  _pendingEncoding: '',
  server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 1,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  _server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 1,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  parser: HTTPParser {
    '0': [Function: parserOnHeaders],
    '1': [Function: parserOnHeadersComplete],
    '2': [Function: parserOnBody],
    '3': [Function: parserOnMessageComplete],
    '4': [Function: bound onParserExecute],
    _headers: [],
    _url: '',
    socket: [Circular *2],
    incoming: null,
    outgoing: null,
    maxHeaderPairs: 2000,
    _consumed: true,
    onIncoming: [Function: bound parserOnIncoming],
    parsingHeadersStart: 1585720658777
  },
  on: [Function: socketListenerWrap],
  addListener: [Function: socketListenerWrap],
  prependListener: [Function: socketListenerWrap],
  _paused: false,
  [Symbol(asyncId)]: 557,
  [Symbol(kHandle)]: TCP {
    reading: true,
    onconnection: null,
    _consumed: true,
    [Symbol(owner)]: [Circular *2]
  },
  [Symbol(kSetNoDelay)]: false,
  [Symbol(lastWriteQueueSize)]: 0,
  [Symbol(timeout)]: null,
  [Symbol(kBuffer)]: null,
  [Symbol(kBufferCb)]: null,
  [Symbol(kBufferGen)]: null,
  [Symbol(kCapture)]: false,
  [Symbol(kBytesRead)]: 0,
  [Symbol(kBytesWritten)]: 0
}

====Tue Mar 31 2020 22:57:38 ====
GET /accounts

====Tue Mar 31 2020 22:57:38 ====
RESPONSE [object Object],[object Object],[object Object],[object Object],[object Object]

====Tue Mar 31 2020 22:57:38 ====
RESPONSE [{"id":1,"username":"ProRobinHoodTr1","password":"Impossible123!!2","email":"jaledarely","phone":"9165178775","followers":786,"type":"promoImage","following":4998,"owner":1},{"id":2,"username":"StockJesus","password":"Impossible123","email":"robbrandon02","phone":"9165178775","followers":1262,"type":"promoText","following":5001,"owner":1},{"id":3,"username":"joo11244620","password":"Impossible123!!!","email":"abrahaminiguez06@gmail.com","phone":"9165178775","followers":660,"type":null,"following":5000,"owner":1},{"id":5,"username":"MarkZion19","password":"Impossible123!!","email":"teresainiguez12345","phone":"9165178775","followers":0,"type":null,"following":0,"owner":1},{"id":6,"username":"johnson_maximum","password":"Impossible123!","email":null,"phone":"9165178775","followers":160,"type":null,"following":1289,"owner":1}]

====Tue Mar 31 2020 22:57:42 ====
GET /accounts

====Tue Mar 31 2020 22:57:42 ====
RESPONSE [object Object],[object Object],[object Object],[object Object],[object Object]

====Tue Mar 31 2020 22:57:42 ====
RESPONSE [{"id":1,"username":"ProRobinHoodTr1","password":"Impossible123!!2","email":"jaledarely","phone":"9165178775","followers":786,"type":"promoImage","following":4998,"owner":1},{"id":2,"username":"StockJesus","password":"Impossible123","email":"robbrandon02","phone":"9165178775","followers":1262,"type":"promoText","following":5001,"owner":1},{"id":3,"username":"joo11244620","password":"Impossible123!!!","email":"abrahaminiguez06@gmail.com","phone":"9165178775","followers":660,"type":null,"following":5000,"owner":1},{"id":5,"username":"MarkZion19","password":"Impossible123!!","email":"teresainiguez12345","phone":"9165178775","followers":0,"type":null,"following":0,"owner":1},{"id":6,"username":"johnson_maximum","password":"Impossible123!","email":null,"phone":"9165178775","followers":160,"type":null,"following":1289,"owner":1}]

====Tue Mar 31 2020 22:57:45 ====
GET /accounts

====Tue Mar 31 2020 22:57:45 ====
RESPONSE [object Object],[object Object],[object Object],[object Object],[object Object]

====Tue Mar 31 2020 22:57:45 ====
RESPONSE [{"id":1,"username":"ProRobinHoodTr1","password":"Impossible123!!2","email":"jaledarely","phone":"9165178775","followers":786,"type":"promoImage","following":4998,"owner":1},{"id":2,"username":"StockJesus","password":"Impossible123","email":"robbrandon02","phone":"9165178775","followers":1262,"type":"promoText","following":5001,"owner":1},{"id":3,"username":"joo11244620","password":"Impossible123!!!","email":"abrahaminiguez06@gmail.com","phone":"9165178775","followers":660,"type":null,"following":5000,"owner":1},{"id":5,"username":"MarkZion19","password":"Impossible123!!","email":"teresainiguez12345","phone":"9165178775","followers":0,"type":null,"following":0,"owner":1},{"id":6,"username":"johnson_maximum","password":"Impossible123!","email":null,"phone":"9165178775","followers":160,"type":null,"following":1289,"owner":1}]

====Tue Mar 31 2020 22:58:00 ====
<ref *2> Socket {
  connecting: false,
  _hadError: false,
  _parent: null,
  _host: null,
  _readableState: ReadableState {
    objectMode: false,
    highWaterMark: 16384,
    buffer: BufferList { head: null, tail: null, length: 0 },
    length: 0,
    pipes: [],
    flowing: true,
    ended: false,
    endEmitted: false,
    reading: true,
    sync: false,
    needReadable: true,
    emittedReadable: false,
    readableListening: false,
    resumeScheduled: true,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    destroyed: false,
    defaultEncoding: 'utf8',
    awaitDrainWriters: null,
    multiAwaitDrain: false,
    readingMore: false,
    decoder: null,
    encoding: null,
    [Symbol(kPaused)]: false
  },
  readable: true,
  _events: [Object: null prototype] {
    end: [ [Function: onReadableStreamEnd], [Function: bound socketOnEnd] ],
    timeout: [Function: socketOnTimeout],
    data: [Function: bound socketOnData],
    error: [Function: socketOnError],
    close: [Function: bound socketOnClose],
    drain: [Function: bound socketOnDrain],
    resume: [Function: onSocketResume],
    pause: [Function: onSocketPause]
  },
  _eventsCount: 8,
  _maxListeners: undefined,
  _writableState: WritableState {
    objectMode: false,
    highWaterMark: 16384,
    finalCalled: false,
    needDrain: false,
    ending: false,
    ended: false,
    finished: false,
    destroyed: false,
    decodeStrings: false,
    defaultEncoding: 'utf8',
    length: 0,
    writing: false,
    corked: 0,
    sync: true,
    bufferProcessing: false,
    onwrite: [Function: bound onwrite],
    writecb: null,
    writelen: 0,
    afterWriteTickInfo: null,
    bufferedRequest: null,
    lastBufferedRequest: null,
    pendingcb: 0,
    prefinished: false,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    errored: false,
    bufferedRequestCount: 0,
    corkedRequestsFree: {
      next: null,
      entry: null,
      finish: [Function: bound onCorkedFinish]
    }
  },
  writable: true,
  allowHalfOpen: true,
  _sockname: null,
  _pendingData: null,
  _pendingEncoding: '',
  server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 1,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  _server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 1,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  parser: HTTPParser {
    '0': [Function: parserOnHeaders],
    '1': [Function: parserOnHeadersComplete],
    '2': [Function: parserOnBody],
    '3': [Function: parserOnMessageComplete],
    '4': [Function: bound onParserExecute],
    _headers: [],
    _url: '',
    socket: [Circular *2],
    incoming: null,
    outgoing: null,
    maxHeaderPairs: 2000,
    _consumed: true,
    onIncoming: [Function: bound parserOnIncoming],
    parsingHeadersStart: 1585720680794
  },
  on: [Function: socketListenerWrap],
  addListener: [Function: socketListenerWrap],
  prependListener: [Function: socketListenerWrap],
  _paused: false,
  [Symbol(asyncId)]: 664,
  [Symbol(kHandle)]: TCP {
    reading: true,
    onconnection: null,
    _consumed: true,
    [Symbol(owner)]: [Circular *2]
  },
  [Symbol(kSetNoDelay)]: false,
  [Symbol(lastWriteQueueSize)]: 0,
  [Symbol(timeout)]: null,
  [Symbol(kBuffer)]: null,
  [Symbol(kBufferCb)]: null,
  [Symbol(kBufferGen)]: null,
  [Symbol(kCapture)]: false,
  [Symbol(kBytesRead)]: 0,
  [Symbol(kBytesWritten)]: 0
}

====Tue Mar 31 2020 22:58:00 ====
GET /accounts

====Tue Mar 31 2020 22:58:00 ====
RESPONSE [object Object],[object Object],[object Object],[object Object],[object Object]

====Tue Mar 31 2020 22:58:00 ====
RESPONSE [{"id":1,"username":"ProRobinHoodTr1","password":"Impossible123!!2","email":"jaledarely","phone":"9165178775","followers":786,"type":"promoImage","following":4998,"owner":1},{"id":2,"username":"StockJesus","password":"Impossible123","email":"robbrandon02","phone":"9165178775","followers":1262,"type":"promoText","following":5001,"owner":1},{"id":3,"username":"joo11244620","password":"Impossible123!!!","email":"abrahaminiguez06@gmail.com","phone":"9165178775","followers":660,"type":null,"following":5000,"owner":1},{"id":5,"username":"MarkZion19","password":"Impossible123!!","email":"teresainiguez12345","phone":"9165178775","followers":0,"type":null,"following":0,"owner":1},{"id":6,"username":"johnson_maximum","password":"Impossible123!","email":null,"phone":"9165178775","followers":160,"type":null,"following":1289,"owner":1}]

====Tue Mar 31 2020 22:58:16 ====
<ref *2> Socket {
  connecting: false,
  _hadError: false,
  _parent: null,
  _host: null,
  _readableState: ReadableState {
    objectMode: false,
    highWaterMark: 16384,
    buffer: BufferList { head: null, tail: null, length: 0 },
    length: 0,
    pipes: [],
    flowing: true,
    ended: false,
    endEmitted: false,
    reading: true,
    sync: false,
    needReadable: true,
    emittedReadable: false,
    readableListening: false,
    resumeScheduled: true,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    destroyed: false,
    defaultEncoding: 'utf8',
    awaitDrainWriters: null,
    multiAwaitDrain: false,
    readingMore: false,
    decoder: null,
    encoding: null,
    [Symbol(kPaused)]: false
  },
  readable: true,
  _events: [Object: null prototype] {
    end: [ [Function: onReadableStreamEnd], [Function: bound socketOnEnd] ],
    timeout: [Function: socketOnTimeout],
    data: [Function: bound socketOnData],
    error: [Function: socketOnError],
    close: [Function: bound socketOnClose],
    drain: [Function: bound socketOnDrain],
    resume: [Function: onSocketResume],
    pause: [Function: onSocketPause]
  },
  _eventsCount: 8,
  _maxListeners: undefined,
  _writableState: WritableState {
    objectMode: false,
    highWaterMark: 16384,
    finalCalled: false,
    needDrain: false,
    ending: false,
    ended: false,
    finished: false,
    destroyed: false,
    decodeStrings: false,
    defaultEncoding: 'utf8',
    length: 0,
    writing: false,
    corked: 0,
    sync: true,
    bufferProcessing: false,
    onwrite: [Function: bound onwrite],
    writecb: null,
    writelen: 0,
    afterWriteTickInfo: null,
    bufferedRequest: null,
    lastBufferedRequest: null,
    pendingcb: 0,
    prefinished: false,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    errored: false,
    bufferedRequestCount: 0,
    corkedRequestsFree: {
      next: null,
      entry: null,
      finish: [Function: bound onCorkedFinish]
    }
  },
  writable: true,
  allowHalfOpen: true,
  _sockname: null,
  _pendingData: null,
  _pendingEncoding: '',
  server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 1,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  _server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 1,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  parser: HTTPParser {
    '0': [Function: parserOnHeaders],
    '1': [Function: parserOnHeadersComplete],
    '2': [Function: parserOnBody],
    '3': [Function: parserOnMessageComplete],
    '4': [Function: bound onParserExecute],
    _headers: [],
    _url: '',
    socket: [Circular *2],
    incoming: null,
    outgoing: null,
    maxHeaderPairs: 2000,
    _consumed: true,
    onIncoming: [Function: bound parserOnIncoming],
    parsingHeadersStart: 1585720696794
  },
  on: [Function: socketListenerWrap],
  addListener: [Function: socketListenerWrap],
  prependListener: [Function: socketListenerWrap],
  _paused: false,
  [Symbol(asyncId)]: 706,
  [Symbol(kHandle)]: TCP {
    reading: true,
    onconnection: null,
    _consumed: true,
    [Symbol(owner)]: [Circular *2]
  },
  [Symbol(kSetNoDelay)]: false,
  [Symbol(lastWriteQueueSize)]: 0,
  [Symbol(timeout)]: null,
  [Symbol(kBuffer)]: null,
  [Symbol(kBufferCb)]: null,
  [Symbol(kBufferGen)]: null,
  [Symbol(kCapture)]: false,
  [Symbol(kBytesRead)]: 0,
  [Symbol(kBytesWritten)]: 0
}

====Tue Mar 31 2020 22:58:16 ====
GET /accounts

====Tue Mar 31 2020 22:58:16 ====
RESPONSE [object Object],[object Object],[object Object],[object Object],[object Object]

====Tue Mar 31 2020 22:58:16 ====
RESPONSE [{"id":1,"username":"ProRobinHoodTr1","password":"Impossible123!!2","email":"jaledarely","phone":"9165178775","followers":786,"type":"promoImage","following":4998,"owner":1},{"id":2,"username":"StockJesus","password":"Impossible123","email":"robbrandon02","phone":"9165178775","followers":1262,"type":"promoText","following":5001,"owner":1},{"id":3,"username":"joo11244620","password":"Impossible123!!!","email":"abrahaminiguez06@gmail.com","phone":"9165178775","followers":660,"type":null,"following":5000,"owner":1},{"id":5,"username":"MarkZion19","password":"Impossible123!!","email":"teresainiguez12345","phone":"9165178775","followers":0,"type":null,"following":0,"owner":1},{"id":6,"username":"johnson_maximum","password":"Impossible123!","email":null,"phone":"9165178775","followers":160,"type":null,"following":1289,"owner":1}]

====Tue Mar 31 2020 22:58:47 ====
<ref *2> Socket {
  connecting: false,
  _hadError: false,
  _parent: null,
  _host: null,
  _readableState: ReadableState {
    objectMode: false,
    highWaterMark: 16384,
    buffer: BufferList { head: null, tail: null, length: 0 },
    length: 0,
    pipes: [],
    flowing: true,
    ended: false,
    endEmitted: false,
    reading: true,
    sync: false,
    needReadable: true,
    emittedReadable: false,
    readableListening: false,
    resumeScheduled: true,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    destroyed: false,
    defaultEncoding: 'utf8',
    awaitDrainWriters: null,
    multiAwaitDrain: false,
    readingMore: false,
    decoder: null,
    encoding: null,
    [Symbol(kPaused)]: false
  },
  readable: true,
  _events: [Object: null prototype] {
    end: [ [Function: onReadableStreamEnd], [Function: bound socketOnEnd] ],
    timeout: [Function: socketOnTimeout],
    data: [Function: bound socketOnData],
    error: [Function: socketOnError],
    close: [Function: bound socketOnClose],
    drain: [Function: bound socketOnDrain],
    resume: [Function: onSocketResume],
    pause: [Function: onSocketPause]
  },
  _eventsCount: 8,
  _maxListeners: undefined,
  _writableState: WritableState {
    objectMode: false,
    highWaterMark: 16384,
    finalCalled: false,
    needDrain: false,
    ending: false,
    ended: false,
    finished: false,
    destroyed: false,
    decodeStrings: false,
    defaultEncoding: 'utf8',
    length: 0,
    writing: false,
    corked: 0,
    sync: true,
    bufferProcessing: false,
    onwrite: [Function: bound onwrite],
    writecb: null,
    writelen: 0,
    afterWriteTickInfo: null,
    bufferedRequest: null,
    lastBufferedRequest: null,
    pendingcb: 0,
    prefinished: false,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    errored: false,
    bufferedRequestCount: 0,
    corkedRequestsFree: {
      next: null,
      entry: null,
      finish: [Function: bound onCorkedFinish]
    }
  },
  writable: true,
  allowHalfOpen: true,
  _sockname: null,
  _pendingData: null,
  _pendingEncoding: '',
  server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 1,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  _server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 1,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  parser: HTTPParser {
    '0': [Function: parserOnHeaders],
    '1': [Function: parserOnHeadersComplete],
    '2': [Function: parserOnBody],
    '3': [Function: parserOnMessageComplete],
    '4': [Function: bound onParserExecute],
    _headers: [],
    _url: '',
    socket: [Circular *2],
    incoming: null,
    outgoing: null,
    maxHeaderPairs: 2000,
    _consumed: true,
    onIncoming: [Function: bound parserOnIncoming],
    parsingHeadersStart: 1585720727018
  },
  on: [Function: socketListenerWrap],
  addListener: [Function: socketListenerWrap],
  prependListener: [Function: socketListenerWrap],
  _paused: false,
  [Symbol(asyncId)]: 748,
  [Symbol(kHandle)]: TCP {
    reading: true,
    onconnection: null,
    _consumed: true,
    [Symbol(owner)]: [Circular *2]
  },
  [Symbol(kSetNoDelay)]: false,
  [Symbol(lastWriteQueueSize)]: 0,
  [Symbol(timeout)]: null,
  [Symbol(kBuffer)]: null,
  [Symbol(kBufferCb)]: null,
  [Symbol(kBufferGen)]: null,
  [Symbol(kCapture)]: false,
  [Symbol(kBytesRead)]: 0,
  [Symbol(kBytesWritten)]: 0
}

====Tue Mar 31 2020 22:58:47 ====
GET /accounts

====Tue Mar 31 2020 22:58:47 ====
RESPONSE [object Object],[object Object],[object Object],[object Object],[object Object]

====Tue Mar 31 2020 22:58:47 ====
RESPONSE [{"id":1,"username":"ProRobinHoodTr1","password":"Impossible123!!2","email":"jaledarely","phone":"9165178775","followers":786,"type":"promoImage","following":4998,"owner":1},{"id":2,"username":"StockJesus","password":"Impossible123","email":"robbrandon02","phone":"9165178775","followers":1262,"type":"promoText","following":5001,"owner":1},{"id":3,"username":"joo11244620","password":"Impossible123!!!","email":"abrahaminiguez06@gmail.com","phone":"9165178775","followers":660,"type":null,"following":5000,"owner":1},{"id":5,"username":"MarkZion19","password":"Impossible123!!","email":"teresainiguez12345","phone":"9165178775","followers":0,"type":null,"following":0,"owner":1},{"id":6,"username":"johnson_maximum","password":"Impossible123!","email":null,"phone":"9165178775","followers":160,"type":null,"following":1289,"owner":1}]

====Tue Mar 31 2020 22:59:50 ====
<ref *2> Socket {
  connecting: false,
  _hadError: false,
  _parent: null,
  _host: null,
  _readableState: ReadableState {
    objectMode: false,
    highWaterMark: 16384,
    buffer: BufferList { head: null, tail: null, length: 0 },
    length: 0,
    pipes: [],
    flowing: true,
    ended: false,
    endEmitted: false,
    reading: true,
    sync: false,
    needReadable: true,
    emittedReadable: false,
    readableListening: false,
    resumeScheduled: true,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    destroyed: false,
    defaultEncoding: 'utf8',
    awaitDrainWriters: null,
    multiAwaitDrain: false,
    readingMore: false,
    decoder: null,
    encoding: null,
    [Symbol(kPaused)]: false
  },
  readable: true,
  _events: [Object: null prototype] {
    end: [ [Function: onReadableStreamEnd], [Function: bound socketOnEnd] ],
    timeout: [Function: socketOnTimeout],
    data: [Function: bound socketOnData],
    error: [Function: socketOnError],
    close: [Function: bound socketOnClose],
    drain: [Function: bound socketOnDrain],
    resume: [Function: onSocketResume],
    pause: [Function: onSocketPause]
  },
  _eventsCount: 8,
  _maxListeners: undefined,
  _writableState: WritableState {
    objectMode: false,
    highWaterMark: 16384,
    finalCalled: false,
    needDrain: false,
    ending: false,
    ended: false,
    finished: false,
    destroyed: false,
    decodeStrings: false,
    defaultEncoding: 'utf8',
    length: 0,
    writing: false,
    corked: 0,
    sync: true,
    bufferProcessing: false,
    onwrite: [Function: bound onwrite],
    writecb: null,
    writelen: 0,
    afterWriteTickInfo: null,
    bufferedRequest: null,
    lastBufferedRequest: null,
    pendingcb: 0,
    prefinished: false,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    errored: false,
    bufferedRequestCount: 0,
    corkedRequestsFree: {
      next: null,
      entry: null,
      finish: [Function: bound onCorkedFinish]
    }
  },
  writable: true,
  allowHalfOpen: true,
  _sockname: null,
  _pendingData: null,
  _pendingEncoding: '',
  server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 1,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  _server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 1,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  parser: HTTPParser {
    '0': [Function: parserOnHeaders],
    '1': [Function: parserOnHeadersComplete],
    '2': [Function: parserOnBody],
    '3': [Function: parserOnMessageComplete],
    '4': [Function: bound onParserExecute],
    _headers: [],
    _url: '',
    socket: [Circular *2],
    incoming: null,
    outgoing: null,
    maxHeaderPairs: 2000,
    _consumed: true,
    onIncoming: [Function: bound parserOnIncoming],
    parsingHeadersStart: 1585720790804
  },
  on: [Function: socketListenerWrap],
  addListener: [Function: socketListenerWrap],
  prependListener: [Function: socketListenerWrap],
  _paused: false,
  [Symbol(asyncId)]: 790,
  [Symbol(kHandle)]: TCP {
    reading: true,
    onconnection: null,
    _consumed: true,
    [Symbol(owner)]: [Circular *2]
  },
  [Symbol(kSetNoDelay)]: false,
  [Symbol(lastWriteQueueSize)]: 0,
  [Symbol(timeout)]: null,
  [Symbol(kBuffer)]: null,
  [Symbol(kBufferCb)]: null,
  [Symbol(kBufferGen)]: null,
  [Symbol(kCapture)]: false,
  [Symbol(kBytesRead)]: 0,
  [Symbol(kBytesWritten)]: 0
}

====Tue Mar 31 2020 22:59:50 ====
GET /accounts

====Tue Mar 31 2020 22:59:50 ====
RESPONSE [object Object],[object Object],[object Object],[object Object],[object Object]

====Tue Mar 31 2020 22:59:50 ====
RESPONSE [{"id":1,"username":"ProRobinHoodTr1","password":"Impossible123!!2","email":"jaledarely","phone":"9165178775","followers":786,"type":"promoImage","following":4998,"owner":1},{"id":2,"username":"StockJesus","password":"Impossible123","email":"robbrandon02","phone":"9165178775","followers":1262,"type":"promoText","following":5001,"owner":1},{"id":3,"username":"joo11244620","password":"Impossible123!!!","email":"abrahaminiguez06@gmail.com","phone":"9165178775","followers":660,"type":null,"following":5000,"owner":1},{"id":5,"username":"MarkZion19","password":"Impossible123!!","email":"teresainiguez12345","phone":"9165178775","followers":0,"type":null,"following":0,"owner":1},{"id":6,"username":"johnson_maximum","password":"Impossible123!","email":null,"phone":"9165178775","followers":160,"type":null,"following":1289,"owner":1}]

====Tue Mar 31 2020 23:00:23 ====
<ref *2> Socket {
  connecting: false,
  _hadError: false,
  _parent: null,
  _host: null,
  _readableState: ReadableState {
    objectMode: false,
    highWaterMark: 16384,
    buffer: BufferList { head: null, tail: null, length: 0 },
    length: 0,
    pipes: [],
    flowing: true,
    ended: false,
    endEmitted: false,
    reading: true,
    sync: false,
    needReadable: true,
    emittedReadable: false,
    readableListening: false,
    resumeScheduled: true,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    destroyed: false,
    defaultEncoding: 'utf8',
    awaitDrainWriters: null,
    multiAwaitDrain: false,
    readingMore: false,
    decoder: null,
    encoding: null,
    [Symbol(kPaused)]: false
  },
  readable: true,
  _events: [Object: null prototype] {
    end: [ [Function: onReadableStreamEnd], [Function: bound socketOnEnd] ],
    timeout: [Function: socketOnTimeout],
    data: [Function: bound socketOnData],
    error: [Function: socketOnError],
    close: [Function: bound socketOnClose],
    drain: [Function: bound socketOnDrain],
    resume: [Function: onSocketResume],
    pause: [Function: onSocketPause]
  },
  _eventsCount: 8,
  _maxListeners: undefined,
  _writableState: WritableState {
    objectMode: false,
    highWaterMark: 16384,
    finalCalled: false,
    needDrain: false,
    ending: false,
    ended: false,
    finished: false,
    destroyed: false,
    decodeStrings: false,
    defaultEncoding: 'utf8',
    length: 0,
    writing: false,
    corked: 0,
    sync: true,
    bufferProcessing: false,
    onwrite: [Function: bound onwrite],
    writecb: null,
    writelen: 0,
    afterWriteTickInfo: null,
    bufferedRequest: null,
    lastBufferedRequest: null,
    pendingcb: 0,
    prefinished: false,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    errored: false,
    bufferedRequestCount: 0,
    corkedRequestsFree: {
      next: null,
      entry: null,
      finish: [Function: bound onCorkedFinish]
    }
  },
  writable: true,
  allowHalfOpen: true,
  _sockname: null,
  _pendingData: null,
  _pendingEncoding: '',
  server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 1,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  _server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 1,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  parser: HTTPParser {
    '0': [Function: parserOnHeaders],
    '1': [Function: parserOnHeadersComplete],
    '2': [Function: parserOnBody],
    '3': [Function: parserOnMessageComplete],
    '4': [Function: bound onParserExecute],
    _headers: [],
    _url: '',
    socket: [Circular *2],
    incoming: null,
    outgoing: null,
    maxHeaderPairs: 2000,
    _consumed: true,
    onIncoming: [Function: bound parserOnIncoming],
    parsingHeadersStart: 1585720823027
  },
  on: [Function: socketListenerWrap],
  addListener: [Function: socketListenerWrap],
  prependListener: [Function: socketListenerWrap],
  _paused: false,
  [Symbol(asyncId)]: 832,
  [Symbol(kHandle)]: TCP {
    reading: true,
    onconnection: null,
    _consumed: true,
    [Symbol(owner)]: [Circular *2]
  },
  [Symbol(kSetNoDelay)]: false,
  [Symbol(lastWriteQueueSize)]: 0,
  [Symbol(timeout)]: null,
  [Symbol(kBuffer)]: null,
  [Symbol(kBufferCb)]: null,
  [Symbol(kBufferGen)]: null,
  [Symbol(kCapture)]: false,
  [Symbol(kBytesRead)]: 0,
  [Symbol(kBytesWritten)]: 0
}

====Tue Mar 31 2020 23:00:23 ====
GET /accounts

====Tue Mar 31 2020 23:00:23 ====
RESPONSE [object Object],[object Object],[object Object],[object Object],[object Object]

====Tue Mar 31 2020 23:00:23 ====
RESPONSE [{"id":1,"username":"ProRobinHoodTr1","password":"Impossible123!!2","email":"jaledarely","phone":"9165178775","followers":786,"type":"promoImage","following":4998,"owner":1},{"id":2,"username":"StockJesus","password":"Impossible123","email":"robbrandon02","phone":"9165178775","followers":1262,"type":"promoText","following":5001,"owner":1},{"id":3,"username":"joo11244620","password":"Impossible123!!!","email":"abrahaminiguez06@gmail.com","phone":"9165178775","followers":660,"type":null,"following":5000,"owner":1},{"id":5,"username":"MarkZion19","password":"Impossible123!!","email":"teresainiguez12345","phone":"9165178775","followers":0,"type":null,"following":0,"owner":1},{"id":6,"username":"johnson_maximum","password":"Impossible123!","email":null,"phone":"9165178775","followers":160,"type":null,"following":1289,"owner":1}]

====Tue Mar 31 2020 23:01:24 ====
<ref *2> Socket {
  connecting: false,
  _hadError: false,
  _parent: null,
  _host: null,
  _readableState: ReadableState {
    objectMode: false,
    highWaterMark: 16384,
    buffer: BufferList { head: null, tail: null, length: 0 },
    length: 0,
    pipes: [],
    flowing: true,
    ended: false,
    endEmitted: false,
    reading: true,
    sync: false,
    needReadable: true,
    emittedReadable: false,
    readableListening: false,
    resumeScheduled: true,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    destroyed: false,
    defaultEncoding: 'utf8',
    awaitDrainWriters: null,
    multiAwaitDrain: false,
    readingMore: false,
    decoder: null,
    encoding: null,
    [Symbol(kPaused)]: false
  },
  readable: true,
  _events: [Object: null prototype] {
    end: [ [Function: onReadableStreamEnd], [Function: bound socketOnEnd] ],
    timeout: [Function: socketOnTimeout],
    data: [Function: bound socketOnData],
    error: [Function: socketOnError],
    close: [Function: bound socketOnClose],
    drain: [Function: bound socketOnDrain],
    resume: [Function: onSocketResume],
    pause: [Function: onSocketPause]
  },
  _eventsCount: 8,
  _maxListeners: undefined,
  _writableState: WritableState {
    objectMode: false,
    highWaterMark: 16384,
    finalCalled: false,
    needDrain: false,
    ending: false,
    ended: false,
    finished: false,
    destroyed: false,
    decodeStrings: false,
    defaultEncoding: 'utf8',
    length: 0,
    writing: false,
    corked: 0,
    sync: true,
    bufferProcessing: false,
    onwrite: [Function: bound onwrite],
    writecb: null,
    writelen: 0,
    afterWriteTickInfo: null,
    bufferedRequest: null,
    lastBufferedRequest: null,
    pendingcb: 0,
    prefinished: false,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    errored: false,
    bufferedRequestCount: 0,
    corkedRequestsFree: {
      next: null,
      entry: null,
      finish: [Function: bound onCorkedFinish]
    }
  },
  writable: true,
  allowHalfOpen: true,
  _sockname: null,
  _pendingData: null,
  _pendingEncoding: '',
  server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 1,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  _server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 1,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  parser: HTTPParser {
    '0': [Function: parserOnHeaders],
    '1': [Function: parserOnHeadersComplete],
    '2': [Function: parserOnBody],
    '3': [Function: parserOnMessageComplete],
    '4': [Function: bound onParserExecute],
    _headers: [],
    _url: '',
    socket: [Circular *2],
    incoming: null,
    outgoing: null,
    maxHeaderPairs: 2000,
    _consumed: true,
    onIncoming: [Function: bound parserOnIncoming],
    parsingHeadersStart: 1585720884407
  },
  on: [Function: socketListenerWrap],
  addListener: [Function: socketListenerWrap],
  prependListener: [Function: socketListenerWrap],
  _paused: false,
  [Symbol(asyncId)]: 874,
  [Symbol(kHandle)]: TCP {
    reading: true,
    onconnection: null,
    _consumed: true,
    [Symbol(owner)]: [Circular *2]
  },
  [Symbol(kSetNoDelay)]: false,
  [Symbol(lastWriteQueueSize)]: 0,
  [Symbol(timeout)]: null,
  [Symbol(kBuffer)]: null,
  [Symbol(kBufferCb)]: null,
  [Symbol(kBufferGen)]: null,
  [Symbol(kCapture)]: false,
  [Symbol(kBytesRead)]: 0,
  [Symbol(kBytesWritten)]: 0
}

====Tue Mar 31 2020 23:01:24 ====
GET /accounts

====Tue Mar 31 2020 23:01:24 ====
RESPONSE [object Object],[object Object],[object Object],[object Object],[object Object]

====Tue Mar 31 2020 23:01:24 ====
RESPONSE [{"id":1,"username":"ProRobinHoodTr1","password":"Impossible123!!2","email":"jaledarely","phone":"9165178775","followers":786,"type":"promoImage","following":4998,"owner":1},{"id":2,"username":"StockJesus","password":"Impossible123","email":"robbrandon02","phone":"9165178775","followers":1262,"type":"promoText","following":5001,"owner":1},{"id":3,"username":"joo11244620","password":"Impossible123!!!","email":"abrahaminiguez06@gmail.com","phone":"9165178775","followers":660,"type":null,"following":5000,"owner":1},{"id":5,"username":"MarkZion19","password":"Impossible123!!","email":"teresainiguez12345","phone":"9165178775","followers":0,"type":null,"following":0,"owner":1},{"id":6,"username":"johnson_maximum","password":"Impossible123!","email":null,"phone":"9165178775","followers":160,"type":null,"following":1289,"owner":1}]

====Tue Mar 31 2020 23:13:53 ====
<ref *2> Socket {
  connecting: false,
  _hadError: false,
  _parent: null,
  _host: null,
  _readableState: ReadableState {
    objectMode: false,
    highWaterMark: 16384,
    buffer: BufferList { head: null, tail: null, length: 0 },
    length: 0,
    pipes: [],
    flowing: true,
    ended: false,
    endEmitted: false,
    reading: true,
    sync: false,
    needReadable: true,
    emittedReadable: false,
    readableListening: false,
    resumeScheduled: true,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    destroyed: false,
    defaultEncoding: 'utf8',
    awaitDrainWriters: null,
    multiAwaitDrain: false,
    readingMore: false,
    decoder: null,
    encoding: null,
    [Symbol(kPaused)]: false
  },
  readable: true,
  _events: [Object: null prototype] {
    end: [ [Function: onReadableStreamEnd], [Function: bound socketOnEnd] ],
    timeout: [Function: socketOnTimeout],
    data: [Function: bound socketOnData],
    error: [Function: socketOnError],
    close: [Function: bound socketOnClose],
    drain: [Function: bound socketOnDrain],
    resume: [Function: onSocketResume],
    pause: [Function: onSocketPause]
  },
  _eventsCount: 8,
  _maxListeners: undefined,
  _writableState: WritableState {
    objectMode: false,
    highWaterMark: 16384,
    finalCalled: false,
    needDrain: false,
    ending: false,
    ended: false,
    finished: false,
    destroyed: false,
    decodeStrings: false,
    defaultEncoding: 'utf8',
    length: 0,
    writing: false,
    corked: 0,
    sync: true,
    bufferProcessing: false,
    onwrite: [Function: bound onwrite],
    writecb: null,
    writelen: 0,
    afterWriteTickInfo: null,
    bufferedRequest: null,
    lastBufferedRequest: null,
    pendingcb: 0,
    prefinished: false,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    errored: false,
    bufferedRequestCount: 0,
    corkedRequestsFree: {
      next: null,
      entry: null,
      finish: [Function: bound onCorkedFinish]
    }
  },
  writable: true,
  allowHalfOpen: true,
  _sockname: null,
  _pendingData: null,
  _pendingEncoding: '',
  server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 1,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  _server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 1,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  parser: HTTPParser {
    '0': [Function: parserOnHeaders],
    '1': [Function: parserOnHeadersComplete],
    '2': [Function: parserOnBody],
    '3': [Function: parserOnMessageComplete],
    '4': [Function: bound onParserExecute],
    _headers: [],
    _url: '',
    socket: [Circular *2],
    incoming: null,
    outgoing: null,
    maxHeaderPairs: 2000,
    _consumed: true,
    onIncoming: [Function: bound parserOnIncoming],
    parsingHeadersStart: 1585721633152
  },
  on: [Function: socketListenerWrap],
  addListener: [Function: socketListenerWrap],
  prependListener: [Function: socketListenerWrap],
  _paused: false,
  [Symbol(asyncId)]: 916,
  [Symbol(kHandle)]: TCP {
    reading: true,
    onconnection: null,
    _consumed: true,
    [Symbol(owner)]: [Circular *2]
  },
  [Symbol(kSetNoDelay)]: false,
  [Symbol(lastWriteQueueSize)]: 0,
  [Symbol(timeout)]: null,
  [Symbol(kBuffer)]: null,
  [Symbol(kBufferCb)]: null,
  [Symbol(kBufferGen)]: null,
  [Symbol(kCapture)]: false,
  [Symbol(kBytesRead)]: 0,
  [Symbol(kBytesWritten)]: 0
}

====Tue Mar 31 2020 23:13:53 ====
GET /accounts

====Tue Mar 31 2020 23:13:53 ====
RESPONSE [object Object],[object Object],[object Object],[object Object],[object Object]

====Tue Mar 31 2020 23:13:53 ====
RESPONSE [{"id":1,"username":"ProRobinHoodTr1","password":"Impossible123!!2","email":"jaledarely","phone":"9165178775","followers":786,"type":"promoImage","following":4998,"owner":1},{"id":2,"username":"StockJesus","password":"Impossible123","email":"robbrandon02","phone":"9165178775","followers":1262,"type":"promoText","following":5001,"owner":1},{"id":3,"username":"joo11244620","password":"Impossible123!!!","email":"abrahaminiguez06@gmail.com","phone":"9165178775","followers":660,"type":null,"following":5000,"owner":1},{"id":5,"username":"MarkZion19","password":"Impossible123!!","email":"teresainiguez12345","phone":"9165178775","followers":0,"type":null,"following":0,"owner":1},{"id":6,"username":"johnson_maximum","password":"Impossible123!","email":null,"phone":"9165178775","followers":160,"type":null,"following":1289,"owner":1}]

====Tue Mar 31 2020 23:14:09 ====
<ref *2> Socket {
  connecting: false,
  _hadError: false,
  _parent: null,
  _host: null,
  _readableState: ReadableState {
    objectMode: false,
    highWaterMark: 16384,
    buffer: BufferList { head: null, tail: null, length: 0 },
    length: 0,
    pipes: [],
    flowing: true,
    ended: false,
    endEmitted: false,
    reading: true,
    sync: false,
    needReadable: true,
    emittedReadable: false,
    readableListening: false,
    resumeScheduled: true,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    destroyed: false,
    defaultEncoding: 'utf8',
    awaitDrainWriters: null,
    multiAwaitDrain: false,
    readingMore: false,
    decoder: null,
    encoding: null,
    [Symbol(kPaused)]: false
  },
  readable: true,
  _events: [Object: null prototype] {
    end: [ [Function: onReadableStreamEnd], [Function: bound socketOnEnd] ],
    timeout: [Function: socketOnTimeout],
    data: [Function: bound socketOnData],
    error: [Function: socketOnError],
    close: [Function: bound socketOnClose],
    drain: [Function: bound socketOnDrain],
    resume: [Function: onSocketResume],
    pause: [Function: onSocketPause]
  },
  _eventsCount: 8,
  _maxListeners: undefined,
  _writableState: WritableState {
    objectMode: false,
    highWaterMark: 16384,
    finalCalled: false,
    needDrain: false,
    ending: false,
    ended: false,
    finished: false,
    destroyed: false,
    decodeStrings: false,
    defaultEncoding: 'utf8',
    length: 0,
    writing: false,
    corked: 0,
    sync: true,
    bufferProcessing: false,
    onwrite: [Function: bound onwrite],
    writecb: null,
    writelen: 0,
    afterWriteTickInfo: null,
    bufferedRequest: null,
    lastBufferedRequest: null,
    pendingcb: 0,
    prefinished: false,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    errored: false,
    bufferedRequestCount: 0,
    corkedRequestsFree: {
      next: null,
      entry: null,
      finish: [Function: bound onCorkedFinish]
    }
  },
  writable: true,
  allowHalfOpen: true,
  _sockname: null,
  _pendingData: null,
  _pendingEncoding: '',
  server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 1,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  _server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 1,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  parser: HTTPParser {
    '0': [Function: parserOnHeaders],
    '1': [Function: parserOnHeadersComplete],
    '2': [Function: parserOnBody],
    '3': [Function: parserOnMessageComplete],
    '4': [Function: bound onParserExecute],
    _headers: [],
    _url: '',
    socket: [Circular *2],
    incoming: null,
    outgoing: null,
    maxHeaderPairs: 2000,
    _consumed: true,
    onIncoming: [Function: bound parserOnIncoming],
    parsingHeadersStart: 1585721649852
  },
  on: [Function: socketListenerWrap],
  addListener: [Function: socketListenerWrap],
  prependListener: [Function: socketListenerWrap],
  _paused: false,
  [Symbol(asyncId)]: 958,
  [Symbol(kHandle)]: TCP {
    reading: true,
    onconnection: null,
    _consumed: true,
    [Symbol(owner)]: [Circular *2]
  },
  [Symbol(kSetNoDelay)]: false,
  [Symbol(lastWriteQueueSize)]: 0,
  [Symbol(timeout)]: null,
  [Symbol(kBuffer)]: null,
  [Symbol(kBufferCb)]: null,
  [Symbol(kBufferGen)]: null,
  [Symbol(kCapture)]: false,
  [Symbol(kBytesRead)]: 0,
  [Symbol(kBytesWritten)]: 0
}

====Tue Mar 31 2020 23:14:09 ====
GET /accounts

====Tue Mar 31 2020 23:14:09 ====
RESPONSE [object Object],[object Object],[object Object],[object Object],[object Object]

====Tue Mar 31 2020 23:14:09 ====
RESPONSE [{"id":1,"username":"ProRobinHoodTr1","password":"Impossible123!!2","email":"jaledarely","phone":"9165178775","followers":786,"type":"promoImage","following":4998,"owner":1},{"id":2,"username":"StockJesus","password":"Impossible123","email":"robbrandon02","phone":"9165178775","followers":1262,"type":"promoText","following":5001,"owner":1},{"id":3,"username":"joo11244620","password":"Impossible123!!!","email":"abrahaminiguez06@gmail.com","phone":"9165178775","followers":660,"type":null,"following":5000,"owner":1},{"id":5,"username":"MarkZion19","password":"Impossible123!!","email":"teresainiguez12345","phone":"9165178775","followers":0,"type":null,"following":0,"owner":1},{"id":6,"username":"johnson_maximum","password":"Impossible123!","email":null,"phone":"9165178775","followers":160,"type":null,"following":1289,"owner":1}]

====Tue Mar 31 2020 23:14:21 ====
<ref *2> Socket {
  connecting: false,
  _hadError: false,
  _parent: null,
  _host: null,
  _readableState: ReadableState {
    objectMode: false,
    highWaterMark: 16384,
    buffer: BufferList { head: null, tail: null, length: 0 },
    length: 0,
    pipes: [],
    flowing: true,
    ended: false,
    endEmitted: false,
    reading: true,
    sync: false,
    needReadable: true,
    emittedReadable: false,
    readableListening: false,
    resumeScheduled: true,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    destroyed: false,
    defaultEncoding: 'utf8',
    awaitDrainWriters: null,
    multiAwaitDrain: false,
    readingMore: false,
    decoder: null,
    encoding: null,
    [Symbol(kPaused)]: false
  },
  readable: true,
  _events: [Object: null prototype] {
    end: [ [Function: onReadableStreamEnd], [Function: bound socketOnEnd] ],
    timeout: [Function: socketOnTimeout],
    data: [Function: bound socketOnData],
    error: [Function: socketOnError],
    close: [Function: bound socketOnClose],
    drain: [Function: bound socketOnDrain],
    resume: [Function: onSocketResume],
    pause: [Function: onSocketPause]
  },
  _eventsCount: 8,
  _maxListeners: undefined,
  _writableState: WritableState {
    objectMode: false,
    highWaterMark: 16384,
    finalCalled: false,
    needDrain: false,
    ending: false,
    ended: false,
    finished: false,
    destroyed: false,
    decodeStrings: false,
    defaultEncoding: 'utf8',
    length: 0,
    writing: false,
    corked: 0,
    sync: true,
    bufferProcessing: false,
    onwrite: [Function: bound onwrite],
    writecb: null,
    writelen: 0,
    afterWriteTickInfo: null,
    bufferedRequest: null,
    lastBufferedRequest: null,
    pendingcb: 0,
    prefinished: false,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    errored: false,
    bufferedRequestCount: 0,
    corkedRequestsFree: {
      next: null,
      entry: null,
      finish: [Function: bound onCorkedFinish]
    }
  },
  writable: true,
  allowHalfOpen: true,
  _sockname: null,
  _pendingData: null,
  _pendingEncoding: '',
  server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 1,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  _server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 1,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  parser: HTTPParser {
    '0': [Function: parserOnHeaders],
    '1': [Function: parserOnHeadersComplete],
    '2': [Function: parserOnBody],
    '3': [Function: parserOnMessageComplete],
    '4': [Function: bound onParserExecute],
    _headers: [],
    _url: '',
    socket: [Circular *2],
    incoming: null,
    outgoing: null,
    maxHeaderPairs: 2000,
    _consumed: true,
    onIncoming: [Function: bound parserOnIncoming],
    parsingHeadersStart: 1585721661487
  },
  on: [Function: socketListenerWrap],
  addListener: [Function: socketListenerWrap],
  prependListener: [Function: socketListenerWrap],
  _paused: false,
  [Symbol(asyncId)]: 1000,
  [Symbol(kHandle)]: TCP {
    reading: true,
    onconnection: null,
    _consumed: true,
    [Symbol(owner)]: [Circular *2]
  },
  [Symbol(kSetNoDelay)]: false,
  [Symbol(lastWriteQueueSize)]: 0,
  [Symbol(timeout)]: null,
  [Symbol(kBuffer)]: null,
  [Symbol(kBufferCb)]: null,
  [Symbol(kBufferGen)]: null,
  [Symbol(kCapture)]: false,
  [Symbol(kBytesRead)]: 0,
  [Symbol(kBytesWritten)]: 0
}

====Tue Mar 31 2020 23:14:21 ====
GET /accounts

====Tue Mar 31 2020 23:14:21 ====
RESPONSE [object Object],[object Object],[object Object],[object Object],[object Object]

====Tue Mar 31 2020 23:14:21 ====
RESPONSE [{"id":1,"username":"ProRobinHoodTr1","password":"Impossible123!!2","email":"jaledarely","phone":"9165178775","followers":786,"type":"promoImage","following":4998,"owner":1},{"id":2,"username":"StockJesus","password":"Impossible123","email":"robbrandon02","phone":"9165178775","followers":1262,"type":"promoText","following":5001,"owner":1},{"id":3,"username":"joo11244620","password":"Impossible123!!!","email":"abrahaminiguez06@gmail.com","phone":"9165178775","followers":660,"type":null,"following":5000,"owner":1},{"id":5,"username":"MarkZion19","password":"Impossible123!!","email":"teresainiguez12345","phone":"9165178775","followers":0,"type":null,"following":0,"owner":1},{"id":6,"username":"johnson_maximum","password":"Impossible123!","email":null,"phone":"9165178775","followers":160,"type":null,"following":1289,"owner":1}]

====Tue Mar 31 2020 23:15:00 ====
<ref *2> Socket {
  connecting: false,
  _hadError: false,
  _parent: null,
  _host: null,
  _readableState: ReadableState {
    objectMode: false,
    highWaterMark: 16384,
    buffer: BufferList { head: null, tail: null, length: 0 },
    length: 0,
    pipes: [],
    flowing: true,
    ended: false,
    endEmitted: false,
    reading: true,
    sync: false,
    needReadable: true,
    emittedReadable: false,
    readableListening: false,
    resumeScheduled: true,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    destroyed: false,
    defaultEncoding: 'utf8',
    awaitDrainWriters: null,
    multiAwaitDrain: false,
    readingMore: false,
    decoder: null,
    encoding: null,
    [Symbol(kPaused)]: false
  },
  readable: true,
  _events: [Object: null prototype] {
    end: [ [Function: onReadableStreamEnd], [Function: bound socketOnEnd] ],
    timeout: [Function: socketOnTimeout],
    data: [Function: bound socketOnData],
    error: [Function: socketOnError],
    close: [Function: bound socketOnClose],
    drain: [Function: bound socketOnDrain],
    resume: [Function: onSocketResume],
    pause: [Function: onSocketPause]
  },
  _eventsCount: 8,
  _maxListeners: undefined,
  _writableState: WritableState {
    objectMode: false,
    highWaterMark: 16384,
    finalCalled: false,
    needDrain: false,
    ending: false,
    ended: false,
    finished: false,
    destroyed: false,
    decodeStrings: false,
    defaultEncoding: 'utf8',
    length: 0,
    writing: false,
    corked: 0,
    sync: true,
    bufferProcessing: false,
    onwrite: [Function: bound onwrite],
    writecb: null,
    writelen: 0,
    afterWriteTickInfo: null,
    bufferedRequest: null,
    lastBufferedRequest: null,
    pendingcb: 0,
    prefinished: false,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    errored: false,
    bufferedRequestCount: 0,
    corkedRequestsFree: {
      next: null,
      entry: null,
      finish: [Function: bound onCorkedFinish]
    }
  },
  writable: true,
  allowHalfOpen: true,
  _sockname: null,
  _pendingData: null,
  _pendingEncoding: '',
  server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 1,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  _server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 1,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  parser: HTTPParser {
    '0': [Function: parserOnHeaders],
    '1': [Function: parserOnHeadersComplete],
    '2': [Function: parserOnBody],
    '3': [Function: parserOnMessageComplete],
    '4': [Function: bound onParserExecute],
    _headers: [],
    _url: '',
    socket: [Circular *2],
    incoming: null,
    outgoing: null,
    maxHeaderPairs: 2000,
    _consumed: true,
    onIncoming: [Function: bound parserOnIncoming],
    parsingHeadersStart: 1585721700382
  },
  on: [Function: socketListenerWrap],
  addListener: [Function: socketListenerWrap],
  prependListener: [Function: socketListenerWrap],
  _paused: false,
  [Symbol(asyncId)]: 1042,
  [Symbol(kHandle)]: TCP {
    reading: true,
    onconnection: null,
    _consumed: true,
    [Symbol(owner)]: [Circular *2]
  },
  [Symbol(kSetNoDelay)]: false,
  [Symbol(lastWriteQueueSize)]: 0,
  [Symbol(timeout)]: null,
  [Symbol(kBuffer)]: null,
  [Symbol(kBufferCb)]: null,
  [Symbol(kBufferGen)]: null,
  [Symbol(kCapture)]: false,
  [Symbol(kBytesRead)]: 0,
  [Symbol(kBytesWritten)]: 0
}

====Tue Mar 31 2020 23:15:00 ====
GET /accounts

====Tue Mar 31 2020 23:15:00 ====
RESPONSE [object Object],[object Object],[object Object],[object Object],[object Object]

====Tue Mar 31 2020 23:15:00 ====
RESPONSE [{"id":1,"username":"ProRobinHoodTr1","password":"Impossible123!!2","email":"jaledarely","phone":"9165178775","followers":786,"type":"promoImage","following":4998,"owner":1},{"id":2,"username":"StockJesus","password":"Impossible123","email":"robbrandon02","phone":"9165178775","followers":1262,"type":"promoText","following":5001,"owner":1},{"id":3,"username":"joo11244620","password":"Impossible123!!!","email":"abrahaminiguez06@gmail.com","phone":"9165178775","followers":660,"type":null,"following":5000,"owner":1},{"id":5,"username":"MarkZion19","password":"Impossible123!!","email":"teresainiguez12345","phone":"9165178775","followers":0,"type":null,"following":0,"owner":1},{"id":6,"username":"johnson_maximum","password":"Impossible123!","email":null,"phone":"9165178775","followers":160,"type":null,"following":1289,"owner":1}]

====Tue Mar 31 2020 23:15:06 ====
<ref *2> Socket {
  connecting: false,
  _hadError: false,
  _parent: null,
  _host: null,
  _readableState: ReadableState {
    objectMode: false,
    highWaterMark: 16384,
    buffer: BufferList { head: null, tail: null, length: 0 },
    length: 0,
    pipes: [],
    flowing: true,
    ended: false,
    endEmitted: false,
    reading: true,
    sync: false,
    needReadable: true,
    emittedReadable: false,
    readableListening: false,
    resumeScheduled: true,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    destroyed: false,
    defaultEncoding: 'utf8',
    awaitDrainWriters: null,
    multiAwaitDrain: false,
    readingMore: false,
    decoder: null,
    encoding: null,
    [Symbol(kPaused)]: false
  },
  readable: true,
  _events: [Object: null prototype] {
    end: [ [Function: onReadableStreamEnd], [Function: bound socketOnEnd] ],
    timeout: [Function: socketOnTimeout],
    data: [Function: bound socketOnData],
    error: [Function: socketOnError],
    close: [Function: bound socketOnClose],
    drain: [Function: bound socketOnDrain],
    resume: [Function: onSocketResume],
    pause: [Function: onSocketPause]
  },
  _eventsCount: 8,
  _maxListeners: undefined,
  _writableState: WritableState {
    objectMode: false,
    highWaterMark: 16384,
    finalCalled: false,
    needDrain: false,
    ending: false,
    ended: false,
    finished: false,
    destroyed: false,
    decodeStrings: false,
    defaultEncoding: 'utf8',
    length: 0,
    writing: false,
    corked: 0,
    sync: true,
    bufferProcessing: false,
    onwrite: [Function: bound onwrite],
    writecb: null,
    writelen: 0,
    afterWriteTickInfo: null,
    bufferedRequest: null,
    lastBufferedRequest: null,
    pendingcb: 0,
    prefinished: false,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    errored: false,
    bufferedRequestCount: 0,
    corkedRequestsFree: {
      next: null,
      entry: null,
      finish: [Function: bound onCorkedFinish]
    }
  },
  writable: true,
  allowHalfOpen: true,
  _sockname: null,
  _pendingData: null,
  _pendingEncoding: '',
  server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 1,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  _server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 1,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  parser: HTTPParser {
    '0': [Function: parserOnHeaders],
    '1': [Function: parserOnHeadersComplete],
    '2': [Function: parserOnBody],
    '3': [Function: parserOnMessageComplete],
    '4': [Function: bound onParserExecute],
    _headers: [],
    _url: '',
    socket: [Circular *2],
    incoming: null,
    outgoing: null,
    maxHeaderPairs: 2000,
    _consumed: true,
    onIncoming: [Function: bound parserOnIncoming],
    parsingHeadersStart: 1585721706702
  },
  on: [Function: socketListenerWrap],
  addListener: [Function: socketListenerWrap],
  prependListener: [Function: socketListenerWrap],
  _paused: false,
  [Symbol(asyncId)]: 1084,
  [Symbol(kHandle)]: TCP {
    reading: true,
    onconnection: null,
    _consumed: true,
    [Symbol(owner)]: [Circular *2]
  },
  [Symbol(kSetNoDelay)]: false,
  [Symbol(lastWriteQueueSize)]: 0,
  [Symbol(timeout)]: null,
  [Symbol(kBuffer)]: null,
  [Symbol(kBufferCb)]: null,
  [Symbol(kBufferGen)]: null,
  [Symbol(kCapture)]: false,
  [Symbol(kBytesRead)]: 0,
  [Symbol(kBytesWritten)]: 0
}

====Tue Mar 31 2020 23:15:06 ====
GET /accounts

====Tue Mar 31 2020 23:15:06 ====
RESPONSE [object Object],[object Object],[object Object],[object Object],[object Object]

====Tue Mar 31 2020 23:15:06 ====
RESPONSE [{"id":1,"username":"ProRobinHoodTr1","password":"Impossible123!!2","email":"jaledarely","phone":"9165178775","followers":786,"type":"promoImage","following":4998,"owner":1},{"id":2,"username":"StockJesus","password":"Impossible123","email":"robbrandon02","phone":"9165178775","followers":1262,"type":"promoText","following":5001,"owner":1},{"id":3,"username":"joo11244620","password":"Impossible123!!!","email":"abrahaminiguez06@gmail.com","phone":"9165178775","followers":660,"type":null,"following":5000,"owner":1},{"id":5,"username":"MarkZion19","password":"Impossible123!!","email":"teresainiguez12345","phone":"9165178775","followers":0,"type":null,"following":0,"owner":1},{"id":6,"username":"johnson_maximum","password":"Impossible123!","email":null,"phone":"9165178775","followers":160,"type":null,"following":1289,"owner":1}]

====Tue Mar 31 2020 23:15:22 ====
<ref *2> Socket {
  connecting: false,
  _hadError: false,
  _parent: null,
  _host: null,
  _readableState: ReadableState {
    objectMode: false,
    highWaterMark: 16384,
    buffer: BufferList { head: null, tail: null, length: 0 },
    length: 0,
    pipes: [],
    flowing: true,
    ended: false,
    endEmitted: false,
    reading: true,
    sync: false,
    needReadable: true,
    emittedReadable: false,
    readableListening: false,
    resumeScheduled: true,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    destroyed: false,
    defaultEncoding: 'utf8',
    awaitDrainWriters: null,
    multiAwaitDrain: false,
    readingMore: false,
    decoder: null,
    encoding: null,
    [Symbol(kPaused)]: false
  },
  readable: true,
  _events: [Object: null prototype] {
    end: [ [Function: onReadableStreamEnd], [Function: bound socketOnEnd] ],
    timeout: [Function: socketOnTimeout],
    data: [Function: bound socketOnData],
    error: [Function: socketOnError],
    close: [Function: bound socketOnClose],
    drain: [Function: bound socketOnDrain],
    resume: [Function: onSocketResume],
    pause: [Function: onSocketPause]
  },
  _eventsCount: 8,
  _maxListeners: undefined,
  _writableState: WritableState {
    objectMode: false,
    highWaterMark: 16384,
    finalCalled: false,
    needDrain: false,
    ending: false,
    ended: false,
    finished: false,
    destroyed: false,
    decodeStrings: false,
    defaultEncoding: 'utf8',
    length: 0,
    writing: false,
    corked: 0,
    sync: true,
    bufferProcessing: false,
    onwrite: [Function: bound onwrite],
    writecb: null,
    writelen: 0,
    afterWriteTickInfo: null,
    bufferedRequest: null,
    lastBufferedRequest: null,
    pendingcb: 0,
    prefinished: false,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    errored: false,
    bufferedRequestCount: 0,
    corkedRequestsFree: {
      next: null,
      entry: null,
      finish: [Function: bound onCorkedFinish]
    }
  },
  writable: true,
  allowHalfOpen: true,
  _sockname: null,
  _pendingData: null,
  _pendingEncoding: '',
  server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 1,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  _server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 1,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  parser: HTTPParser {
    '0': [Function: parserOnHeaders],
    '1': [Function: parserOnHeadersComplete],
    '2': [Function: parserOnBody],
    '3': [Function: parserOnMessageComplete],
    '4': [Function: bound onParserExecute],
    _headers: [],
    _url: '',
    socket: [Circular *2],
    incoming: null,
    outgoing: null,
    maxHeaderPairs: 2000,
    _consumed: true,
    onIncoming: [Function: bound parserOnIncoming],
    parsingHeadersStart: 1585721722516
  },
  on: [Function: socketListenerWrap],
  addListener: [Function: socketListenerWrap],
  prependListener: [Function: socketListenerWrap],
  _paused: false,
  [Symbol(asyncId)]: 1126,
  [Symbol(kHandle)]: TCP {
    reading: true,
    onconnection: null,
    _consumed: true,
    [Symbol(owner)]: [Circular *2]
  },
  [Symbol(kSetNoDelay)]: false,
  [Symbol(lastWriteQueueSize)]: 0,
  [Symbol(timeout)]: null,
  [Symbol(kBuffer)]: null,
  [Symbol(kBufferCb)]: null,
  [Symbol(kBufferGen)]: null,
  [Symbol(kCapture)]: false,
  [Symbol(kBytesRead)]: 0,
  [Symbol(kBytesWritten)]: 0
}

====Tue Mar 31 2020 23:15:22 ====
GET /accounts

====Tue Mar 31 2020 23:15:22 ====
RESPONSE [object Object],[object Object],[object Object],[object Object],[object Object]

====Tue Mar 31 2020 23:15:22 ====
RESPONSE [{"id":1,"username":"ProRobinHoodTr1","password":"Impossible123!!2","email":"jaledarely","phone":"9165178775","followers":786,"type":"promoImage","following":4998,"owner":1},{"id":2,"username":"StockJesus","password":"Impossible123","email":"robbrandon02","phone":"9165178775","followers":1262,"type":"promoText","following":5001,"owner":1},{"id":3,"username":"joo11244620","password":"Impossible123!!!","email":"abrahaminiguez06@gmail.com","phone":"9165178775","followers":660,"type":null,"following":5000,"owner":1},{"id":5,"username":"MarkZion19","password":"Impossible123!!","email":"teresainiguez12345","phone":"9165178775","followers":0,"type":null,"following":0,"owner":1},{"id":6,"username":"johnson_maximum","password":"Impossible123!","email":null,"phone":"9165178775","followers":160,"type":null,"following":1289,"owner":1}]

====Tue Mar 31 2020 23:15:24 ====
GET /accounts

====Tue Mar 31 2020 23:15:24 ====
RESPONSE [object Object],[object Object],[object Object],[object Object],[object Object]

====Tue Mar 31 2020 23:15:24 ====
RESPONSE [{"id":1,"username":"ProRobinHoodTr1","password":"Impossible123!!2","email":"jaledarely","phone":"9165178775","followers":786,"type":"promoImage","following":4998,"owner":1},{"id":2,"username":"StockJesus","password":"Impossible123","email":"robbrandon02","phone":"9165178775","followers":1262,"type":"promoText","following":5001,"owner":1},{"id":3,"username":"joo11244620","password":"Impossible123!!!","email":"abrahaminiguez06@gmail.com","phone":"9165178775","followers":660,"type":null,"following":5000,"owner":1},{"id":5,"username":"MarkZion19","password":"Impossible123!!","email":"teresainiguez12345","phone":"9165178775","followers":0,"type":null,"following":0,"owner":1},{"id":6,"username":"johnson_maximum","password":"Impossible123!","email":null,"phone":"9165178775","followers":160,"type":null,"following":1289,"owner":1}]

====Tue Mar 31 2020 23:15:26 ====
GET /accounts

====Tue Mar 31 2020 23:15:26 ====
RESPONSE [object Object],[object Object],[object Object],[object Object],[object Object]

====Tue Mar 31 2020 23:15:26 ====
RESPONSE [{"id":1,"username":"ProRobinHoodTr1","password":"Impossible123!!2","email":"jaledarely","phone":"9165178775","followers":786,"type":"promoImage","following":4998,"owner":1},{"id":2,"username":"StockJesus","password":"Impossible123","email":"robbrandon02","phone":"9165178775","followers":1262,"type":"promoText","following":5001,"owner":1},{"id":3,"username":"joo11244620","password":"Impossible123!!!","email":"abrahaminiguez06@gmail.com","phone":"9165178775","followers":660,"type":null,"following":5000,"owner":1},{"id":5,"username":"MarkZion19","password":"Impossible123!!","email":"teresainiguez12345","phone":"9165178775","followers":0,"type":null,"following":0,"owner":1},{"id":6,"username":"johnson_maximum","password":"Impossible123!","email":null,"phone":"9165178775","followers":160,"type":null,"following":1289,"owner":1}]

====Tue Mar 31 2020 23:21:11 ====
<ref *2> Socket {
  connecting: false,
  _hadError: false,
  _parent: null,
  _host: null,
  _readableState: ReadableState {
    objectMode: false,
    highWaterMark: 16384,
    buffer: BufferList { head: null, tail: null, length: 0 },
    length: 0,
    pipes: [],
    flowing: true,
    ended: false,
    endEmitted: false,
    reading: true,
    sync: false,
    needReadable: true,
    emittedReadable: false,
    readableListening: false,
    resumeScheduled: true,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    destroyed: false,
    defaultEncoding: 'utf8',
    awaitDrainWriters: null,
    multiAwaitDrain: false,
    readingMore: false,
    decoder: null,
    encoding: null,
    [Symbol(kPaused)]: false
  },
  readable: true,
  _events: [Object: null prototype] {
    end: [ [Function: onReadableStreamEnd], [Function: bound socketOnEnd] ],
    timeout: [Function: socketOnTimeout],
    data: [Function: bound socketOnData],
    error: [Function: socketOnError],
    close: [Function: bound socketOnClose],
    drain: [Function: bound socketOnDrain],
    resume: [Function: onSocketResume],
    pause: [Function: onSocketPause]
  },
  _eventsCount: 8,
  _maxListeners: undefined,
  _writableState: WritableState {
    objectMode: false,
    highWaterMark: 16384,
    finalCalled: false,
    needDrain: false,
    ending: false,
    ended: false,
    finished: false,
    destroyed: false,
    decodeStrings: false,
    defaultEncoding: 'utf8',
    length: 0,
    writing: false,
    corked: 0,
    sync: true,
    bufferProcessing: false,
    onwrite: [Function: bound onwrite],
    writecb: null,
    writelen: 0,
    afterWriteTickInfo: null,
    bufferedRequest: null,
    lastBufferedRequest: null,
    pendingcb: 0,
    prefinished: false,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    errored: false,
    bufferedRequestCount: 0,
    corkedRequestsFree: {
      next: null,
      entry: null,
      finish: [Function: bound onCorkedFinish]
    }
  },
  writable: true,
  allowHalfOpen: true,
  _sockname: null,
  _pendingData: null,
  _pendingEncoding: '',
  server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 1,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  _server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 1,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  parser: HTTPParser {
    '0': [Function: parserOnHeaders],
    '1': [Function: parserOnHeadersComplete],
    '2': [Function: parserOnBody],
    '3': [Function: parserOnMessageComplete],
    '4': [Function: bound onParserExecute],
    _headers: [],
    _url: '',
    socket: [Circular *2],
    incoming: null,
    outgoing: null,
    maxHeaderPairs: 2000,
    _consumed: true,
    onIncoming: [Function: bound parserOnIncoming],
    parsingHeadersStart: 1585722071521
  },
  on: [Function: socketListenerWrap],
  addListener: [Function: socketListenerWrap],
  prependListener: [Function: socketListenerWrap],
  _paused: false,
  [Symbol(asyncId)]: 1224,
  [Symbol(kHandle)]: TCP {
    reading: true,
    onconnection: null,
    _consumed: true,
    [Symbol(owner)]: [Circular *2]
  },
  [Symbol(kSetNoDelay)]: false,
  [Symbol(lastWriteQueueSize)]: 0,
  [Symbol(timeout)]: null,
  [Symbol(kBuffer)]: null,
  [Symbol(kBufferCb)]: null,
  [Symbol(kBufferGen)]: null,
  [Symbol(kCapture)]: false,
  [Symbol(kBytesRead)]: 0,
  [Symbol(kBytesWritten)]: 0
}

====Tue Mar 31 2020 23:21:11 ====
GET /accounts

====Tue Mar 31 2020 23:21:11 ====
RESPONSE [object Object],[object Object],[object Object],[object Object],[object Object]

====Tue Mar 31 2020 23:21:11 ====
RESPONSE [{"id":1,"username":"ProRobinHoodTr1","password":"Impossible123!!2","email":"jaledarely","phone":"9165178775","followers":786,"type":"promoImage","following":4998,"owner":1},{"id":2,"username":"StockJesus","password":"Impossible123","email":"robbrandon02","phone":"9165178775","followers":1262,"type":"promoText","following":5001,"owner":1},{"id":3,"username":"joo11244620","password":"Impossible123!!!","email":"abrahaminiguez06@gmail.com","phone":"9165178775","followers":660,"type":null,"following":5000,"owner":1},{"id":5,"username":"MarkZion19","password":"Impossible123!!","email":"teresainiguez12345","phone":"9165178775","followers":0,"type":null,"following":0,"owner":1},{"id":6,"username":"johnson_maximum","password":"Impossible123!","email":null,"phone":"9165178775","followers":160,"type":null,"following":1289,"owner":1}]

====Tue Mar 31 2020 23:36:57 ====
undefined

====Tue Mar 31 2020 23:36:58 ====
<ref *2> Socket {
  connecting: false,
  _hadError: false,
  _parent: null,
  _host: null,
  _readableState: ReadableState {
    objectMode: false,
    highWaterMark: 16384,
    buffer: BufferList { head: null, tail: null, length: 0 },
    length: 0,
    pipes: [],
    flowing: true,
    ended: false,
    endEmitted: false,
    reading: true,
    sync: false,
    needReadable: true,
    emittedReadable: false,
    readableListening: false,
    resumeScheduled: true,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    destroyed: false,
    defaultEncoding: 'utf8',
    awaitDrainWriters: null,
    multiAwaitDrain: false,
    readingMore: false,
    decoder: null,
    encoding: null,
    [Symbol(kPaused)]: false
  },
  readable: true,
  _events: [Object: null prototype] {
    end: [ [Function: onReadableStreamEnd], [Function: bound socketOnEnd] ],
    timeout: [Function: socketOnTimeout],
    data: [Function: bound socketOnData],
    error: [Function: socketOnError],
    close: [Function: bound socketOnClose],
    drain: [Function: bound socketOnDrain],
    resume: [Function: onSocketResume],
    pause: [Function: onSocketPause]
  },
  _eventsCount: 8,
  _maxListeners: undefined,
  _writableState: WritableState {
    objectMode: false,
    highWaterMark: 16384,
    finalCalled: false,
    needDrain: false,
    ending: false,
    ended: false,
    finished: false,
    destroyed: false,
    decodeStrings: false,
    defaultEncoding: 'utf8',
    length: 0,
    writing: false,
    corked: 0,
    sync: true,
    bufferProcessing: false,
    onwrite: [Function: bound onwrite],
    writecb: null,
    writelen: 0,
    afterWriteTickInfo: null,
    bufferedRequest: null,
    lastBufferedRequest: null,
    pendingcb: 0,
    prefinished: false,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    errored: false,
    bufferedRequestCount: 0,
    corkedRequestsFree: {
      next: null,
      entry: null,
      finish: [Function: bound onCorkedFinish]
    }
  },
  writable: true,
  allowHalfOpen: true,
  _sockname: null,
  _pendingData: null,
  _pendingEncoding: '',
  server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 1,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  _server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 1,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  parser: HTTPParser {
    '0': [Function: parserOnHeaders],
    '1': [Function: parserOnHeadersComplete],
    '2': [Function: parserOnBody],
    '3': [Function: parserOnMessageComplete],
    '4': [Function: bound onParserExecute],
    _headers: [],
    _url: '',
    socket: [Circular *2],
    incoming: null,
    outgoing: null,
    maxHeaderPairs: 2000,
    _consumed: true,
    onIncoming: [Function: bound parserOnIncoming],
    parsingHeadersStart: 1585723018636
  },
  on: [Function: socketListenerWrap],
  addListener: [Function: socketListenerWrap],
  prependListener: [Function: socketListenerWrap],
  _paused: false,
  [Symbol(asyncId)]: 10,
  [Symbol(kHandle)]: TCP {
    reading: true,
    onconnection: null,
    _consumed: true,
    [Symbol(owner)]: [Circular *2]
  },
  [Symbol(kSetNoDelay)]: false,
  [Symbol(lastWriteQueueSize)]: 0,
  [Symbol(timeout)]: null,
  [Symbol(kBuffer)]: null,
  [Symbol(kBufferCb)]: null,
  [Symbol(kBufferGen)]: null,
  [Symbol(kCapture)]: false,
  [Symbol(kBytesRead)]: 0,
  [Symbol(kBytesWritten)]: 0
}

====Tue Mar 31 2020 23:36:58 ====
GET /accounts

====Tue Mar 31 2020 23:36:58 ====
RESPONSE [object Object],[object Object],[object Object],[object Object],[object Object]

====Tue Mar 31 2020 23:36:58 ====
RESPONSE [{"id":1,"username":"ProRobinHoodTr1","password":"Impossible123!!2","email":"jaledarely","phone":"9165178775","followers":786,"type":"promoImage","following":4998,"owner":1},{"id":2,"username":"StockJesus","password":"Impossible123","email":"robbrandon02","phone":"9165178775","followers":1262,"type":"promoText","following":5001,"owner":1},{"id":3,"username":"joo11244620","password":"Impossible123!!!","email":"abrahaminiguez06@gmail.com","phone":"9165178775","followers":660,"type":null,"following":5000,"owner":1},{"id":5,"username":"MarkZion19","password":"Impossible123!!","email":"teresainiguez12345","phone":"9165178775","followers":0,"type":null,"following":0,"owner":1},{"id":6,"username":"johnson_maximum","password":"Impossible123!","email":null,"phone":"9165178775","followers":160,"type":null,"following":1289,"owner":1}]

====Tue Mar 31 2020 23:41:28 ====
<ref *2> Socket {
  connecting: false,
  _hadError: false,
  _parent: null,
  _host: null,
  _readableState: ReadableState {
    objectMode: false,
    highWaterMark: 16384,
    buffer: BufferList { head: null, tail: null, length: 0 },
    length: 0,
    pipes: [],
    flowing: true,
    ended: false,
    endEmitted: false,
    reading: true,
    sync: false,
    needReadable: true,
    emittedReadable: false,
    readableListening: false,
    resumeScheduled: true,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    destroyed: false,
    defaultEncoding: 'utf8',
    awaitDrainWriters: null,
    multiAwaitDrain: false,
    readingMore: false,
    decoder: null,
    encoding: null,
    [Symbol(kPaused)]: false
  },
  readable: true,
  _events: [Object: null prototype] {
    end: [ [Function: onReadableStreamEnd], [Function: bound socketOnEnd] ],
    timeout: [Function: socketOnTimeout],
    data: [Function: bound socketOnData],
    error: [Function: socketOnError],
    close: [Function: bound socketOnClose],
    drain: [Function: bound socketOnDrain],
    resume: [Function: onSocketResume],
    pause: [Function: onSocketPause]
  },
  _eventsCount: 8,
  _maxListeners: undefined,
  _writableState: WritableState {
    objectMode: false,
    highWaterMark: 16384,
    finalCalled: false,
    needDrain: false,
    ending: false,
    ended: false,
    finished: false,
    destroyed: false,
    decodeStrings: false,
    defaultEncoding: 'utf8',
    length: 0,
    writing: false,
    corked: 0,
    sync: true,
    bufferProcessing: false,
    onwrite: [Function: bound onwrite],
    writecb: null,
    writelen: 0,
    afterWriteTickInfo: null,
    bufferedRequest: null,
    lastBufferedRequest: null,
    pendingcb: 0,
    prefinished: false,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    errored: false,
    bufferedRequestCount: 0,
    corkedRequestsFree: {
      next: null,
      entry: null,
      finish: [Function: bound onCorkedFinish]
    }
  },
  writable: true,
  allowHalfOpen: true,
  _sockname: null,
  _pendingData: null,
  _pendingEncoding: '',
  server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 1,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  _server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 1,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  parser: HTTPParser {
    '0': [Function: parserOnHeaders],
    '1': [Function: parserOnHeadersComplete],
    '2': [Function: parserOnBody],
    '3': [Function: parserOnMessageComplete],
    '4': [Function: bound onParserExecute],
    _headers: [],
    _url: '',
    socket: [Circular *2],
    incoming: null,
    outgoing: null,
    maxHeaderPairs: 2000,
    _consumed: true,
    onIncoming: [Function: bound parserOnIncoming],
    parsingHeadersStart: 1585723288711
  },
  on: [Function: socketListenerWrap],
  addListener: [Function: socketListenerWrap],
  prependListener: [Function: socketListenerWrap],
  _paused: false,
  [Symbol(asyncId)]: 53,
  [Symbol(kHandle)]: TCP {
    reading: true,
    onconnection: null,
    _consumed: true,
    [Symbol(owner)]: [Circular *2]
  },
  [Symbol(kSetNoDelay)]: false,
  [Symbol(lastWriteQueueSize)]: 0,
  [Symbol(timeout)]: null,
  [Symbol(kBuffer)]: null,
  [Symbol(kBufferCb)]: null,
  [Symbol(kBufferGen)]: null,
  [Symbol(kCapture)]: false,
  [Symbol(kBytesRead)]: 0,
  [Symbol(kBytesWritten)]: 0
}

====Tue Mar 31 2020 23:41:28 ====
GET /accounts

====Tue Mar 31 2020 23:41:28 ====
RESPONSE [object Object],[object Object],[object Object],[object Object],[object Object]

====Tue Mar 31 2020 23:41:28 ====
RESPONSE [{"id":1,"username":"ProRobinHoodTr1","password":"Impossible123!!2","email":"jaledarely","phone":"9165178775","followers":786,"type":"promoImage","following":4998,"owner":1},{"id":2,"username":"StockJesus","password":"Impossible123","email":"robbrandon02","phone":"9165178775","followers":1262,"type":"promoText","following":5001,"owner":1},{"id":3,"username":"joo11244620","password":"Impossible123!!!","email":"abrahaminiguez06@gmail.com","phone":"9165178775","followers":660,"type":null,"following":5000,"owner":1},{"id":5,"username":"MarkZion19","password":"Impossible123!!","email":"teresainiguez12345","phone":"9165178775","followers":0,"type":null,"following":0,"owner":1},{"id":6,"username":"johnson_maximum","password":"Impossible123!","email":null,"phone":"9165178775","followers":160,"type":null,"following":1289,"owner":1}]

====Tue Mar 31 2020 23:42:07 ====
<ref *2> Socket {
  connecting: false,
  _hadError: false,
  _parent: null,
  _host: null,
  _readableState: ReadableState {
    objectMode: false,
    highWaterMark: 16384,
    buffer: BufferList { head: null, tail: null, length: 0 },
    length: 0,
    pipes: [],
    flowing: true,
    ended: false,
    endEmitted: false,
    reading: true,
    sync: false,
    needReadable: true,
    emittedReadable: false,
    readableListening: false,
    resumeScheduled: true,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    destroyed: false,
    defaultEncoding: 'utf8',
    awaitDrainWriters: null,
    multiAwaitDrain: false,
    readingMore: false,
    decoder: null,
    encoding: null,
    [Symbol(kPaused)]: false
  },
  readable: true,
  _events: [Object: null prototype] {
    end: [ [Function: onReadableStreamEnd], [Function: bound socketOnEnd] ],
    timeout: [Function: socketOnTimeout],
    data: [Function: bound socketOnData],
    error: [Function: socketOnError],
    close: [Function: bound socketOnClose],
    drain: [Function: bound socketOnDrain],
    resume: [Function: onSocketResume],
    pause: [Function: onSocketPause]
  },
  _eventsCount: 8,
  _maxListeners: undefined,
  _writableState: WritableState {
    objectMode: false,
    highWaterMark: 16384,
    finalCalled: false,
    needDrain: false,
    ending: false,
    ended: false,
    finished: false,
    destroyed: false,
    decodeStrings: false,
    defaultEncoding: 'utf8',
    length: 0,
    writing: false,
    corked: 0,
    sync: true,
    bufferProcessing: false,
    onwrite: [Function: bound onwrite],
    writecb: null,
    writelen: 0,
    afterWriteTickInfo: null,
    bufferedRequest: null,
    lastBufferedRequest: null,
    pendingcb: 0,
    prefinished: false,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    errored: false,
    bufferedRequestCount: 0,
    corkedRequestsFree: {
      next: null,
      entry: null,
      finish: [Function: bound onCorkedFinish]
    }
  },
  writable: true,
  allowHalfOpen: true,
  _sockname: null,
  _pendingData: null,
  _pendingEncoding: '',
  server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 1,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  _server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 1,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  parser: HTTPParser {
    '0': [Function: parserOnHeaders],
    '1': [Function: parserOnHeadersComplete],
    '2': [Function: parserOnBody],
    '3': [Function: parserOnMessageComplete],
    '4': [Function: bound onParserExecute],
    _headers: [],
    _url: '',
    socket: [Circular *2],
    incoming: null,
    outgoing: null,
    maxHeaderPairs: 2000,
    _consumed: true,
    onIncoming: [Function: bound parserOnIncoming],
    parsingHeadersStart: 1585723327240
  },
  on: [Function: socketListenerWrap],
  addListener: [Function: socketListenerWrap],
  prependListener: [Function: socketListenerWrap],
  _paused: false,
  [Symbol(asyncId)]: 95,
  [Symbol(kHandle)]: TCP {
    reading: true,
    onconnection: null,
    _consumed: true,
    [Symbol(owner)]: [Circular *2]
  },
  [Symbol(kSetNoDelay)]: false,
  [Symbol(lastWriteQueueSize)]: 0,
  [Symbol(timeout)]: null,
  [Symbol(kBuffer)]: null,
  [Symbol(kBufferCb)]: null,
  [Symbol(kBufferGen)]: null,
  [Symbol(kCapture)]: false,
  [Symbol(kBytesRead)]: 0,
  [Symbol(kBytesWritten)]: 0
}

====Tue Mar 31 2020 23:42:07 ====
GET /accounts

====Tue Mar 31 2020 23:42:07 ====
RESPONSE [object Object],[object Object],[object Object],[object Object],[object Object]

====Tue Mar 31 2020 23:42:07 ====
RESPONSE [{"id":1,"username":"ProRobinHoodTr1","password":"Impossible123!!2","email":"jaledarely","phone":"9165178775","followers":786,"type":"promoImage","following":4998,"owner":1},{"id":2,"username":"StockJesus","password":"Impossible123","email":"robbrandon02","phone":"9165178775","followers":1262,"type":"promoText","following":5001,"owner":1},{"id":3,"username":"joo11244620","password":"Impossible123!!!","email":"abrahaminiguez06@gmail.com","phone":"9165178775","followers":660,"type":null,"following":5000,"owner":1},{"id":5,"username":"MarkZion19","password":"Impossible123!!","email":"teresainiguez12345","phone":"9165178775","followers":0,"type":null,"following":0,"owner":1},{"id":6,"username":"johnson_maximum","password":"Impossible123!","email":null,"phone":"9165178775","followers":160,"type":null,"following":1289,"owner":1}]

====Tue Mar 31 2020 23:49:08 ====
<ref *2> Socket {
  connecting: false,
  _hadError: false,
  _parent: null,
  _host: null,
  _readableState: ReadableState {
    objectMode: false,
    highWaterMark: 16384,
    buffer: BufferList { head: null, tail: null, length: 0 },
    length: 0,
    pipes: [],
    flowing: true,
    ended: false,
    endEmitted: false,
    reading: true,
    sync: false,
    needReadable: true,
    emittedReadable: false,
    readableListening: false,
    resumeScheduled: true,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    destroyed: false,
    defaultEncoding: 'utf8',
    awaitDrainWriters: null,
    multiAwaitDrain: false,
    readingMore: false,
    decoder: null,
    encoding: null,
    [Symbol(kPaused)]: false
  },
  readable: true,
  _events: [Object: null prototype] {
    end: [ [Function: onReadableStreamEnd], [Function: bound socketOnEnd] ],
    timeout: [Function: socketOnTimeout],
    data: [Function: bound socketOnData],
    error: [Function: socketOnError],
    close: [Function: bound socketOnClose],
    drain: [Function: bound socketOnDrain],
    resume: [Function: onSocketResume],
    pause: [Function: onSocketPause]
  },
  _eventsCount: 8,
  _maxListeners: undefined,
  _writableState: WritableState {
    objectMode: false,
    highWaterMark: 16384,
    finalCalled: false,
    needDrain: false,
    ending: false,
    ended: false,
    finished: false,
    destroyed: false,
    decodeStrings: false,
    defaultEncoding: 'utf8',
    length: 0,
    writing: false,
    corked: 0,
    sync: true,
    bufferProcessing: false,
    onwrite: [Function: bound onwrite],
    writecb: null,
    writelen: 0,
    afterWriteTickInfo: null,
    bufferedRequest: null,
    lastBufferedRequest: null,
    pendingcb: 0,
    prefinished: false,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    errored: false,
    bufferedRequestCount: 0,
    corkedRequestsFree: {
      next: null,
      entry: null,
      finish: [Function: bound onCorkedFinish]
    }
  },
  writable: true,
  allowHalfOpen: true,
  _sockname: null,
  _pendingData: null,
  _pendingEncoding: '',
  server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 1,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  _server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 1,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  parser: HTTPParser {
    '0': [Function: parserOnHeaders],
    '1': [Function: parserOnHeadersComplete],
    '2': [Function: parserOnBody],
    '3': [Function: parserOnMessageComplete],
    '4': [Function: bound onParserExecute],
    _headers: [],
    _url: '',
    socket: [Circular *2],
    incoming: null,
    outgoing: null,
    maxHeaderPairs: 2000,
    _consumed: true,
    onIncoming: [Function: bound parserOnIncoming],
    parsingHeadersStart: 1585723748056
  },
  on: [Function: socketListenerWrap],
  addListener: [Function: socketListenerWrap],
  prependListener: [Function: socketListenerWrap],
  _paused: false,
  [Symbol(asyncId)]: 137,
  [Symbol(kHandle)]: TCP {
    reading: true,
    onconnection: null,
    _consumed: true,
    [Symbol(owner)]: [Circular *2]
  },
  [Symbol(kSetNoDelay)]: false,
  [Symbol(lastWriteQueueSize)]: 0,
  [Symbol(timeout)]: null,
  [Symbol(kBuffer)]: null,
  [Symbol(kBufferCb)]: null,
  [Symbol(kBufferGen)]: null,
  [Symbol(kCapture)]: false,
  [Symbol(kBytesRead)]: 0,
  [Symbol(kBytesWritten)]: 0
}

====Tue Mar 31 2020 23:49:08 ====
GET /accounts

====Tue Mar 31 2020 23:49:08 ====
RESPONSE [object Object],[object Object],[object Object],[object Object],[object Object]

====Tue Mar 31 2020 23:49:08 ====
RESPONSE [{"id":1,"username":"ProRobinHoodTr1","password":"Impossible123!!2","email":"jaledarely","phone":"9165178775","followers":786,"type":"promoImage","following":4998,"owner":1},{"id":2,"username":"StockJesus","password":"Impossible123","email":"robbrandon02","phone":"9165178775","followers":1262,"type":"promoText","following":5001,"owner":1},{"id":3,"username":"joo11244620","password":"Impossible123!!!","email":"abrahaminiguez06@gmail.com","phone":"9165178775","followers":660,"type":null,"following":5000,"owner":1},{"id":5,"username":"MarkZion19","password":"Impossible123!!","email":"teresainiguez12345","phone":"9165178775","followers":0,"type":null,"following":0,"owner":1},{"id":6,"username":"johnson_maximum","password":"Impossible123!","email":null,"phone":"9165178775","followers":160,"type":null,"following":1289,"owner":1}]

====Tue Mar 31 2020 23:51:52 ====
<ref *2> Socket {
  connecting: false,
  _hadError: false,
  _parent: null,
  _host: null,
  _readableState: ReadableState {
    objectMode: false,
    highWaterMark: 16384,
    buffer: BufferList { head: null, tail: null, length: 0 },
    length: 0,
    pipes: [],
    flowing: true,
    ended: false,
    endEmitted: false,
    reading: true,
    sync: false,
    needReadable: true,
    emittedReadable: false,
    readableListening: false,
    resumeScheduled: true,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    destroyed: false,
    defaultEncoding: 'utf8',
    awaitDrainWriters: null,
    multiAwaitDrain: false,
    readingMore: false,
    decoder: null,
    encoding: null,
    [Symbol(kPaused)]: false
  },
  readable: true,
  _events: [Object: null prototype] {
    end: [ [Function: onReadableStreamEnd], [Function: bound socketOnEnd] ],
    timeout: [Function: socketOnTimeout],
    data: [Function: bound socketOnData],
    error: [Function: socketOnError],
    close: [Function: bound socketOnClose],
    drain: [Function: bound socketOnDrain],
    resume: [Function: onSocketResume],
    pause: [Function: onSocketPause]
  },
  _eventsCount: 8,
  _maxListeners: undefined,
  _writableState: WritableState {
    objectMode: false,
    highWaterMark: 16384,
    finalCalled: false,
    needDrain: false,
    ending: false,
    ended: false,
    finished: false,
    destroyed: false,
    decodeStrings: false,
    defaultEncoding: 'utf8',
    length: 0,
    writing: false,
    corked: 0,
    sync: true,
    bufferProcessing: false,
    onwrite: [Function: bound onwrite],
    writecb: null,
    writelen: 0,
    afterWriteTickInfo: null,
    bufferedRequest: null,
    lastBufferedRequest: null,
    pendingcb: 0,
    prefinished: false,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    errored: false,
    bufferedRequestCount: 0,
    corkedRequestsFree: {
      next: null,
      entry: null,
      finish: [Function: bound onCorkedFinish]
    }
  },
  writable: true,
  allowHalfOpen: true,
  _sockname: null,
  _pendingData: null,
  _pendingEncoding: '',
  server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 1,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  _server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 1,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  parser: HTTPParser {
    '0': [Function: parserOnHeaders],
    '1': [Function: parserOnHeadersComplete],
    '2': [Function: parserOnBody],
    '3': [Function: parserOnMessageComplete],
    '4': [Function: bound onParserExecute],
    _headers: [],
    _url: '',
    socket: [Circular *2],
    incoming: null,
    outgoing: null,
    maxHeaderPairs: 2000,
    _consumed: true,
    onIncoming: [Function: bound parserOnIncoming],
    parsingHeadersStart: 1585723912952
  },
  on: [Function: socketListenerWrap],
  addListener: [Function: socketListenerWrap],
  prependListener: [Function: socketListenerWrap],
  _paused: false,
  [Symbol(asyncId)]: 179,
  [Symbol(kHandle)]: TCP {
    reading: true,
    onconnection: null,
    _consumed: true,
    [Symbol(owner)]: [Circular *2]
  },
  [Symbol(kSetNoDelay)]: false,
  [Symbol(lastWriteQueueSize)]: 0,
  [Symbol(timeout)]: null,
  [Symbol(kBuffer)]: null,
  [Symbol(kBufferCb)]: null,
  [Symbol(kBufferGen)]: null,
  [Symbol(kCapture)]: false,
  [Symbol(kBytesRead)]: 0,
  [Symbol(kBytesWritten)]: 0
}

====Tue Mar 31 2020 23:51:52 ====
GET /accounts

====Tue Mar 31 2020 23:51:52 ====
RESPONSE [object Object],[object Object],[object Object],[object Object],[object Object]

====Tue Mar 31 2020 23:51:52 ====
RESPONSE [{"id":1,"username":"ProRobinHoodTr1","password":"Impossible123!!2","email":"jaledarely","phone":"9165178775","followers":786,"type":"promoImage","following":4998,"owner":1},{"id":2,"username":"StockJesus","password":"Impossible123","email":"robbrandon02","phone":"9165178775","followers":1262,"type":"promoText","following":5001,"owner":1},{"id":3,"username":"joo11244620","password":"Impossible123!!!","email":"abrahaminiguez06@gmail.com","phone":"9165178775","followers":660,"type":null,"following":5000,"owner":1},{"id":5,"username":"MarkZion19","password":"Impossible123!!","email":"teresainiguez12345","phone":"9165178775","followers":0,"type":null,"following":0,"owner":1},{"id":6,"username":"johnson_maximum","password":"Impossible123!","email":null,"phone":"9165178775","followers":160,"type":null,"following":1289,"owner":1}]

====Tue Mar 31 2020 23:56:35 ====
<ref *2> Socket {
  connecting: false,
  _hadError: false,
  _parent: null,
  _host: null,
  _readableState: ReadableState {
    objectMode: false,
    highWaterMark: 16384,
    buffer: BufferList { head: null, tail: null, length: 0 },
    length: 0,
    pipes: [],
    flowing: true,
    ended: false,
    endEmitted: false,
    reading: true,
    sync: false,
    needReadable: true,
    emittedReadable: false,
    readableListening: false,
    resumeScheduled: true,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    destroyed: false,
    defaultEncoding: 'utf8',
    awaitDrainWriters: null,
    multiAwaitDrain: false,
    readingMore: false,
    decoder: null,
    encoding: null,
    [Symbol(kPaused)]: false
  },
  readable: true,
  _events: [Object: null prototype] {
    end: [ [Function: onReadableStreamEnd], [Function: bound socketOnEnd] ],
    timeout: [Function: socketOnTimeout],
    data: [Function: bound socketOnData],
    error: [Function: socketOnError],
    close: [Function: bound socketOnClose],
    drain: [Function: bound socketOnDrain],
    resume: [Function: onSocketResume],
    pause: [Function: onSocketPause]
  },
  _eventsCount: 8,
  _maxListeners: undefined,
  _writableState: WritableState {
    objectMode: false,
    highWaterMark: 16384,
    finalCalled: false,
    needDrain: false,
    ending: false,
    ended: false,
    finished: false,
    destroyed: false,
    decodeStrings: false,
    defaultEncoding: 'utf8',
    length: 0,
    writing: false,
    corked: 0,
    sync: true,
    bufferProcessing: false,
    onwrite: [Function: bound onwrite],
    writecb: null,
    writelen: 0,
    afterWriteTickInfo: null,
    bufferedRequest: null,
    lastBufferedRequest: null,
    pendingcb: 0,
    prefinished: false,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    errored: false,
    bufferedRequestCount: 0,
    corkedRequestsFree: {
      next: null,
      entry: null,
      finish: [Function: bound onCorkedFinish]
    }
  },
  writable: true,
  allowHalfOpen: true,
  _sockname: null,
  _pendingData: null,
  _pendingEncoding: '',
  server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 1,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  _server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 1,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  parser: HTTPParser {
    '0': [Function: parserOnHeaders],
    '1': [Function: parserOnHeadersComplete],
    '2': [Function: parserOnBody],
    '3': [Function: parserOnMessageComplete],
    '4': [Function: bound onParserExecute],
    _headers: [],
    _url: '',
    socket: [Circular *2],
    incoming: null,
    outgoing: null,
    maxHeaderPairs: 2000,
    _consumed: true,
    onIncoming: [Function: bound parserOnIncoming],
    parsingHeadersStart: 1585724195488
  },
  on: [Function: socketListenerWrap],
  addListener: [Function: socketListenerWrap],
  prependListener: [Function: socketListenerWrap],
  _paused: false,
  [Symbol(asyncId)]: 221,
  [Symbol(kHandle)]: TCP {
    reading: true,
    onconnection: null,
    _consumed: true,
    [Symbol(owner)]: [Circular *2]
  },
  [Symbol(kSetNoDelay)]: false,
  [Symbol(lastWriteQueueSize)]: 0,
  [Symbol(timeout)]: null,
  [Symbol(kBuffer)]: null,
  [Symbol(kBufferCb)]: null,
  [Symbol(kBufferGen)]: null,
  [Symbol(kCapture)]: false,
  [Symbol(kBytesRead)]: 0,
  [Symbol(kBytesWritten)]: 0
}

====Tue Mar 31 2020 23:56:35 ====
GET /accounts

====Tue Mar 31 2020 23:56:35 ====
RESPONSE [object Object],[object Object],[object Object],[object Object],[object Object]

====Tue Mar 31 2020 23:56:35 ====
RESPONSE [{"id":1,"username":"ProRobinHoodTr1","password":"Impossible123!!2","email":"jaledarely","phone":"9165178775","followers":786,"type":"promoImage","following":4998,"owner":1},{"id":2,"username":"StockJesus","password":"Impossible123","email":"robbrandon02","phone":"9165178775","followers":1262,"type":"promoText","following":5001,"owner":1},{"id":3,"username":"joo11244620","password":"Impossible123!!!","email":"abrahaminiguez06@gmail.com","phone":"9165178775","followers":660,"type":null,"following":5000,"owner":1},{"id":5,"username":"MarkZion19","password":"Impossible123!!","email":"teresainiguez12345","phone":"9165178775","followers":0,"type":null,"following":0,"owner":1},{"id":6,"username":"johnson_maximum","password":"Impossible123!","email":null,"phone":"9165178775","followers":160,"type":null,"following":1289,"owner":1}]

====Tue Mar 31 2020 23:57:53 ====
<ref *2> Socket {
  connecting: false,
  _hadError: false,
  _parent: null,
  _host: null,
  _readableState: ReadableState {
    objectMode: false,
    highWaterMark: 16384,
    buffer: BufferList { head: null, tail: null, length: 0 },
    length: 0,
    pipes: [],
    flowing: true,
    ended: false,
    endEmitted: false,
    reading: true,
    sync: false,
    needReadable: true,
    emittedReadable: false,
    readableListening: false,
    resumeScheduled: true,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    destroyed: false,
    defaultEncoding: 'utf8',
    awaitDrainWriters: null,
    multiAwaitDrain: false,
    readingMore: false,
    decoder: null,
    encoding: null,
    [Symbol(kPaused)]: false
  },
  readable: true,
  _events: [Object: null prototype] {
    end: [ [Function: onReadableStreamEnd], [Function: bound socketOnEnd] ],
    timeout: [Function: socketOnTimeout],
    data: [Function: bound socketOnData],
    error: [Function: socketOnError],
    close: [Function: bound socketOnClose],
    drain: [Function: bound socketOnDrain],
    resume: [Function: onSocketResume],
    pause: [Function: onSocketPause]
  },
  _eventsCount: 8,
  _maxListeners: undefined,
  _writableState: WritableState {
    objectMode: false,
    highWaterMark: 16384,
    finalCalled: false,
    needDrain: false,
    ending: false,
    ended: false,
    finished: false,
    destroyed: false,
    decodeStrings: false,
    defaultEncoding: 'utf8',
    length: 0,
    writing: false,
    corked: 0,
    sync: true,
    bufferProcessing: false,
    onwrite: [Function: bound onwrite],
    writecb: null,
    writelen: 0,
    afterWriteTickInfo: null,
    bufferedRequest: null,
    lastBufferedRequest: null,
    pendingcb: 0,
    prefinished: false,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    errored: false,
    bufferedRequestCount: 0,
    corkedRequestsFree: {
      next: null,
      entry: null,
      finish: [Function: bound onCorkedFinish]
    }
  },
  writable: true,
  allowHalfOpen: true,
  _sockname: null,
  _pendingData: null,
  _pendingEncoding: '',
  server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 1,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  _server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 1,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  parser: HTTPParser {
    '0': [Function: parserOnHeaders],
    '1': [Function: parserOnHeadersComplete],
    '2': [Function: parserOnBody],
    '3': [Function: parserOnMessageComplete],
    '4': [Function: bound onParserExecute],
    _headers: [],
    _url: '',
    socket: [Circular *2],
    incoming: null,
    outgoing: null,
    maxHeaderPairs: 2000,
    _consumed: true,
    onIncoming: [Function: bound parserOnIncoming],
    parsingHeadersStart: 1585724273625
  },
  on: [Function: socketListenerWrap],
  addListener: [Function: socketListenerWrap],
  prependListener: [Function: socketListenerWrap],
  _paused: false,
  [Symbol(asyncId)]: 263,
  [Symbol(kHandle)]: TCP {
    reading: true,
    onconnection: null,
    _consumed: true,
    [Symbol(owner)]: [Circular *2]
  },
  [Symbol(kSetNoDelay)]: false,
  [Symbol(lastWriteQueueSize)]: 0,
  [Symbol(timeout)]: null,
  [Symbol(kBuffer)]: null,
  [Symbol(kBufferCb)]: null,
  [Symbol(kBufferGen)]: null,
  [Symbol(kCapture)]: false,
  [Symbol(kBytesRead)]: 0,
  [Symbol(kBytesWritten)]: 0
}

====Tue Mar 31 2020 23:57:53 ====
GET /accounts

====Tue Mar 31 2020 23:57:53 ====
RESPONSE [object Object],[object Object],[object Object],[object Object],[object Object]

====Tue Mar 31 2020 23:57:53 ====
RESPONSE [{"id":1,"username":"ProRobinHoodTr1","password":"Impossible123!!2","email":"jaledarely","phone":"9165178775","followers":786,"type":"promoImage","following":4998,"owner":1},{"id":2,"username":"StockJesus","password":"Impossible123","email":"robbrandon02","phone":"9165178775","followers":1262,"type":"promoText","following":5001,"owner":1},{"id":3,"username":"joo11244620","password":"Impossible123!!!","email":"abrahaminiguez06@gmail.com","phone":"9165178775","followers":660,"type":null,"following":5000,"owner":1},{"id":5,"username":"MarkZion19","password":"Impossible123!!","email":"teresainiguez12345","phone":"9165178775","followers":0,"type":null,"following":0,"owner":1},{"id":6,"username":"johnson_maximum","password":"Impossible123!","email":null,"phone":"9165178775","followers":160,"type":null,"following":1289,"owner":1}]

====Tue Mar 31 2020 23:58:14 ====
<ref *2> Socket {
  connecting: false,
  _hadError: false,
  _parent: null,
  _host: null,
  _readableState: ReadableState {
    objectMode: false,
    highWaterMark: 16384,
    buffer: BufferList { head: null, tail: null, length: 0 },
    length: 0,
    pipes: [],
    flowing: true,
    ended: false,
    endEmitted: false,
    reading: true,
    sync: false,
    needReadable: true,
    emittedReadable: false,
    readableListening: false,
    resumeScheduled: true,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    destroyed: false,
    defaultEncoding: 'utf8',
    awaitDrainWriters: null,
    multiAwaitDrain: false,
    readingMore: false,
    decoder: null,
    encoding: null,
    [Symbol(kPaused)]: false
  },
  readable: true,
  _events: [Object: null prototype] {
    end: [ [Function: onReadableStreamEnd], [Function: bound socketOnEnd] ],
    timeout: [Function: socketOnTimeout],
    data: [Function: bound socketOnData],
    error: [Function: socketOnError],
    close: [Function: bound socketOnClose],
    drain: [Function: bound socketOnDrain],
    resume: [Function: onSocketResume],
    pause: [Function: onSocketPause]
  },
  _eventsCount: 8,
  _maxListeners: undefined,
  _writableState: WritableState {
    objectMode: false,
    highWaterMark: 16384,
    finalCalled: false,
    needDrain: false,
    ending: false,
    ended: false,
    finished: false,
    destroyed: false,
    decodeStrings: false,
    defaultEncoding: 'utf8',
    length: 0,
    writing: false,
    corked: 0,
    sync: true,
    bufferProcessing: false,
    onwrite: [Function: bound onwrite],
    writecb: null,
    writelen: 0,
    afterWriteTickInfo: null,
    bufferedRequest: null,
    lastBufferedRequest: null,
    pendingcb: 0,
    prefinished: false,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    errored: false,
    bufferedRequestCount: 0,
    corkedRequestsFree: {
      next: null,
      entry: null,
      finish: [Function: bound onCorkedFinish]
    }
  },
  writable: true,
  allowHalfOpen: true,
  _sockname: null,
  _pendingData: null,
  _pendingEncoding: '',
  server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 1,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  _server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 1,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  parser: HTTPParser {
    '0': [Function: parserOnHeaders],
    '1': [Function: parserOnHeadersComplete],
    '2': [Function: parserOnBody],
    '3': [Function: parserOnMessageComplete],
    '4': [Function: bound onParserExecute],
    _headers: [],
    _url: '',
    socket: [Circular *2],
    incoming: null,
    outgoing: null,
    maxHeaderPairs: 2000,
    _consumed: true,
    onIncoming: [Function: bound parserOnIncoming],
    parsingHeadersStart: 1585724294191
  },
  on: [Function: socketListenerWrap],
  addListener: [Function: socketListenerWrap],
  prependListener: [Function: socketListenerWrap],
  _paused: false,
  [Symbol(asyncId)]: 305,
  [Symbol(kHandle)]: TCP {
    reading: true,
    onconnection: null,
    _consumed: true,
    [Symbol(owner)]: [Circular *2]
  },
  [Symbol(kSetNoDelay)]: false,
  [Symbol(lastWriteQueueSize)]: 0,
  [Symbol(timeout)]: null,
  [Symbol(kBuffer)]: null,
  [Symbol(kBufferCb)]: null,
  [Symbol(kBufferGen)]: null,
  [Symbol(kCapture)]: false,
  [Symbol(kBytesRead)]: 0,
  [Symbol(kBytesWritten)]: 0
}

====Tue Mar 31 2020 23:58:14 ====
GET /accounts

====Tue Mar 31 2020 23:58:14 ====
RESPONSE [object Object],[object Object],[object Object],[object Object],[object Object]

====Tue Mar 31 2020 23:58:14 ====
RESPONSE [{"id":1,"username":"ProRobinHoodTr1","password":"Impossible123!!2","email":"jaledarely","phone":"9165178775","followers":786,"type":"promoImage","following":4998,"owner":1},{"id":2,"username":"StockJesus","password":"Impossible123","email":"robbrandon02","phone":"9165178775","followers":1262,"type":"promoText","following":5001,"owner":1},{"id":3,"username":"joo11244620","password":"Impossible123!!!","email":"abrahaminiguez06@gmail.com","phone":"9165178775","followers":660,"type":null,"following":5000,"owner":1},{"id":5,"username":"MarkZion19","password":"Impossible123!!","email":"teresainiguez12345","phone":"9165178775","followers":0,"type":null,"following":0,"owner":1},{"id":6,"username":"johnson_maximum","password":"Impossible123!","email":null,"phone":"9165178775","followers":160,"type":null,"following":1289,"owner":1}]

====Tue Mar 31 2020 23:58:29 ====
<ref *2> Socket {
  connecting: false,
  _hadError: false,
  _parent: null,
  _host: null,
  _readableState: ReadableState {
    objectMode: false,
    highWaterMark: 16384,
    buffer: BufferList { head: null, tail: null, length: 0 },
    length: 0,
    pipes: [],
    flowing: true,
    ended: false,
    endEmitted: false,
    reading: true,
    sync: false,
    needReadable: true,
    emittedReadable: false,
    readableListening: false,
    resumeScheduled: true,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    destroyed: false,
    defaultEncoding: 'utf8',
    awaitDrainWriters: null,
    multiAwaitDrain: false,
    readingMore: false,
    decoder: null,
    encoding: null,
    [Symbol(kPaused)]: false
  },
  readable: true,
  _events: [Object: null prototype] {
    end: [ [Function: onReadableStreamEnd], [Function: bound socketOnEnd] ],
    timeout: [Function: socketOnTimeout],
    data: [Function: bound socketOnData],
    error: [Function: socketOnError],
    close: [Function: bound socketOnClose],
    drain: [Function: bound socketOnDrain],
    resume: [Function: onSocketResume],
    pause: [Function: onSocketPause]
  },
  _eventsCount: 8,
  _maxListeners: undefined,
  _writableState: WritableState {
    objectMode: false,
    highWaterMark: 16384,
    finalCalled: false,
    needDrain: false,
    ending: false,
    ended: false,
    finished: false,
    destroyed: false,
    decodeStrings: false,
    defaultEncoding: 'utf8',
    length: 0,
    writing: false,
    corked: 0,
    sync: true,
    bufferProcessing: false,
    onwrite: [Function: bound onwrite],
    writecb: null,
    writelen: 0,
    afterWriteTickInfo: null,
    bufferedRequest: null,
    lastBufferedRequest: null,
    pendingcb: 0,
    prefinished: false,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    errored: false,
    bufferedRequestCount: 0,
    corkedRequestsFree: {
      next: null,
      entry: null,
      finish: [Function: bound onCorkedFinish]
    }
  },
  writable: true,
  allowHalfOpen: true,
  _sockname: null,
  _pendingData: null,
  _pendingEncoding: '',
  server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 1,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  _server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 1,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  parser: HTTPParser {
    '0': [Function: parserOnHeaders],
    '1': [Function: parserOnHeadersComplete],
    '2': [Function: parserOnBody],
    '3': [Function: parserOnMessageComplete],
    '4': [Function: bound onParserExecute],
    _headers: [],
    _url: '',
    socket: [Circular *2],
    incoming: null,
    outgoing: null,
    maxHeaderPairs: 2000,
    _consumed: true,
    onIncoming: [Function: bound parserOnIncoming],
    parsingHeadersStart: 1585724309245
  },
  on: [Function: socketListenerWrap],
  addListener: [Function: socketListenerWrap],
  prependListener: [Function: socketListenerWrap],
  _paused: false,
  [Symbol(asyncId)]: 347,
  [Symbol(kHandle)]: TCP {
    reading: true,
    onconnection: null,
    _consumed: true,
    [Symbol(owner)]: [Circular *2]
  },
  [Symbol(kSetNoDelay)]: false,
  [Symbol(lastWriteQueueSize)]: 0,
  [Symbol(timeout)]: null,
  [Symbol(kBuffer)]: null,
  [Symbol(kBufferCb)]: null,
  [Symbol(kBufferGen)]: null,
  [Symbol(kCapture)]: false,
  [Symbol(kBytesRead)]: 0,
  [Symbol(kBytesWritten)]: 0
}

====Tue Mar 31 2020 23:58:29 ====
GET /accounts

====Tue Mar 31 2020 23:58:29 ====
RESPONSE [object Object],[object Object],[object Object],[object Object],[object Object]

====Tue Mar 31 2020 23:58:29 ====
RESPONSE [{"id":1,"username":"ProRobinHoodTr1","password":"Impossible123!!2","email":"jaledarely","phone":"9165178775","followers":786,"type":"promoImage","following":4998,"owner":1},{"id":2,"username":"StockJesus","password":"Impossible123","email":"robbrandon02","phone":"9165178775","followers":1262,"type":"promoText","following":5001,"owner":1},{"id":3,"username":"joo11244620","password":"Impossible123!!!","email":"abrahaminiguez06@gmail.com","phone":"9165178775","followers":660,"type":null,"following":5000,"owner":1},{"id":5,"username":"MarkZion19","password":"Impossible123!!","email":"teresainiguez12345","phone":"9165178775","followers":0,"type":null,"following":0,"owner":1},{"id":6,"username":"johnson_maximum","password":"Impossible123!","email":null,"phone":"9165178775","followers":160,"type":null,"following":1289,"owner":1}]

====Tue Mar 31 2020 23:59:59 ====
<ref *2> Socket {
  connecting: false,
  _hadError: false,
  _parent: null,
  _host: null,
  _readableState: ReadableState {
    objectMode: false,
    highWaterMark: 16384,
    buffer: BufferList { head: null, tail: null, length: 0 },
    length: 0,
    pipes: [],
    flowing: true,
    ended: false,
    endEmitted: false,
    reading: true,
    sync: false,
    needReadable: true,
    emittedReadable: false,
    readableListening: false,
    resumeScheduled: true,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    destroyed: false,
    defaultEncoding: 'utf8',
    awaitDrainWriters: null,
    multiAwaitDrain: false,
    readingMore: false,
    decoder: null,
    encoding: null,
    [Symbol(kPaused)]: false
  },
  readable: true,
  _events: [Object: null prototype] {
    end: [ [Function: onReadableStreamEnd], [Function: bound socketOnEnd] ],
    timeout: [Function: socketOnTimeout],
    data: [Function: bound socketOnData],
    error: [Function: socketOnError],
    close: [Function: bound socketOnClose],
    drain: [Function: bound socketOnDrain],
    resume: [Function: onSocketResume],
    pause: [Function: onSocketPause]
  },
  _eventsCount: 8,
  _maxListeners: undefined,
  _writableState: WritableState {
    objectMode: false,
    highWaterMark: 16384,
    finalCalled: false,
    needDrain: false,
    ending: false,
    ended: false,
    finished: false,
    destroyed: false,
    decodeStrings: false,
    defaultEncoding: 'utf8',
    length: 0,
    writing: false,
    corked: 0,
    sync: true,
    bufferProcessing: false,
    onwrite: [Function: bound onwrite],
    writecb: null,
    writelen: 0,
    afterWriteTickInfo: null,
    bufferedRequest: null,
    lastBufferedRequest: null,
    pendingcb: 0,
    prefinished: false,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    errored: false,
    bufferedRequestCount: 0,
    corkedRequestsFree: {
      next: null,
      entry: null,
      finish: [Function: bound onCorkedFinish]
    }
  },
  writable: true,
  allowHalfOpen: true,
  _sockname: null,
  _pendingData: null,
  _pendingEncoding: '',
  server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 1,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  _server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 1,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  parser: HTTPParser {
    '0': [Function: parserOnHeaders],
    '1': [Function: parserOnHeadersComplete],
    '2': [Function: parserOnBody],
    '3': [Function: parserOnMessageComplete],
    '4': [Function: bound onParserExecute],
    _headers: [],
    _url: '',
    socket: [Circular *2],
    incoming: null,
    outgoing: null,
    maxHeaderPairs: 2000,
    _consumed: true,
    onIncoming: [Function: bound parserOnIncoming],
    parsingHeadersStart: 1585724399283
  },
  on: [Function: socketListenerWrap],
  addListener: [Function: socketListenerWrap],
  prependListener: [Function: socketListenerWrap],
  _paused: false,
  [Symbol(asyncId)]: 389,
  [Symbol(kHandle)]: TCP {
    reading: true,
    onconnection: null,
    _consumed: true,
    [Symbol(owner)]: [Circular *2]
  },
  [Symbol(kSetNoDelay)]: false,
  [Symbol(lastWriteQueueSize)]: 0,
  [Symbol(timeout)]: null,
  [Symbol(kBuffer)]: null,
  [Symbol(kBufferCb)]: null,
  [Symbol(kBufferGen)]: null,
  [Symbol(kCapture)]: false,
  [Symbol(kBytesRead)]: 0,
  [Symbol(kBytesWritten)]: 0
}

====Tue Mar 31 2020 23:59:59 ====
GET /accounts

====Tue Mar 31 2020 23:59:59 ====
RESPONSE [object Object],[object Object],[object Object],[object Object],[object Object]

====Tue Mar 31 2020 23:59:59 ====
RESPONSE [{"id":1,"username":"ProRobinHoodTr1","password":"Impossible123!!2","email":"jaledarely","phone":"9165178775","followers":786,"type":"promoImage","following":4998,"owner":1},{"id":2,"username":"StockJesus","password":"Impossible123","email":"robbrandon02","phone":"9165178775","followers":1262,"type":"promoText","following":5001,"owner":1},{"id":3,"username":"joo11244620","password":"Impossible123!!!","email":"abrahaminiguez06@gmail.com","phone":"9165178775","followers":660,"type":null,"following":5000,"owner":1},{"id":5,"username":"MarkZion19","password":"Impossible123!!","email":"teresainiguez12345","phone":"9165178775","followers":0,"type":null,"following":0,"owner":1},{"id":6,"username":"johnson_maximum","password":"Impossible123!","email":null,"phone":"9165178775","followers":160,"type":null,"following":1289,"owner":1}]

====Wed Apr 01 2020 00:14:15 ====
<ref *2> Socket {
  connecting: false,
  _hadError: false,
  _parent: null,
  _host: null,
  _readableState: ReadableState {
    objectMode: false,
    highWaterMark: 16384,
    buffer: BufferList { head: null, tail: null, length: 0 },
    length: 0,
    pipes: [],
    flowing: true,
    ended: false,
    endEmitted: false,
    reading: true,
    sync: false,
    needReadable: true,
    emittedReadable: false,
    readableListening: false,
    resumeScheduled: true,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    destroyed: false,
    defaultEncoding: 'utf8',
    awaitDrainWriters: null,
    multiAwaitDrain: false,
    readingMore: false,
    decoder: null,
    encoding: null,
    [Symbol(kPaused)]: false
  },
  readable: true,
  _events: [Object: null prototype] {
    end: [ [Function: onReadableStreamEnd], [Function: bound socketOnEnd] ],
    timeout: [Function: socketOnTimeout],
    data: [Function: bound socketOnData],
    error: [Function: socketOnError],
    close: [Function: bound socketOnClose],
    drain: [Function: bound socketOnDrain],
    resume: [Function: onSocketResume],
    pause: [Function: onSocketPause]
  },
  _eventsCount: 8,
  _maxListeners: undefined,
  _writableState: WritableState {
    objectMode: false,
    highWaterMark: 16384,
    finalCalled: false,
    needDrain: false,
    ending: false,
    ended: false,
    finished: false,
    destroyed: false,
    decodeStrings: false,
    defaultEncoding: 'utf8',
    length: 0,
    writing: false,
    corked: 0,
    sync: true,
    bufferProcessing: false,
    onwrite: [Function: bound onwrite],
    writecb: null,
    writelen: 0,
    afterWriteTickInfo: null,
    bufferedRequest: null,
    lastBufferedRequest: null,
    pendingcb: 0,
    prefinished: false,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    errored: false,
    bufferedRequestCount: 0,
    corkedRequestsFree: {
      next: null,
      entry: null,
      finish: [Function: bound onCorkedFinish]
    }
  },
  writable: true,
  allowHalfOpen: true,
  _sockname: null,
  _pendingData: null,
  _pendingEncoding: '',
  server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 1,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  _server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 1,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  parser: HTTPParser {
    '0': [Function: parserOnHeaders],
    '1': [Function: parserOnHeadersComplete],
    '2': [Function: parserOnBody],
    '3': [Function: parserOnMessageComplete],
    '4': [Function: bound onParserExecute],
    _headers: [],
    _url: '',
    socket: [Circular *2],
    incoming: null,
    outgoing: null,
    maxHeaderPairs: 2000,
    _consumed: true,
    onIncoming: [Function: bound parserOnIncoming],
    parsingHeadersStart: 1585725255129
  },
  on: [Function: socketListenerWrap],
  addListener: [Function: socketListenerWrap],
  prependListener: [Function: socketListenerWrap],
  _paused: false,
  [Symbol(asyncId)]: 431,
  [Symbol(kHandle)]: TCP {
    reading: true,
    onconnection: null,
    _consumed: true,
    [Symbol(owner)]: [Circular *2]
  },
  [Symbol(kSetNoDelay)]: false,
  [Symbol(lastWriteQueueSize)]: 0,
  [Symbol(timeout)]: null,
  [Symbol(kBuffer)]: null,
  [Symbol(kBufferCb)]: null,
  [Symbol(kBufferGen)]: null,
  [Symbol(kCapture)]: false,
  [Symbol(kBytesRead)]: 0,
  [Symbol(kBytesWritten)]: 0
}

====Wed Apr 01 2020 00:14:15 ====
GET /accounts

====Wed Apr 01 2020 00:14:15 ====
RESPONSE [object Object],[object Object],[object Object],[object Object],[object Object]

====Wed Apr 01 2020 00:14:15 ====
RESPONSE [{"id":1,"username":"ProRobinHoodTr1","password":"Impossible123!!2","email":"jaledarely","phone":"9165178775","followers":786,"type":"promoImage","following":4998,"owner":1},{"id":2,"username":"StockJesus","password":"Impossible123","email":"robbrandon02","phone":"9165178775","followers":1262,"type":"promoText","following":5001,"owner":1},{"id":3,"username":"joo11244620","password":"Impossible123!!!","email":"abrahaminiguez06@gmail.com","phone":"9165178775","followers":660,"type":null,"following":5000,"owner":1},{"id":5,"username":"MarkZion19","password":"Impossible123!!","email":"teresainiguez12345","phone":"9165178775","followers":0,"type":null,"following":0,"owner":1},{"id":6,"username":"johnson_maximum","password":"Impossible123!","email":null,"phone":"9165178775","followers":160,"type":null,"following":1289,"owner":1}]

====Wed Apr 01 2020 00:17:06 ====
<ref *2> Socket {
  connecting: false,
  _hadError: false,
  _parent: null,
  _host: null,
  _readableState: ReadableState {
    objectMode: false,
    highWaterMark: 16384,
    buffer: BufferList { head: null, tail: null, length: 0 },
    length: 0,
    pipes: [],
    flowing: true,
    ended: false,
    endEmitted: false,
    reading: true,
    sync: false,
    needReadable: true,
    emittedReadable: false,
    readableListening: false,
    resumeScheduled: true,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    destroyed: false,
    defaultEncoding: 'utf8',
    awaitDrainWriters: null,
    multiAwaitDrain: false,
    readingMore: false,
    decoder: null,
    encoding: null,
    [Symbol(kPaused)]: false
  },
  readable: true,
  _events: [Object: null prototype] {
    end: [ [Function: onReadableStreamEnd], [Function: bound socketOnEnd] ],
    timeout: [Function: socketOnTimeout],
    data: [Function: bound socketOnData],
    error: [Function: socketOnError],
    close: [Function: bound socketOnClose],
    drain: [Function: bound socketOnDrain],
    resume: [Function: onSocketResume],
    pause: [Function: onSocketPause]
  },
  _eventsCount: 8,
  _maxListeners: undefined,
  _writableState: WritableState {
    objectMode: false,
    highWaterMark: 16384,
    finalCalled: false,
    needDrain: false,
    ending: false,
    ended: false,
    finished: false,
    destroyed: false,
    decodeStrings: false,
    defaultEncoding: 'utf8',
    length: 0,
    writing: false,
    corked: 0,
    sync: true,
    bufferProcessing: false,
    onwrite: [Function: bound onwrite],
    writecb: null,
    writelen: 0,
    afterWriteTickInfo: null,
    bufferedRequest: null,
    lastBufferedRequest: null,
    pendingcb: 0,
    prefinished: false,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    errored: false,
    bufferedRequestCount: 0,
    corkedRequestsFree: {
      next: null,
      entry: null,
      finish: [Function: bound onCorkedFinish]
    }
  },
  writable: true,
  allowHalfOpen: true,
  _sockname: null,
  _pendingData: null,
  _pendingEncoding: '',
  server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 1,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  _server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 1,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  parser: HTTPParser {
    '0': [Function: parserOnHeaders],
    '1': [Function: parserOnHeadersComplete],
    '2': [Function: parserOnBody],
    '3': [Function: parserOnMessageComplete],
    '4': [Function: bound onParserExecute],
    _headers: [],
    _url: '',
    socket: [Circular *2],
    incoming: null,
    outgoing: null,
    maxHeaderPairs: 2000,
    _consumed: true,
    onIncoming: [Function: bound parserOnIncoming],
    parsingHeadersStart: 1585725426329
  },
  on: [Function: socketListenerWrap],
  addListener: [Function: socketListenerWrap],
  prependListener: [Function: socketListenerWrap],
  _paused: false,
  [Symbol(asyncId)]: 473,
  [Symbol(kHandle)]: TCP {
    reading: true,
    onconnection: null,
    _consumed: true,
    [Symbol(owner)]: [Circular *2]
  },
  [Symbol(kSetNoDelay)]: false,
  [Symbol(lastWriteQueueSize)]: 0,
  [Symbol(timeout)]: null,
  [Symbol(kBuffer)]: null,
  [Symbol(kBufferCb)]: null,
  [Symbol(kBufferGen)]: null,
  [Symbol(kCapture)]: false,
  [Symbol(kBytesRead)]: 0,
  [Symbol(kBytesWritten)]: 0
}

====Wed Apr 01 2020 00:17:06 ====
GET /accounts

====Wed Apr 01 2020 00:17:06 ====
RESPONSE [object Object],[object Object],[object Object],[object Object],[object Object]

====Wed Apr 01 2020 00:17:06 ====
RESPONSE [{"id":1,"username":"ProRobinHoodTr1","password":"Impossible123!!2","email":"jaledarely","phone":"9165178775","followers":786,"type":"promoImage","following":4998,"owner":1},{"id":2,"username":"StockJesus","password":"Impossible123","email":"robbrandon02","phone":"9165178775","followers":1262,"type":"promoText","following":5001,"owner":1},{"id":3,"username":"joo11244620","password":"Impossible123!!!","email":"abrahaminiguez06@gmail.com","phone":"9165178775","followers":660,"type":null,"following":5000,"owner":1},{"id":5,"username":"MarkZion19","password":"Impossible123!!","email":"teresainiguez12345","phone":"9165178775","followers":0,"type":null,"following":0,"owner":1},{"id":6,"username":"johnson_maximum","password":"Impossible123!","email":null,"phone":"9165178775","followers":160,"type":null,"following":1289,"owner":1}]

====Wed Apr 01 2020 00:17:51 ====
<ref *2> Socket {
  connecting: false,
  _hadError: false,
  _parent: null,
  _host: null,
  _readableState: ReadableState {
    objectMode: false,
    highWaterMark: 16384,
    buffer: BufferList { head: null, tail: null, length: 0 },
    length: 0,
    pipes: [],
    flowing: true,
    ended: false,
    endEmitted: false,
    reading: true,
    sync: false,
    needReadable: true,
    emittedReadable: false,
    readableListening: false,
    resumeScheduled: true,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    destroyed: false,
    defaultEncoding: 'utf8',
    awaitDrainWriters: null,
    multiAwaitDrain: false,
    readingMore: false,
    decoder: null,
    encoding: null,
    [Symbol(kPaused)]: false
  },
  readable: true,
  _events: [Object: null prototype] {
    end: [ [Function: onReadableStreamEnd], [Function: bound socketOnEnd] ],
    timeout: [Function: socketOnTimeout],
    data: [Function: bound socketOnData],
    error: [Function: socketOnError],
    close: [Function: bound socketOnClose],
    drain: [Function: bound socketOnDrain],
    resume: [Function: onSocketResume],
    pause: [Function: onSocketPause]
  },
  _eventsCount: 8,
  _maxListeners: undefined,
  _writableState: WritableState {
    objectMode: false,
    highWaterMark: 16384,
    finalCalled: false,
    needDrain: false,
    ending: false,
    ended: false,
    finished: false,
    destroyed: false,
    decodeStrings: false,
    defaultEncoding: 'utf8',
    length: 0,
    writing: false,
    corked: 0,
    sync: true,
    bufferProcessing: false,
    onwrite: [Function: bound onwrite],
    writecb: null,
    writelen: 0,
    afterWriteTickInfo: null,
    bufferedRequest: null,
    lastBufferedRequest: null,
    pendingcb: 0,
    prefinished: false,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    errored: false,
    bufferedRequestCount: 0,
    corkedRequestsFree: {
      next: null,
      entry: null,
      finish: [Function: bound onCorkedFinish]
    }
  },
  writable: true,
  allowHalfOpen: true,
  _sockname: null,
  _pendingData: null,
  _pendingEncoding: '',
  server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 1,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  _server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 1,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  parser: HTTPParser {
    '0': [Function: parserOnHeaders],
    '1': [Function: parserOnHeadersComplete],
    '2': [Function: parserOnBody],
    '3': [Function: parserOnMessageComplete],
    '4': [Function: bound onParserExecute],
    _headers: [],
    _url: '',
    socket: [Circular *2],
    incoming: null,
    outgoing: null,
    maxHeaderPairs: 2000,
    _consumed: true,
    onIncoming: [Function: bound parserOnIncoming],
    parsingHeadersStart: 1585725471144
  },
  on: [Function: socketListenerWrap],
  addListener: [Function: socketListenerWrap],
  prependListener: [Function: socketListenerWrap],
  _paused: false,
  [Symbol(asyncId)]: 515,
  [Symbol(kHandle)]: TCP {
    reading: true,
    onconnection: null,
    _consumed: true,
    [Symbol(owner)]: [Circular *2]
  },
  [Symbol(kSetNoDelay)]: false,
  [Symbol(lastWriteQueueSize)]: 0,
  [Symbol(timeout)]: null,
  [Symbol(kBuffer)]: null,
  [Symbol(kBufferCb)]: null,
  [Symbol(kBufferGen)]: null,
  [Symbol(kCapture)]: false,
  [Symbol(kBytesRead)]: 0,
  [Symbol(kBytesWritten)]: 0
}

====Wed Apr 01 2020 00:17:51 ====
GET /accounts

====Wed Apr 01 2020 00:17:51 ====
RESPONSE [object Object],[object Object],[object Object],[object Object],[object Object]

====Wed Apr 01 2020 00:17:51 ====
RESPONSE [{"id":1,"username":"ProRobinHoodTr1","password":"Impossible123!!2","email":"jaledarely","phone":"9165178775","followers":786,"type":"promoImage","following":4998,"owner":1},{"id":2,"username":"StockJesus","password":"Impossible123","email":"robbrandon02","phone":"9165178775","followers":1262,"type":"promoText","following":5001,"owner":1},{"id":3,"username":"joo11244620","password":"Impossible123!!!","email":"abrahaminiguez06@gmail.com","phone":"9165178775","followers":660,"type":null,"following":5000,"owner":1},{"id":5,"username":"MarkZion19","password":"Impossible123!!","email":"teresainiguez12345","phone":"9165178775","followers":0,"type":null,"following":0,"owner":1},{"id":6,"username":"johnson_maximum","password":"Impossible123!","email":null,"phone":"9165178775","followers":160,"type":null,"following":1289,"owner":1}]

====Wed Apr 01 2020 00:18:15 ====
<ref *2> Socket {
  connecting: false,
  _hadError: false,
  _parent: null,
  _host: null,
  _readableState: ReadableState {
    objectMode: false,
    highWaterMark: 16384,
    buffer: BufferList { head: null, tail: null, length: 0 },
    length: 0,
    pipes: [],
    flowing: true,
    ended: false,
    endEmitted: false,
    reading: true,
    sync: false,
    needReadable: true,
    emittedReadable: false,
    readableListening: false,
    resumeScheduled: true,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    destroyed: false,
    defaultEncoding: 'utf8',
    awaitDrainWriters: null,
    multiAwaitDrain: false,
    readingMore: false,
    decoder: null,
    encoding: null,
    [Symbol(kPaused)]: false
  },
  readable: true,
  _events: [Object: null prototype] {
    end: [ [Function: onReadableStreamEnd], [Function: bound socketOnEnd] ],
    timeout: [Function: socketOnTimeout],
    data: [Function: bound socketOnData],
    error: [Function: socketOnError],
    close: [Function: bound socketOnClose],
    drain: [Function: bound socketOnDrain],
    resume: [Function: onSocketResume],
    pause: [Function: onSocketPause]
  },
  _eventsCount: 8,
  _maxListeners: undefined,
  _writableState: WritableState {
    objectMode: false,
    highWaterMark: 16384,
    finalCalled: false,
    needDrain: false,
    ending: false,
    ended: false,
    finished: false,
    destroyed: false,
    decodeStrings: false,
    defaultEncoding: 'utf8',
    length: 0,
    writing: false,
    corked: 0,
    sync: true,
    bufferProcessing: false,
    onwrite: [Function: bound onwrite],
    writecb: null,
    writelen: 0,
    afterWriteTickInfo: null,
    bufferedRequest: null,
    lastBufferedRequest: null,
    pendingcb: 0,
    prefinished: false,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    errored: false,
    bufferedRequestCount: 0,
    corkedRequestsFree: {
      next: null,
      entry: null,
      finish: [Function: bound onCorkedFinish]
    }
  },
  writable: true,
  allowHalfOpen: true,
  _sockname: null,
  _pendingData: null,
  _pendingEncoding: '',
  server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 1,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  _server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 1,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  parser: HTTPParser {
    '0': [Function: parserOnHeaders],
    '1': [Function: parserOnHeadersComplete],
    '2': [Function: parserOnBody],
    '3': [Function: parserOnMessageComplete],
    '4': [Function: bound onParserExecute],
    _headers: [],
    _url: '',
    socket: [Circular *2],
    incoming: null,
    outgoing: null,
    maxHeaderPairs: 2000,
    _consumed: true,
    onIncoming: [Function: bound parserOnIncoming],
    parsingHeadersStart: 1585725495085
  },
  on: [Function: socketListenerWrap],
  addListener: [Function: socketListenerWrap],
  prependListener: [Function: socketListenerWrap],
  _paused: false,
  [Symbol(asyncId)]: 557,
  [Symbol(kHandle)]: TCP {
    reading: true,
    onconnection: null,
    _consumed: true,
    [Symbol(owner)]: [Circular *2]
  },
  [Symbol(kSetNoDelay)]: false,
  [Symbol(lastWriteQueueSize)]: 0,
  [Symbol(timeout)]: null,
  [Symbol(kBuffer)]: null,
  [Symbol(kBufferCb)]: null,
  [Symbol(kBufferGen)]: null,
  [Symbol(kCapture)]: false,
  [Symbol(kBytesRead)]: 0,
  [Symbol(kBytesWritten)]: 0
}

====Wed Apr 01 2020 00:18:15 ====
GET /accounts

====Wed Apr 01 2020 00:18:15 ====
RESPONSE [object Object],[object Object],[object Object],[object Object],[object Object]

====Wed Apr 01 2020 00:18:15 ====
RESPONSE [{"id":1,"username":"ProRobinHoodTr1","password":"Impossible123!!2","email":"jaledarely","phone":"9165178775","followers":786,"type":"promoImage","following":4998,"owner":1},{"id":2,"username":"StockJesus","password":"Impossible123","email":"robbrandon02","phone":"9165178775","followers":1262,"type":"promoText","following":5001,"owner":1},{"id":3,"username":"joo11244620","password":"Impossible123!!!","email":"abrahaminiguez06@gmail.com","phone":"9165178775","followers":660,"type":null,"following":5000,"owner":1},{"id":5,"username":"MarkZion19","password":"Impossible123!!","email":"teresainiguez12345","phone":"9165178775","followers":0,"type":null,"following":0,"owner":1},{"id":6,"username":"johnson_maximum","password":"Impossible123!","email":null,"phone":"9165178775","followers":160,"type":null,"following":1289,"owner":1}]

====Wed Apr 01 2020 00:18:50 ====
<ref *2> Socket {
  connecting: false,
  _hadError: false,
  _parent: null,
  _host: null,
  _readableState: ReadableState {
    objectMode: false,
    highWaterMark: 16384,
    buffer: BufferList { head: null, tail: null, length: 0 },
    length: 0,
    pipes: [],
    flowing: true,
    ended: false,
    endEmitted: false,
    reading: true,
    sync: false,
    needReadable: true,
    emittedReadable: false,
    readableListening: false,
    resumeScheduled: true,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    destroyed: false,
    defaultEncoding: 'utf8',
    awaitDrainWriters: null,
    multiAwaitDrain: false,
    readingMore: false,
    decoder: null,
    encoding: null,
    [Symbol(kPaused)]: false
  },
  readable: true,
  _events: [Object: null prototype] {
    end: [ [Function: onReadableStreamEnd], [Function: bound socketOnEnd] ],
    timeout: [Function: socketOnTimeout],
    data: [Function: bound socketOnData],
    error: [Function: socketOnError],
    close: [Function: bound socketOnClose],
    drain: [Function: bound socketOnDrain],
    resume: [Function: onSocketResume],
    pause: [Function: onSocketPause]
  },
  _eventsCount: 8,
  _maxListeners: undefined,
  _writableState: WritableState {
    objectMode: false,
    highWaterMark: 16384,
    finalCalled: false,
    needDrain: false,
    ending: false,
    ended: false,
    finished: false,
    destroyed: false,
    decodeStrings: false,
    defaultEncoding: 'utf8',
    length: 0,
    writing: false,
    corked: 0,
    sync: true,
    bufferProcessing: false,
    onwrite: [Function: bound onwrite],
    writecb: null,
    writelen: 0,
    afterWriteTickInfo: null,
    bufferedRequest: null,
    lastBufferedRequest: null,
    pendingcb: 0,
    prefinished: false,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    errored: false,
    bufferedRequestCount: 0,
    corkedRequestsFree: {
      next: null,
      entry: null,
      finish: [Function: bound onCorkedFinish]
    }
  },
  writable: true,
  allowHalfOpen: true,
  _sockname: null,
  _pendingData: null,
  _pendingEncoding: '',
  server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 1,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  _server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 1,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  parser: HTTPParser {
    '0': [Function: parserOnHeaders],
    '1': [Function: parserOnHeadersComplete],
    '2': [Function: parserOnBody],
    '3': [Function: parserOnMessageComplete],
    '4': [Function: bound onParserExecute],
    _headers: [],
    _url: '',
    socket: [Circular *2],
    incoming: null,
    outgoing: null,
    maxHeaderPairs: 2000,
    _consumed: true,
    onIncoming: [Function: bound parserOnIncoming],
    parsingHeadersStart: 1585725530138
  },
  on: [Function: socketListenerWrap],
  addListener: [Function: socketListenerWrap],
  prependListener: [Function: socketListenerWrap],
  _paused: false,
  [Symbol(asyncId)]: 599,
  [Symbol(kHandle)]: TCP {
    reading: true,
    onconnection: null,
    _consumed: true,
    [Symbol(owner)]: [Circular *2]
  },
  [Symbol(kSetNoDelay)]: false,
  [Symbol(lastWriteQueueSize)]: 0,
  [Symbol(timeout)]: null,
  [Symbol(kBuffer)]: null,
  [Symbol(kBufferCb)]: null,
  [Symbol(kBufferGen)]: null,
  [Symbol(kCapture)]: false,
  [Symbol(kBytesRead)]: 0,
  [Symbol(kBytesWritten)]: 0
}

====Wed Apr 01 2020 00:18:50 ====
GET /accounts

====Wed Apr 01 2020 00:18:50 ====
RESPONSE [object Object],[object Object],[object Object],[object Object],[object Object]

====Wed Apr 01 2020 00:18:50 ====
RESPONSE [{"id":1,"username":"ProRobinHoodTr1","password":"Impossible123!!2","email":"jaledarely","phone":"9165178775","followers":786,"type":"promoImage","following":4998,"owner":1},{"id":2,"username":"StockJesus","password":"Impossible123","email":"robbrandon02","phone":"9165178775","followers":1262,"type":"promoText","following":5001,"owner":1},{"id":3,"username":"joo11244620","password":"Impossible123!!!","email":"abrahaminiguez06@gmail.com","phone":"9165178775","followers":660,"type":null,"following":5000,"owner":1},{"id":5,"username":"MarkZion19","password":"Impossible123!!","email":"teresainiguez12345","phone":"9165178775","followers":0,"type":null,"following":0,"owner":1},{"id":6,"username":"johnson_maximum","password":"Impossible123!","email":null,"phone":"9165178775","followers":160,"type":null,"following":1289,"owner":1}]

====Wed Apr 01 2020 00:20:52 ====
<ref *2> Socket {
  connecting: false,
  _hadError: false,
  _parent: null,
  _host: null,
  _readableState: ReadableState {
    objectMode: false,
    highWaterMark: 16384,
    buffer: BufferList { head: null, tail: null, length: 0 },
    length: 0,
    pipes: [],
    flowing: true,
    ended: false,
    endEmitted: false,
    reading: true,
    sync: false,
    needReadable: true,
    emittedReadable: false,
    readableListening: false,
    resumeScheduled: true,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    destroyed: false,
    defaultEncoding: 'utf8',
    awaitDrainWriters: null,
    multiAwaitDrain: false,
    readingMore: false,
    decoder: null,
    encoding: null,
    [Symbol(kPaused)]: false
  },
  readable: true,
  _events: [Object: null prototype] {
    end: [ [Function: onReadableStreamEnd], [Function: bound socketOnEnd] ],
    timeout: [Function: socketOnTimeout],
    data: [Function: bound socketOnData],
    error: [Function: socketOnError],
    close: [Function: bound socketOnClose],
    drain: [Function: bound socketOnDrain],
    resume: [Function: onSocketResume],
    pause: [Function: onSocketPause]
  },
  _eventsCount: 8,
  _maxListeners: undefined,
  _writableState: WritableState {
    objectMode: false,
    highWaterMark: 16384,
    finalCalled: false,
    needDrain: false,
    ending: false,
    ended: false,
    finished: false,
    destroyed: false,
    decodeStrings: false,
    defaultEncoding: 'utf8',
    length: 0,
    writing: false,
    corked: 0,
    sync: true,
    bufferProcessing: false,
    onwrite: [Function: bound onwrite],
    writecb: null,
    writelen: 0,
    afterWriteTickInfo: null,
    bufferedRequest: null,
    lastBufferedRequest: null,
    pendingcb: 0,
    prefinished: false,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    errored: false,
    bufferedRequestCount: 0,
    corkedRequestsFree: {
      next: null,
      entry: null,
      finish: [Function: bound onCorkedFinish]
    }
  },
  writable: true,
  allowHalfOpen: true,
  _sockname: null,
  _pendingData: null,
  _pendingEncoding: '',
  server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 1,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  _server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 1,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  parser: HTTPParser {
    '0': [Function: parserOnHeaders],
    '1': [Function: parserOnHeadersComplete],
    '2': [Function: parserOnBody],
    '3': [Function: parserOnMessageComplete],
    '4': [Function: bound onParserExecute],
    _headers: [],
    _url: '',
    socket: [Circular *2],
    incoming: null,
    outgoing: null,
    maxHeaderPairs: 2000,
    _consumed: true,
    onIncoming: [Function: bound parserOnIncoming],
    parsingHeadersStart: 1585725652217
  },
  on: [Function: socketListenerWrap],
  addListener: [Function: socketListenerWrap],
  prependListener: [Function: socketListenerWrap],
  _paused: false,
  [Symbol(asyncId)]: 641,
  [Symbol(kHandle)]: TCP {
    reading: true,
    onconnection: null,
    _consumed: true,
    [Symbol(owner)]: [Circular *2]
  },
  [Symbol(kSetNoDelay)]: false,
  [Symbol(lastWriteQueueSize)]: 0,
  [Symbol(timeout)]: null,
  [Symbol(kBuffer)]: null,
  [Symbol(kBufferCb)]: null,
  [Symbol(kBufferGen)]: null,
  [Symbol(kCapture)]: false,
  [Symbol(kBytesRead)]: 0,
  [Symbol(kBytesWritten)]: 0
}

====Wed Apr 01 2020 00:20:52 ====
GET /accounts

====Wed Apr 01 2020 00:20:52 ====
RESPONSE [object Object],[object Object],[object Object],[object Object],[object Object]

====Wed Apr 01 2020 00:20:52 ====
RESPONSE [{"id":1,"username":"ProRobinHoodTr1","password":"Impossible123!!2","email":"jaledarely","phone":"9165178775","followers":786,"type":"promoImage","following":4998,"owner":1},{"id":2,"username":"StockJesus","password":"Impossible123","email":"robbrandon02","phone":"9165178775","followers":1262,"type":"promoText","following":5001,"owner":1},{"id":3,"username":"joo11244620","password":"Impossible123!!!","email":"abrahaminiguez06@gmail.com","phone":"9165178775","followers":660,"type":null,"following":5000,"owner":1},{"id":5,"username":"MarkZion19","password":"Impossible123!!","email":"teresainiguez12345","phone":"9165178775","followers":0,"type":null,"following":0,"owner":1},{"id":6,"username":"johnson_maximum","password":"Impossible123!","email":null,"phone":"9165178775","followers":160,"type":null,"following":1289,"owner":1}]

====Wed Apr 01 2020 01:09:28 ====
<ref *2> Socket {
  connecting: false,
  _hadError: false,
  _parent: null,
  _host: null,
  _readableState: ReadableState {
    objectMode: false,
    highWaterMark: 16384,
    buffer: BufferList { head: null, tail: null, length: 0 },
    length: 0,
    pipes: [],
    flowing: true,
    ended: false,
    endEmitted: false,
    reading: true,
    sync: false,
    needReadable: true,
    emittedReadable: false,
    readableListening: false,
    resumeScheduled: true,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    destroyed: false,
    defaultEncoding: 'utf8',
    awaitDrainWriters: null,
    multiAwaitDrain: false,
    readingMore: false,
    decoder: null,
    encoding: null,
    [Symbol(kPaused)]: false
  },
  readable: true,
  _events: [Object: null prototype] {
    end: [ [Function: onReadableStreamEnd], [Function: bound socketOnEnd] ],
    timeout: [Function: socketOnTimeout],
    data: [Function: bound socketOnData],
    error: [Function: socketOnError],
    close: [Function: bound socketOnClose],
    drain: [Function: bound socketOnDrain],
    resume: [Function: onSocketResume],
    pause: [Function: onSocketPause]
  },
  _eventsCount: 8,
  _maxListeners: undefined,
  _writableState: WritableState {
    objectMode: false,
    highWaterMark: 16384,
    finalCalled: false,
    needDrain: false,
    ending: false,
    ended: false,
    finished: false,
    destroyed: false,
    decodeStrings: false,
    defaultEncoding: 'utf8',
    length: 0,
    writing: false,
    corked: 0,
    sync: true,
    bufferProcessing: false,
    onwrite: [Function: bound onwrite],
    writecb: null,
    writelen: 0,
    afterWriteTickInfo: null,
    bufferedRequest: null,
    lastBufferedRequest: null,
    pendingcb: 0,
    prefinished: false,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    errored: false,
    bufferedRequestCount: 0,
    corkedRequestsFree: {
      next: null,
      entry: null,
      finish: [Function: bound onCorkedFinish]
    }
  },
  writable: true,
  allowHalfOpen: true,
  _sockname: null,
  _pendingData: null,
  _pendingEncoding: '',
  server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 1,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  _server: <ref *1> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      request: [EventEmitter],
      connection: [Array],
      close: [Function (anonymous)],
      error: [Function (anonymous)],
      listening: [Function (anonymous)]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 1,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular *1]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 0,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 60000,
    _connectionKey: '6::::8090',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 6
  },
  parser: HTTPParser {
    '0': [Function: parserOnHeaders],
    '1': [Function: parserOnHeadersComplete],
    '2': [Function: parserOnBody],
    '3': [Function: parserOnMessageComplete],
    '4': [Function: bound onParserExecute],
    _headers: [],
    _url: '',
    socket: [Circular *2],
    incoming: null,
    outgoing: null,
    maxHeaderPairs: 2000,
    _consumed: true,
    onIncoming: [Function: bound parserOnIncoming],
    parsingHeadersStart: 1585728568304
  },
  on: [Function: socketListenerWrap],
  addListener: [Function: socketListenerWrap],
  prependListener: [Function: socketListenerWrap],
  _paused: false,
  [Symbol(asyncId)]: 683,
  [Symbol(kHandle)]: TCP {
    reading: true,
    onconnection: null,
    _consumed: true,
    [Symbol(owner)]: [Circular *2]
  },
  [Symbol(kSetNoDelay)]: false,
  [Symbol(lastWriteQueueSize)]: 0,
  [Symbol(timeout)]: null,
  [Symbol(kBuffer)]: null,
  [Symbol(kBufferCb)]: null,
  [Symbol(kBufferGen)]: null,
  [Symbol(kCapture)]: false,
  [Symbol(kBytesRead)]: 0,
  [Symbol(kBytesWritten)]: 0
}

====Wed Apr 01 2020 01:09:28 ====
GET /accounts

====Wed Apr 01 2020 01:09:28 ====
RESPONSE [object Object],[object Object],[object Object],[object Object],[object Object]

====Wed Apr 01 2020 01:09:28 ====
RESPONSE [{"id":1,"username":"ProRobinHoodTr1","password":"Impossible123!!2","email":"jaledarely","phone":"9165178775","followers":786,"type":"promoImage","following":4998,"owner":1},{"id":2,"username":"StockJesus","password":"Impossible123","email":"robbrandon02","phone":"9165178775","followers":1262,"type":"promoText","following":5001,"owner":1},{"id":3,"username":"joo11244620","password":"Impossible123!!!","email":"abrahaminiguez06@gmail.com","phone":"9165178775","followers":660,"type":null,"following":5000,"owner":1},{"id":5,"username":"MarkZion19","password":"Impossible123!!","email":"teresainiguez12345","phone":"9165178775","followers":0,"type":null,"following":0,"owner":1},{"id":6,"username":"johnson_maximum","password":"Impossible123!","email":null,"phone":"9165178775","followers":160,"type":null,"following":1289,"owner":1}]

====Wed Apr 01 2020 09:57:17 ====
undefined

====Wed Apr 01 2020 09:57:31 ====
Socket {
  connecting: false,
  _hadError: false,
  _handle:
   TCP {
     reading: true,
     onread: [Function: onStreamRead],
     onconnection: null,
     _consumed: true,
     [Symbol(owner)]: [Circular] },
  _parent: null,
  _host: null,
  _readableState:
   ReadableState {
     objectMode: false,
     highWaterMark: 16384,
     buffer: BufferList { head: null, tail: null, length: 0 },
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: true,
     ended: false,
     endEmitted: false,
     reading: true,
     sync: false,
     needReadable: true,
     emittedReadable: false,
     readableListening: false,
     resumeScheduled: true,
     emitClose: false,
     destroyed: false,
     defaultEncoding: 'utf8',
     awaitDrain: 0,
     readingMore: false,
     decoder: null,
     encoding: null },
  readable: true,
  _events:
   [Object: null prototype] {
     end:
      [ [Function: onReadableStreamEnd],
        [Function: bound socketOnEnd] ],
     drain: [ [Function: ondrain], [Function: bound socketOnDrain] ],
     timeout: [Function: socketOnTimeout],
     data: [Function: bound socketOnData],
     error: [Function: socketOnError],
     close: [Function: bound socketOnClose],
     resume: [Function: onSocketResume],
     pause: [Function: onSocketPause] },
  _eventsCount: 8,
  _maxListeners: undefined,
  _writableState:
   WritableState {
     objectMode: false,
     highWaterMark: 16384,
     finalCalled: false,
     needDrain: false,
     ending: false,
     ended: false,
     finished: false,
     destroyed: false,
     decodeStrings: false,
     defaultEncoding: 'utf8',
     length: 0,
     writing: false,
     corked: 0,
     sync: true,
     bufferProcessing: false,
     onwrite: [Function: bound onwrite],
     writecb: null,
     writelen: 0,
     bufferedRequest: null,
     lastBufferedRequest: null,
     pendingcb: 0,
     prefinished: false,
     errorEmitted: false,
     emitClose: false,
     bufferedRequestCount: 0,
     corkedRequestsFree:
      { next: null,
        entry: null,
        finish: [Function: bound onCorkedFinish] } },
  writable: true,
  allowHalfOpen: true,
  _sockname: null,
  _pendingData: null,
  _pendingEncoding: '',
  server:
   Server {
     _events:
      [Object: null prototype] {
        request: [EventEmitter],
        connection: [Array],
        close: [Function],
        error: [Function],
        listening: [Function] },
     _eventsCount: 5,
     _maxListeners: undefined,
     _connections: 1,
     _handle:
      TCP {
        reading: false,
        onread: null,
        onconnection: [Function: onconnection],
        [Symbol(owner)]: [Circular] },
     _usingWorkers: false,
     _workers: [],
     _unref: false,
     allowHalfOpen: true,
     pauseOnConnect: false,
     httpAllowHalfOpen: false,
     timeout: 120000,
     keepAliveTimeout: 5000,
     _pendingResponseData: 0,
     maxHeadersCount: null,
     headersTimeout: 40000,
     _connectionKey: '6::::8090',
     [Symbol(IncomingMessage)]: { [Function: IncomingMessage] super_: [Function] },
     [Symbol(ServerResponse)]: { [Function: ServerResponse] super_: [Function] },
     [Symbol(asyncId)]: 6 },
  _server:
   Server {
     _events:
      [Object: null prototype] {
        request: [EventEmitter],
        connection: [Array],
        close: [Function],
        error: [Function],
        listening: [Function] },
     _eventsCount: 5,
     _maxListeners: undefined,
     _connections: 1,
     _handle:
      TCP {
        reading: false,
        onread: null,
        onconnection: [Function: onconnection],
        [Symbol(owner)]: [Circular] },
     _usingWorkers: false,
     _workers: [],
     _unref: false,
     allowHalfOpen: true,
     pauseOnConnect: false,
     httpAllowHalfOpen: false,
     timeout: 120000,
     keepAliveTimeout: 5000,
     _pendingResponseData: 0,
     maxHeadersCount: null,
     headersTimeout: 40000,
     _connectionKey: '6::::8090',
     [Symbol(IncomingMessage)]: { [Function: IncomingMessage] super_: [Function] },
     [Symbol(ServerResponse)]: { [Function: ServerResponse] super_: [Function] },
     [Symbol(asyncId)]: 6 },
  timeout: 120000,
  parser:
   HTTPParser {
     '0': [Function: parserOnHeaders],
     '1': [Function: parserOnHeadersComplete],
     '2': [Function: parserOnBody],
     '3': [Function: parserOnMessageComplete],
     '4': [Function: bound onParserExecute],
     _headers: [],
     _url: '',
     socket: [Circular],
     incoming: null,
     outgoing: null,
     maxHeaderPairs: 2000,
     _consumed: true,
     onIncoming: [Function: bound parserOnIncoming],
     parsingHeadersStart: 1585760251688,
     [Symbol(isReused)]: false },
  on: [Function: socketOnWrap],
  _paused: false,
  [Symbol(asyncId)]: 10,
  [Symbol(lastWriteQueueSize)]: 0,
  [Symbol(timeout)]:
   Timeout {
     _called: false,
     _idleTimeout: 120000,
     _idlePrev: [TimersList],
     _idleNext: [TimersList],
     _idleStart: 14790,
     _onTimeout: [Function: bound ],
     _timerArgs: undefined,
     _repeat: null,
     _destroyed: false,
     [Symbol(unrefed)]: true,
     [Symbol(asyncId)]: 11,
     [Symbol(triggerId)]: 10 },
  [Symbol(kBytesRead)]: 0,
  [Symbol(kBytesWritten)]: 0 }

====Wed Apr 01 2020 09:57:31 ====
GET /accounts

====Wed Apr 01 2020 09:57:31 ====
RESPONSE [object Object],[object Object],[object Object],[object Object],[object Object]

====Wed Apr 01 2020 09:57:31 ====
RESPONSE [{"id":1,"username":"ProRobinHoodTr1","password":"Impossible123!!2","email":"jaledarely","phone":"9165178775","followers":786,"type":"promoImage","following":5000,"owner":1},{"id":2,"username":"StockJesus","password":"Impossible123","email":"robbrandon02","phone":"9165178775","followers":1262,"type":"promoText","following":5001,"owner":1},{"id":3,"username":"joo11244620","password":"Impossible123!!!","email":"abrahaminiguez06@gmail.com","phone":"9165178775","followers":660,"type":null,"following":4999,"owner":1},{"id":5,"username":"MarkZion19","password":"Impossible123!!","email":"teresainiguez12345","phone":"9165178775","followers":0,"type":null,"following":0,"owner":1},{"id":6,"username":"johnson_maximum","password":"Impossible123!","email":null,"phone":"9165178775","followers":160,"type":null,"following":1309,"owner":1}]

====Wed Apr 01 2020 10:50:23 ====
Socket {
  connecting: false,
  _hadError: false,
  _handle:
   TCP {
     reading: true,
     onread: [Function: onStreamRead],
     onconnection: null,
     _consumed: true,
     [Symbol(owner)]: [Circular] },
  _parent: null,
  _host: null,
  _readableState:
   ReadableState {
     objectMode: false,
     highWaterMark: 16384,
     buffer: BufferList { head: null, tail: null, length: 0 },
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: true,
     ended: false,
     endEmitted: false,
     reading: true,
     sync: false,
     needReadable: true,
     emittedReadable: false,
     readableListening: false,
     resumeScheduled: true,
     emitClose: false,
     destroyed: false,
     defaultEncoding: 'utf8',
     awaitDrain: 0,
     readingMore: false,
     decoder: null,
     encoding: null },
  readable: true,
  _events:
   [Object: null prototype] {
     end:
      [ [Function: onReadableStreamEnd],
        [Function: bound socketOnEnd] ],
     drain: [ [Function: ondrain], [Function: bound socketOnDrain] ],
     timeout: [Function: socketOnTimeout],
     data: [Function: bound socketOnData],
     error: [Function: socketOnError],
     close: [Function: bound socketOnClose],
     resume: [Function: onSocketResume],
     pause: [Function: onSocketPause] },
  _eventsCount: 8,
  _maxListeners: undefined,
  _writableState:
   WritableState {
     objectMode: false,
     highWaterMark: 16384,
     finalCalled: false,
     needDrain: false,
     ending: false,
     ended: false,
     finished: false,
     destroyed: false,
     decodeStrings: false,
     defaultEncoding: 'utf8',
     length: 0,
     writing: false,
     corked: 0,
     sync: true,
     bufferProcessing: false,
     onwrite: [Function: bound onwrite],
     writecb: null,
     writelen: 0,
     bufferedRequest: null,
     lastBufferedRequest: null,
     pendingcb: 0,
     prefinished: false,
     errorEmitted: false,
     emitClose: false,
     bufferedRequestCount: 0,
     corkedRequestsFree:
      { next: null,
        entry: null,
        finish: [Function: bound onCorkedFinish] } },
  writable: true,
  allowHalfOpen: true,
  _sockname: null,
  _pendingData: null,
  _pendingEncoding: '',
  server:
   Server {
     _events:
      [Object: null prototype] {
        request: [EventEmitter],
        connection: [Array],
        close: [Function],
        error: [Function],
        listening: [Function] },
     _eventsCount: 5,
     _maxListeners: undefined,
     _connections: 1,
     _handle:
      TCP {
        reading: false,
        onread: null,
        onconnection: [Function: onconnection],
        [Symbol(owner)]: [Circular] },
     _usingWorkers: false,
     _workers: [],
     _unref: false,
     allowHalfOpen: true,
     pauseOnConnect: false,
     httpAllowHalfOpen: false,
     timeout: 120000,
     keepAliveTimeout: 5000,
     _pendingResponseData: 0,
     maxHeadersCount: null,
     headersTimeout: 40000,
     _connectionKey: '6::::8090',
     [Symbol(IncomingMessage)]: { [Function: IncomingMessage] super_: [Function] },
     [Symbol(ServerResponse)]: { [Function: ServerResponse] super_: [Function] },
     [Symbol(asyncId)]: 6 },
  _server:
   Server {
     _events:
      [Object: null prototype] {
        request: [EventEmitter],
        connection: [Array],
        close: [Function],
        error: [Function],
        listening: [Function] },
     _eventsCount: 5,
     _maxListeners: undefined,
     _connections: 1,
     _handle:
      TCP {
        reading: false,
        onread: null,
        onconnection: [Function: onconnection],
        [Symbol(owner)]: [Circular] },
     _usingWorkers: false,
     _workers: [],
     _unref: false,
     allowHalfOpen: true,
     pauseOnConnect: false,
     httpAllowHalfOpen: false,
     timeout: 120000,
     keepAliveTimeout: 5000,
     _pendingResponseData: 0,
     maxHeadersCount: null,
     headersTimeout: 40000,
     _connectionKey: '6::::8090',
     [Symbol(IncomingMessage)]: { [Function: IncomingMessage] super_: [Function] },
     [Symbol(ServerResponse)]: { [Function: ServerResponse] super_: [Function] },
     [Symbol(asyncId)]: 6 },
  timeout: 120000,
  parser:
   HTTPParser {
     '0': [Function: parserOnHeaders],
     '1': [Function: parserOnHeadersComplete],
     '2': [Function: parserOnBody],
     '3': [Function: parserOnMessageComplete],
     '4': [Function: bound onParserExecute],
     _headers: [],
     _url: '',
     socket: [Circular],
     incoming: null,
     outgoing: null,
     maxHeaderPairs: 2000,
     _consumed: true,
     onIncoming: [Function: bound parserOnIncoming],
     parsingHeadersStart: 1585763423446,
     [Symbol(isReused)]: true },
  on: [Function: socketOnWrap],
  _paused: false,
  [Symbol(asyncId)]: 61,
  [Symbol(lastWriteQueueSize)]: 0,
  [Symbol(timeout)]:
   Timeout {
     _called: false,
     _idleTimeout: 120000,
     _idlePrev: [TimersList],
     _idleNext: [TimersList],
     _idleStart: 3186541,
     _onTimeout: [Function: bound ],
     _timerArgs: undefined,
     _repeat: null,
     _destroyed: false,
     [Symbol(unrefed)]: true,
     [Symbol(asyncId)]: 62,
     [Symbol(triggerId)]: 61 },
  [Symbol(kBytesRead)]: 0,
  [Symbol(kBytesWritten)]: 0 }

====Wed Apr 01 2020 10:50:23 ====
GET /accounts

====Wed Apr 01 2020 10:50:23 ====
RESPONSE [object Object],[object Object],[object Object],[object Object],[object Object]

====Wed Apr 01 2020 10:50:23 ====
RESPONSE [{"id":1,"username":"ProRobinHoodTr1","password":"Impossible123!!2","email":"jaledarely","phone":"9165178775","followers":786,"type":"promoImage","following":5001,"owner":1},{"id":2,"username":"StockJesus","password":"Impossible123","email":"robbrandon02","phone":"9165178775","followers":1262,"type":"promoText","following":5001,"owner":1},{"id":3,"username":"joo11244620","password":"Impossible123!!!","email":"abrahaminiguez06@gmail.com","phone":"9165178775","followers":660,"type":null,"following":5001,"owner":1},{"id":5,"username":"MarkZion19","password":"Impossible123!!","email":"teresainiguez12345","phone":"9165178775","followers":0,"type":null,"following":0,"owner":1},{"id":6,"username":"johnson_maximum","password":"Impossible123!","email":null,"phone":"9165178775","followers":160,"type":null,"following":1318,"owner":1}]

====Wed Apr 01 2020 10:50:54 ====
Socket {
  connecting: false,
  _hadError: false,
  _handle:
   TCP {
     reading: true,
     onread: [Function: onStreamRead],
     onconnection: null,
     _consumed: true,
     [Symbol(owner)]: [Circular] },
  _parent: null,
  _host: null,
  _readableState:
   ReadableState {
     objectMode: false,
     highWaterMark: 16384,
     buffer: BufferList { head: null, tail: null, length: 0 },
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: true,
     ended: false,
     endEmitted: false,
     reading: true,
     sync: false,
     needReadable: true,
     emittedReadable: false,
     readableListening: false,
     resumeScheduled: true,
     emitClose: false,
     destroyed: false,
     defaultEncoding: 'utf8',
     awaitDrain: 0,
     readingMore: false,
     decoder: null,
     encoding: null },
  readable: true,
  _events:
   [Object: null prototype] {
     end:
      [ [Function: onReadableStreamEnd],
        [Function: bound socketOnEnd] ],
     drain: [ [Function: ondrain], [Function: bound socketOnDrain] ],
     timeout: [Function: socketOnTimeout],
     data: [Function: bound socketOnData],
     error: [Function: socketOnError],
     close: [Function: bound socketOnClose],
     resume: [Function: onSocketResume],
     pause: [Function: onSocketPause] },
  _eventsCount: 8,
  _maxListeners: undefined,
  _writableState:
   WritableState {
     objectMode: false,
     highWaterMark: 16384,
     finalCalled: false,
     needDrain: false,
     ending: false,
     ended: false,
     finished: false,
     destroyed: false,
     decodeStrings: false,
     defaultEncoding: 'utf8',
     length: 0,
     writing: false,
     corked: 0,
     sync: true,
     bufferProcessing: false,
     onwrite: [Function: bound onwrite],
     writecb: null,
     writelen: 0,
     bufferedRequest: null,
     lastBufferedRequest: null,
     pendingcb: 0,
     prefinished: false,
     errorEmitted: false,
     emitClose: false,
     bufferedRequestCount: 0,
     corkedRequestsFree:
      { next: null,
        entry: null,
        finish: [Function: bound onCorkedFinish] } },
  writable: true,
  allowHalfOpen: true,
  _sockname: null,
  _pendingData: null,
  _pendingEncoding: '',
  server:
   Server {
     _events:
      [Object: null prototype] {
        request: [EventEmitter],
        connection: [Array],
        close: [Function],
        error: [Function],
        listening: [Function] },
     _eventsCount: 5,
     _maxListeners: undefined,
     _connections: 1,
     _handle:
      TCP {
        reading: false,
        onread: null,
        onconnection: [Function: onconnection],
        [Symbol(owner)]: [Circular] },
     _usingWorkers: false,
     _workers: [],
     _unref: false,
     allowHalfOpen: true,
     pauseOnConnect: false,
     httpAllowHalfOpen: false,
     timeout: 120000,
     keepAliveTimeout: 5000,
     _pendingResponseData: 0,
     maxHeadersCount: null,
     headersTimeout: 40000,
     _connectionKey: '6::::8090',
     [Symbol(IncomingMessage)]: { [Function: IncomingMessage] super_: [Function] },
     [Symbol(ServerResponse)]: { [Function: ServerResponse] super_: [Function] },
     [Symbol(asyncId)]: 6 },
  _server:
   Server {
     _events:
      [Object: null prototype] {
        request: [EventEmitter],
        connection: [Array],
        close: [Function],
        error: [Function],
        listening: [Function] },
     _eventsCount: 5,
     _maxListeners: undefined,
     _connections: 1,
     _handle:
      TCP {
        reading: false,
        onread: null,
        onconnection: [Function: onconnection],
        [Symbol(owner)]: [Circular] },
     _usingWorkers: false,
     _workers: [],
     _unref: false,
     allowHalfOpen: true,
     pauseOnConnect: false,
     httpAllowHalfOpen: false,
     timeout: 120000,
     keepAliveTimeout: 5000,
     _pendingResponseData: 0,
     maxHeadersCount: null,
     headersTimeout: 40000,
     _connectionKey: '6::::8090',
     [Symbol(IncomingMessage)]: { [Function: IncomingMessage] super_: [Function] },
     [Symbol(ServerResponse)]: { [Function: ServerResponse] super_: [Function] },
     [Symbol(asyncId)]: 6 },
  timeout: 120000,
  parser:
   HTTPParser {
     '0': [Function: parserOnHeaders],
     '1': [Function: parserOnHeadersComplete],
     '2': [Function: parserOnBody],
     '3': [Function: parserOnMessageComplete],
     '4': [Function: bound onParserExecute],
     _headers: [],
     _url: '',
     socket: [Circular],
     incoming: null,
     outgoing: null,
     maxHeaderPairs: 2000,
     _consumed: true,
     onIncoming: [Function: bound parserOnIncoming],
     parsingHeadersStart: 1585763454195,
     [Symbol(isReused)]: true },
  on: [Function: socketOnWrap],
  _paused: false,
  [Symbol(asyncId)]: 111,
  [Symbol(lastWriteQueueSize)]: 0,
  [Symbol(timeout)]:
   Timeout {
     _called: false,
     _idleTimeout: 120000,
     _idlePrev: [TimersList],
     _idleNext: [TimersList],
     _idleStart: 3217290,
     _onTimeout: [Function: bound ],
     _timerArgs: undefined,
     _repeat: null,
     _destroyed: false,
     [Symbol(unrefed)]: true,
     [Symbol(asyncId)]: 112,
     [Symbol(triggerId)]: 111 },
  [Symbol(kBytesRead)]: 0,
  [Symbol(kBytesWritten)]: 0 }

====Wed Apr 01 2020 10:50:54 ====
GET /accounts

====Wed Apr 01 2020 10:50:54 ====
RESPONSE [object Object],[object Object],[object Object],[object Object],[object Object]

====Wed Apr 01 2020 10:50:54 ====
RESPONSE [{"id":1,"username":"ProRobinHoodTr1","password":"Impossible123!!2","email":"jaledarely","phone":"9165178775","followers":786,"type":"promoImage","following":5001,"owner":1},{"id":2,"username":"StockJesus","password":"Impossible123","email":"robbrandon02","phone":"9165178775","followers":1262,"type":"promoText","following":5001,"owner":1},{"id":3,"username":"joo11244620","password":"Impossible123!!!","email":"abrahaminiguez06@gmail.com","phone":"9165178775","followers":660,"type":null,"following":5001,"owner":1},{"id":5,"username":"MarkZion19","password":"Impossible123!!","email":"teresainiguez12345","phone":"9165178775","followers":0,"type":null,"following":0,"owner":1},{"id":6,"username":"johnson_maximum","password":"Impossible123!","email":null,"phone":"9165178775","followers":160,"type":null,"following":1318,"owner":1}]

====Wed Apr 01 2020 10:51:50 ====
Socket {
  connecting: false,
  _hadError: false,
  _handle:
   TCP {
     reading: true,
     onread: [Function: onStreamRead],
     onconnection: null,
     _consumed: true,
     [Symbol(owner)]: [Circular] },
  _parent: null,
  _host: null,
  _readableState:
   ReadableState {
     objectMode: false,
     highWaterMark: 16384,
     buffer: BufferList { head: null, tail: null, length: 0 },
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: true,
     ended: false,
     endEmitted: false,
     reading: true,
     sync: false,
     needReadable: true,
     emittedReadable: false,
     readableListening: false,
     resumeScheduled: true,
     emitClose: false,
     destroyed: false,
     defaultEncoding: 'utf8',
     awaitDrain: 0,
     readingMore: false,
     decoder: null,
     encoding: null },
  readable: true,
  _events:
   [Object: null prototype] {
     end:
      [ [Function: onReadableStreamEnd],
        [Function: bound socketOnEnd] ],
     drain: [ [Function: ondrain], [Function: bound socketOnDrain] ],
     timeout: [Function: socketOnTimeout],
     data: [Function: bound socketOnData],
     error: [Function: socketOnError],
     close: [Function: bound socketOnClose],
     resume: [Function: onSocketResume],
     pause: [Function: onSocketPause] },
  _eventsCount: 8,
  _maxListeners: undefined,
  _writableState:
   WritableState {
     objectMode: false,
     highWaterMark: 16384,
     finalCalled: false,
     needDrain: false,
     ending: false,
     ended: false,
     finished: false,
     destroyed: false,
     decodeStrings: false,
     defaultEncoding: 'utf8',
     length: 0,
     writing: false,
     corked: 0,
     sync: true,
     bufferProcessing: false,
     onwrite: [Function: bound onwrite],
     writecb: null,
     writelen: 0,
     bufferedRequest: null,
     lastBufferedRequest: null,
     pendingcb: 0,
     prefinished: false,
     errorEmitted: false,
     emitClose: false,
     bufferedRequestCount: 0,
     corkedRequestsFree:
      { next: null,
        entry: null,
        finish: [Function: bound onCorkedFinish] } },
  writable: true,
  allowHalfOpen: true,
  _sockname: null,
  _pendingData: null,
  _pendingEncoding: '',
  server:
   Server {
     _events:
      [Object: null prototype] {
        request: [EventEmitter],
        connection: [Array],
        close: [Function],
        error: [Function],
        listening: [Function] },
     _eventsCount: 5,
     _maxListeners: undefined,
     _connections: 1,
     _handle:
      TCP {
        reading: false,
        onread: null,
        onconnection: [Function: onconnection],
        [Symbol(owner)]: [Circular] },
     _usingWorkers: false,
     _workers: [],
     _unref: false,
     allowHalfOpen: true,
     pauseOnConnect: false,
     httpAllowHalfOpen: false,
     timeout: 120000,
     keepAliveTimeout: 5000,
     _pendingResponseData: 0,
     maxHeadersCount: null,
     headersTimeout: 40000,
     _connectionKey: '6::::8090',
     [Symbol(IncomingMessage)]: { [Function: IncomingMessage] super_: [Function] },
     [Symbol(ServerResponse)]: { [Function: ServerResponse] super_: [Function] },
     [Symbol(asyncId)]: 6 },
  _server:
   Server {
     _events:
      [Object: null prototype] {
        request: [EventEmitter],
        connection: [Array],
        close: [Function],
        error: [Function],
        listening: [Function] },
     _eventsCount: 5,
     _maxListeners: undefined,
     _connections: 1,
     _handle:
      TCP {
        reading: false,
        onread: null,
        onconnection: [Function: onconnection],
        [Symbol(owner)]: [Circular] },
     _usingWorkers: false,
     _workers: [],
     _unref: false,
     allowHalfOpen: true,
     pauseOnConnect: false,
     httpAllowHalfOpen: false,
     timeout: 120000,
     keepAliveTimeout: 5000,
     _pendingResponseData: 0,
     maxHeadersCount: null,
     headersTimeout: 40000,
     _connectionKey: '6::::8090',
     [Symbol(IncomingMessage)]: { [Function: IncomingMessage] super_: [Function] },
     [Symbol(ServerResponse)]: { [Function: ServerResponse] super_: [Function] },
     [Symbol(asyncId)]: 6 },
  timeout: 120000,
  parser:
   HTTPParser {
     '0': [Function: parserOnHeaders],
     '1': [Function: parserOnHeadersComplete],
     '2': [Function: parserOnBody],
     '3': [Function: parserOnMessageComplete],
     '4': [Function: bound onParserExecute],
     _headers: [],
     _url: '',
     socket: [Circular],
     incoming: null,
     outgoing: null,
     maxHeaderPairs: 2000,
     _consumed: true,
     onIncoming: [Function: bound parserOnIncoming],
     parsingHeadersStart: 1585763510460,
     [Symbol(isReused)]: true },
  on: [Function: socketOnWrap],
  _paused: false,
  [Symbol(asyncId)]: 159,
  [Symbol(lastWriteQueueSize)]: 0,
  [Symbol(timeout)]:
   Timeout {
     _called: false,
     _idleTimeout: 120000,
     _idlePrev: [TimersList],
     _idleNext: [TimersList],
     _idleStart: 3273555,
     _onTimeout: [Function: bound ],
     _timerArgs: undefined,
     _repeat: null,
     _destroyed: false,
     [Symbol(unrefed)]: true,
     [Symbol(asyncId)]: 160,
     [Symbol(triggerId)]: 159 },
  [Symbol(kBytesRead)]: 0,
  [Symbol(kBytesWritten)]: 0 }

====Wed Apr 01 2020 10:51:50 ====
GET /accounts

====Wed Apr 01 2020 10:51:50 ====
RESPONSE [object Object],[object Object],[object Object],[object Object],[object Object]

====Wed Apr 01 2020 10:51:50 ====
RESPONSE [{"id":1,"username":"ProRobinHoodTr1","password":"Impossible123!!2","email":"jaledarely","phone":"9165178775","followers":786,"type":"promoImage","following":5001,"owner":1},{"id":2,"username":"StockJesus","password":"Impossible123","email":"robbrandon02","phone":"9165178775","followers":1262,"type":"promoText","following":5001,"owner":1},{"id":3,"username":"joo11244620","password":"Impossible123!!!","email":"abrahaminiguez06@gmail.com","phone":"9165178775","followers":660,"type":null,"following":5001,"owner":1},{"id":5,"username":"MarkZion19","password":"Impossible123!!","email":"teresainiguez12345","phone":"9165178775","followers":0,"type":null,"following":0,"owner":1},{"id":6,"username":"johnson_maximum","password":"Impossible123!","email":null,"phone":"9165178775","followers":160,"type":null,"following":1318,"owner":1}]

====Wed Apr 01 2020 10:57:40 ====
Socket {
  connecting: false,
  _hadError: false,
  _handle:
   TCP {
     reading: true,
     onread: [Function: onStreamRead],
     onconnection: null,
     _consumed: true,
     [Symbol(owner)]: [Circular] },
  _parent: null,
  _host: null,
  _readableState:
   ReadableState {
     objectMode: false,
     highWaterMark: 16384,
     buffer: BufferList { head: null, tail: null, length: 0 },
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: true,
     ended: false,
     endEmitted: false,
     reading: true,
     sync: false,
     needReadable: true,
     emittedReadable: false,
     readableListening: false,
     resumeScheduled: true,
     emitClose: false,
     destroyed: false,
     defaultEncoding: 'utf8',
     awaitDrain: 0,
     readingMore: false,
     decoder: null,
     encoding: null },
  readable: true,
  _events:
   [Object: null prototype] {
     end:
      [ [Function: onReadableStreamEnd],
        [Function: bound socketOnEnd] ],
     drain: [ [Function: ondrain], [Function: bound socketOnDrain] ],
     timeout: [Function: socketOnTimeout],
     data: [Function: bound socketOnData],
     error: [Function: socketOnError],
     close: [Function: bound socketOnClose],
     resume: [Function: onSocketResume],
     pause: [Function: onSocketPause] },
  _eventsCount: 8,
  _maxListeners: undefined,
  _writableState:
   WritableState {
     objectMode: false,
     highWaterMark: 16384,
     finalCalled: false,
     needDrain: false,
     ending: false,
     ended: false,
     finished: false,
     destroyed: false,
     decodeStrings: false,
     defaultEncoding: 'utf8',
     length: 0,
     writing: false,
     corked: 0,
     sync: true,
     bufferProcessing: false,
     onwrite: [Function: bound onwrite],
     writecb: null,
     writelen: 0,
     bufferedRequest: null,
     lastBufferedRequest: null,
     pendingcb: 0,
     prefinished: false,
     errorEmitted: false,
     emitClose: false,
     bufferedRequestCount: 0,
     corkedRequestsFree:
      { next: null,
        entry: null,
        finish: [Function: bound onCorkedFinish] } },
  writable: true,
  allowHalfOpen: true,
  _sockname: null,
  _pendingData: null,
  _pendingEncoding: '',
  server:
   Server {
     _events:
      [Object: null prototype] {
        request: [EventEmitter],
        connection: [Array],
        close: [Function],
        error: [Function],
        listening: [Function] },
     _eventsCount: 5,
     _maxListeners: undefined,
     _connections: 1,
     _handle:
      TCP {
        reading: false,
        onread: null,
        onconnection: [Function: onconnection],
        [Symbol(owner)]: [Circular] },
     _usingWorkers: false,
     _workers: [],
     _unref: false,
     allowHalfOpen: true,
     pauseOnConnect: false,
     httpAllowHalfOpen: false,
     timeout: 120000,
     keepAliveTimeout: 5000,
     _pendingResponseData: 0,
     maxHeadersCount: null,
     headersTimeout: 40000,
     _connectionKey: '6::::8090',
     [Symbol(IncomingMessage)]: { [Function: IncomingMessage] super_: [Function] },
     [Symbol(ServerResponse)]: { [Function: ServerResponse] super_: [Function] },
     [Symbol(asyncId)]: 6 },
  _server:
   Server {
     _events:
      [Object: null prototype] {
        request: [EventEmitter],
        connection: [Array],
        close: [Function],
        error: [Function],
        listening: [Function] },
     _eventsCount: 5,
     _maxListeners: undefined,
     _connections: 1,
     _handle:
      TCP {
        reading: false,
        onread: null,
        onconnection: [Function: onconnection],
        [Symbol(owner)]: [Circular] },
     _usingWorkers: false,
     _workers: [],
     _unref: false,
     allowHalfOpen: true,
     pauseOnConnect: false,
     httpAllowHalfOpen: false,
     timeout: 120000,
     keepAliveTimeout: 5000,
     _pendingResponseData: 0,
     maxHeadersCount: null,
     headersTimeout: 40000,
     _connectionKey: '6::::8090',
     [Symbol(IncomingMessage)]: { [Function: IncomingMessage] super_: [Function] },
     [Symbol(ServerResponse)]: { [Function: ServerResponse] super_: [Function] },
     [Symbol(asyncId)]: 6 },
  timeout: 120000,
  parser:
   HTTPParser {
     '0': [Function: parserOnHeaders],
     '1': [Function: parserOnHeadersComplete],
     '2': [Function: parserOnBody],
     '3': [Function: parserOnMessageComplete],
     '4': [Function: bound onParserExecute],
     _headers: [],
     _url: '',
     socket: [Circular],
     incoming: null,
     outgoing: null,
     maxHeaderPairs: 2000,
     _consumed: true,
     onIncoming: [Function: bound parserOnIncoming],
     parsingHeadersStart: 1585763860405,
     [Symbol(isReused)]: true },
  on: [Function: socketOnWrap],
  _paused: false,
  [Symbol(asyncId)]: 207,
  [Symbol(lastWriteQueueSize)]: 0,
  [Symbol(timeout)]:
   Timeout {
     _called: false,
     _idleTimeout: 120000,
     _idlePrev: [TimersList],
     _idleNext: [TimersList],
     _idleStart: 3623503,
     _onTimeout: [Function: bound ],
     _timerArgs: undefined,
     _repeat: null,
     _destroyed: false,
     [Symbol(unrefed)]: true,
     [Symbol(asyncId)]: 208,
     [Symbol(triggerId)]: 207 },
  [Symbol(kBytesRead)]: 0,
  [Symbol(kBytesWritten)]: 0 }

====Wed Apr 01 2020 10:57:40 ====
GET /accounts

====Wed Apr 01 2020 10:57:40 ====
RESPONSE [object Object],[object Object],[object Object],[object Object],[object Object]

====Wed Apr 01 2020 10:57:40 ====
RESPONSE [{"id":1,"username":"ProRobinHoodTr1","password":"Impossible123!!2","email":"jaledarely","phone":"9165178775","followers":786,"type":"promoImage","following":5001,"owner":1},{"id":2,"username":"StockJesus","password":"Impossible123","email":"robbrandon02","phone":"9165178775","followers":1262,"type":"promoText","following":5001,"owner":1},{"id":3,"username":"joo11244620","password":"Impossible123!!!","email":"abrahaminiguez06@gmail.com","phone":"9165178775","followers":660,"type":null,"following":5001,"owner":1},{"id":5,"username":"MarkZion19","password":"Impossible123!!","email":"teresainiguez12345","phone":"9165178775","followers":0,"type":null,"following":0,"owner":1},{"id":6,"username":"johnson_maximum","password":"Impossible123!","email":null,"phone":"9165178775","followers":160,"type":null,"following":1318,"owner":1}]

====Wed Apr 01 2020 10:58:22 ====
Socket {
  connecting: false,
  _hadError: false,
  _handle:
   TCP {
     reading: true,
     onread: [Function: onStreamRead],
     onconnection: null,
     _consumed: true,
     [Symbol(owner)]: [Circular] },
  _parent: null,
  _host: null,
  _readableState:
   ReadableState {
     objectMode: false,
     highWaterMark: 16384,
     buffer: BufferList { head: null, tail: null, length: 0 },
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: true,
     ended: false,
     endEmitted: false,
     reading: true,
     sync: false,
     needReadable: true,
     emittedReadable: false,
     readableListening: false,
     resumeScheduled: true,
     emitClose: false,
     destroyed: false,
     defaultEncoding: 'utf8',
     awaitDrain: 0,
     readingMore: false,
     decoder: null,
     encoding: null },
  readable: true,
  _events:
   [Object: null prototype] {
     end:
      [ [Function: onReadableStreamEnd],
        [Function: bound socketOnEnd] ],
     drain: [ [Function: ondrain], [Function: bound socketOnDrain] ],
     timeout: [Function: socketOnTimeout],
     data: [Function: bound socketOnData],
     error: [Function: socketOnError],
     close: [Function: bound socketOnClose],
     resume: [Function: onSocketResume],
     pause: [Function: onSocketPause] },
  _eventsCount: 8,
  _maxListeners: undefined,
  _writableState:
   WritableState {
     objectMode: false,
     highWaterMark: 16384,
     finalCalled: false,
     needDrain: false,
     ending: false,
     ended: false,
     finished: false,
     destroyed: false,
     decodeStrings: false,
     defaultEncoding: 'utf8',
     length: 0,
     writing: false,
     corked: 0,
     sync: true,
     bufferProcessing: false,
     onwrite: [Function: bound onwrite],
     writecb: null,
     writelen: 0,
     bufferedRequest: null,
     lastBufferedRequest: null,
     pendingcb: 0,
     prefinished: false,
     errorEmitted: false,
     emitClose: false,
     bufferedRequestCount: 0,
     corkedRequestsFree:
      { next: null,
        entry: null,
        finish: [Function: bound onCorkedFinish] } },
  writable: true,
  allowHalfOpen: true,
  _sockname: null,
  _pendingData: null,
  _pendingEncoding: '',
  server:
   Server {
     _events:
      [Object: null prototype] {
        request: [EventEmitter],
        connection: [Array],
        close: [Function],
        error: [Function],
        listening: [Function] },
     _eventsCount: 5,
     _maxListeners: undefined,
     _connections: 1,
     _handle:
      TCP {
        reading: false,
        onread: null,
        onconnection: [Function: onconnection],
        [Symbol(owner)]: [Circular] },
     _usingWorkers: false,
     _workers: [],
     _unref: false,
     allowHalfOpen: true,
     pauseOnConnect: false,
     httpAllowHalfOpen: false,
     timeout: 120000,
     keepAliveTimeout: 5000,
     _pendingResponseData: 0,
     maxHeadersCount: null,
     headersTimeout: 40000,
     _connectionKey: '6::::8090',
     [Symbol(IncomingMessage)]: { [Function: IncomingMessage] super_: [Function] },
     [Symbol(ServerResponse)]: { [Function: ServerResponse] super_: [Function] },
     [Symbol(asyncId)]: 6 },
  _server:
   Server {
     _events:
      [Object: null prototype] {
        request: [EventEmitter],
        connection: [Array],
        close: [Function],
        error: [Function],
        listening: [Function] },
     _eventsCount: 5,
     _maxListeners: undefined,
     _connections: 1,
     _handle:
      TCP {
        reading: false,
        onread: null,
        onconnection: [Function: onconnection],
        [Symbol(owner)]: [Circular] },
     _usingWorkers: false,
     _workers: [],
     _unref: false,
     allowHalfOpen: true,
     pauseOnConnect: false,
     httpAllowHalfOpen: false,
     timeout: 120000,
     keepAliveTimeout: 5000,
     _pendingResponseData: 0,
     maxHeadersCount: null,
     headersTimeout: 40000,
     _connectionKey: '6::::8090',
     [Symbol(IncomingMessage)]: { [Function: IncomingMessage] super_: [Function] },
     [Symbol(ServerResponse)]: { [Function: ServerResponse] super_: [Function] },
     [Symbol(asyncId)]: 6 },
  timeout: 120000,
  parser:
   HTTPParser {
     '0': [Function: parserOnHeaders],
     '1': [Function: parserOnHeadersComplete],
     '2': [Function: parserOnBody],
     '3': [Function: parserOnMessageComplete],
     '4': [Function: bound onParserExecute],
     _headers: [],
     _url: '',
     socket: [Circular],
     incoming: null,
     outgoing: null,
     maxHeaderPairs: 2000,
     _consumed: true,
     onIncoming: [Function: bound parserOnIncoming],
     parsingHeadersStart: 1585763902115,
     [Symbol(isReused)]: true },
  on: [Function: socketOnWrap],
  _paused: false,
  [Symbol(asyncId)]: 256,
  [Symbol(lastWriteQueueSize)]: 0,
  [Symbol(timeout)]:
   Timeout {
     _called: false,
     _idleTimeout: 120000,
     _idlePrev: [TimersList],
     _idleNext: [TimersList],
     _idleStart: 3665193,
     _onTimeout: [Function: bound ],
     _timerArgs: undefined,
     _repeat: null,
     _destroyed: false,
     [Symbol(unrefed)]: true,
     [Symbol(asyncId)]: 257,
     [Symbol(triggerId)]: 256 },
  [Symbol(kBytesRead)]: 0,
  [Symbol(kBytesWritten)]: 0 }

====Wed Apr 01 2020 10:58:22 ====
GET /accounts

====Wed Apr 01 2020 10:58:22 ====
RESPONSE [object Object],[object Object],[object Object],[object Object],[object Object]

====Wed Apr 01 2020 10:58:22 ====
RESPONSE [{"id":1,"username":"ProRobinHoodTr1","password":"Impossible123!!2","email":"jaledarely","phone":"9165178775","followers":786,"type":"promoImage","following":5001,"owner":1},{"id":2,"username":"StockJesus","password":"Impossible123","email":"robbrandon02","phone":"9165178775","followers":1262,"type":"promoText","following":5001,"owner":1},{"id":3,"username":"joo11244620","password":"Impossible123!!!","email":"abrahaminiguez06@gmail.com","phone":"9165178775","followers":660,"type":null,"following":5001,"owner":1},{"id":5,"username":"MarkZion19","password":"Impossible123!!","email":"teresainiguez12345","phone":"9165178775","followers":0,"type":null,"following":0,"owner":1},{"id":6,"username":"johnson_maximum","password":"Impossible123!","email":null,"phone":"9165178775","followers":160,"type":null,"following":1318,"owner":1}]

====Wed Apr 01 2020 11:03:27 ====
Socket {
  connecting: false,
  _hadError: false,
  _handle:
   TCP {
     reading: true,
     onread: [Function: onStreamRead],
     onconnection: null,
     _consumed: true,
     [Symbol(owner)]: [Circular] },
  _parent: null,
  _host: null,
  _readableState:
   ReadableState {
     objectMode: false,
     highWaterMark: 16384,
     buffer: BufferList { head: null, tail: null, length: 0 },
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: true,
     ended: false,
     endEmitted: false,
     reading: true,
     sync: false,
     needReadable: true,
     emittedReadable: false,
     readableListening: false,
     resumeScheduled: true,
     emitClose: false,
     destroyed: false,
     defaultEncoding: 'utf8',
     awaitDrain: 0,
     readingMore: false,
     decoder: null,
     encoding: null },
  readable: true,
  _events:
   [Object: null prototype] {
     end:
      [ [Function: onReadableStreamEnd],
        [Function: bound socketOnEnd] ],
     drain: [ [Function: ondrain], [Function: bound socketOnDrain] ],
     timeout: [Function: socketOnTimeout],
     data: [Function: bound socketOnData],
     error: [Function: socketOnError],
     close: [Function: bound socketOnClose],
     resume: [Function: onSocketResume],
     pause: [Function: onSocketPause] },
  _eventsCount: 8,
  _maxListeners: undefined,
  _writableState:
   WritableState {
     objectMode: false,
     highWaterMark: 16384,
     finalCalled: false,
     needDrain: false,
     ending: false,
     ended: false,
     finished: false,
     destroyed: false,
     decodeStrings: false,
     defaultEncoding: 'utf8',
     length: 0,
     writing: false,
     corked: 0,
     sync: true,
     bufferProcessing: false,
     onwrite: [Function: bound onwrite],
     writecb: null,
     writelen: 0,
     bufferedRequest: null,
     lastBufferedRequest: null,
     pendingcb: 0,
     prefinished: false,
     errorEmitted: false,
     emitClose: false,
     bufferedRequestCount: 0,
     corkedRequestsFree:
      { next: null,
        entry: null,
        finish: [Function: bound onCorkedFinish] } },
  writable: true,
  allowHalfOpen: true,
  _sockname: null,
  _pendingData: null,
  _pendingEncoding: '',
  server:
   Server {
     _events:
      [Object: null prototype] {
        request: [EventEmitter],
        connection: [Array],
        close: [Function],
        error: [Function],
        listening: [Function] },
     _eventsCount: 5,
     _maxListeners: undefined,
     _connections: 1,
     _handle:
      TCP {
        reading: false,
        onread: null,
        onconnection: [Function: onconnection],
        [Symbol(owner)]: [Circular] },
     _usingWorkers: false,
     _workers: [],
     _unref: false,
     allowHalfOpen: true,
     pauseOnConnect: false,
     httpAllowHalfOpen: false,
     timeout: 120000,
     keepAliveTimeout: 5000,
     _pendingResponseData: 0,
     maxHeadersCount: null,
     headersTimeout: 40000,
     _connectionKey: '6::::8090',
     [Symbol(IncomingMessage)]: { [Function: IncomingMessage] super_: [Function] },
     [Symbol(ServerResponse)]: { [Function: ServerResponse] super_: [Function] },
     [Symbol(asyncId)]: 6 },
  _server:
   Server {
     _events:
      [Object: null prototype] {
        request: [EventEmitter],
        connection: [Array],
        close: [Function],
        error: [Function],
        listening: [Function] },
     _eventsCount: 5,
     _maxListeners: undefined,
     _connections: 1,
     _handle:
      TCP {
        reading: false,
        onread: null,
        onconnection: [Function: onconnection],
        [Symbol(owner)]: [Circular] },
     _usingWorkers: false,
     _workers: [],
     _unref: false,
     allowHalfOpen: true,
     pauseOnConnect: false,
     httpAllowHalfOpen: false,
     timeout: 120000,
     keepAliveTimeout: 5000,
     _pendingResponseData: 0,
     maxHeadersCount: null,
     headersTimeout: 40000,
     _connectionKey: '6::::8090',
     [Symbol(IncomingMessage)]: { [Function: IncomingMessage] super_: [Function] },
     [Symbol(ServerResponse)]: { [Function: ServerResponse] super_: [Function] },
     [Symbol(asyncId)]: 6 },
  timeout: 120000,
  parser:
   HTTPParser {
     '0': [Function: parserOnHeaders],
     '1': [Function: parserOnHeadersComplete],
     '2': [Function: parserOnBody],
     '3': [Function: parserOnMessageComplete],
     '4': [Function: bound onParserExecute],
     _headers: [],
     _url: '',
     socket: [Circular],
     incoming: null,
     outgoing: null,
     maxHeaderPairs: 2000,
     _consumed: true,
     onIncoming: [Function: bound parserOnIncoming],
     parsingHeadersStart: 1585764207652,
     [Symbol(isReused)]: true },
  on: [Function: socketOnWrap],
  _paused: false,
  [Symbol(asyncId)]: 304,
  [Symbol(lastWriteQueueSize)]: 0,
  [Symbol(timeout)]:
   Timeout {
     _called: false,
     _idleTimeout: 120000,
     _idlePrev: [TimersList],
     _idleNext: [TimersList],
     _idleStart: 3970723,
     _onTimeout: [Function: bound ],
     _timerArgs: undefined,
     _repeat: null,
     _destroyed: false,
     [Symbol(unrefed)]: true,
     [Symbol(asyncId)]: 305,
     [Symbol(triggerId)]: 304 },
  [Symbol(kBytesRead)]: 0,
  [Symbol(kBytesWritten)]: 0 }

====Wed Apr 01 2020 11:03:27 ====
GET /accounts

====Wed Apr 01 2020 11:03:27 ====
RESPONSE [object Object],[object Object],[object Object],[object Object],[object Object]

====Wed Apr 01 2020 11:03:27 ====
RESPONSE [{"id":1,"username":"ProRobinHoodTr1","password":"Impossible123!!2","email":"jaledarely","phone":"9165178775","followers":786,"type":"promoImage","following":5001,"owner":1},{"id":2,"username":"StockJesus","password":"Impossible123","email":"robbrandon02","phone":"9165178775","followers":1262,"type":"promoText","following":5001,"owner":1},{"id":3,"username":"joo11244620","password":"Impossible123!!!","email":"abrahaminiguez06@gmail.com","phone":"9165178775","followers":660,"type":null,"following":5001,"owner":1},{"id":5,"username":"MarkZion19","password":"Impossible123!!","email":"teresainiguez12345","phone":"9165178775","followers":0,"type":null,"following":0,"owner":1},{"id":6,"username":"johnson_maximum","password":"Impossible123!","email":null,"phone":"9165178775","followers":160,"type":null,"following":1318,"owner":1}]

====Wed Apr 01 2020 11:03:52 ====
Socket {
  connecting: false,
  _hadError: false,
  _handle:
   TCP {
     reading: true,
     onread: [Function: onStreamRead],
     onconnection: null,
     _consumed: true,
     [Symbol(owner)]: [Circular] },
  _parent: null,
  _host: null,
  _readableState:
   ReadableState {
     objectMode: false,
     highWaterMark: 16384,
     buffer: BufferList { head: null, tail: null, length: 0 },
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: true,
     ended: false,
     endEmitted: false,
     reading: true,
     sync: false,
     needReadable: true,
     emittedReadable: false,
     readableListening: false,
     resumeScheduled: true,
     emitClose: false,
     destroyed: false,
     defaultEncoding: 'utf8',
     awaitDrain: 0,
     readingMore: false,
     decoder: null,
     encoding: null },
  readable: true,
  _events:
   [Object: null prototype] {
     end:
      [ [Function: onReadableStreamEnd],
        [Function: bound socketOnEnd] ],
     drain: [ [Function: ondrain], [Function: bound socketOnDrain] ],
     timeout: [Function: socketOnTimeout],
     data: [Function: bound socketOnData],
     error: [Function: socketOnError],
     close: [Function: bound socketOnClose],
     resume: [Function: onSocketResume],
     pause: [Function: onSocketPause] },
  _eventsCount: 8,
  _maxListeners: undefined,
  _writableState:
   WritableState {
     objectMode: false,
     highWaterMark: 16384,
     finalCalled: false,
     needDrain: false,
     ending: false,
     ended: false,
     finished: false,
     destroyed: false,
     decodeStrings: false,
     defaultEncoding: 'utf8',
     length: 0,
     writing: false,
     corked: 0,
     sync: true,
     bufferProcessing: false,
     onwrite: [Function: bound onwrite],
     writecb: null,
     writelen: 0,
     bufferedRequest: null,
     lastBufferedRequest: null,
     pendingcb: 0,
     prefinished: false,
     errorEmitted: false,
     emitClose: false,
     bufferedRequestCount: 0,
     corkedRequestsFree:
      { next: null,
        entry: null,
        finish: [Function: bound onCorkedFinish] } },
  writable: true,
  allowHalfOpen: true,
  _sockname: null,
  _pendingData: null,
  _pendingEncoding: '',
  server:
   Server {
     _events:
      [Object: null prototype] {
        request: [EventEmitter],
        connection: [Array],
        close: [Function],
        error: [Function],
        listening: [Function] },
     _eventsCount: 5,
     _maxListeners: undefined,
     _connections: 1,
     _handle:
      TCP {
        reading: false,
        onread: null,
        onconnection: [Function: onconnection],
        [Symbol(owner)]: [Circular] },
     _usingWorkers: false,
     _workers: [],
     _unref: false,
     allowHalfOpen: true,
     pauseOnConnect: false,
     httpAllowHalfOpen: false,
     timeout: 120000,
     keepAliveTimeout: 5000,
     _pendingResponseData: 0,
     maxHeadersCount: null,
     headersTimeout: 40000,
     _connectionKey: '6::::8090',
     [Symbol(IncomingMessage)]: { [Function: IncomingMessage] super_: [Function] },
     [Symbol(ServerResponse)]: { [Function: ServerResponse] super_: [Function] },
     [Symbol(asyncId)]: 6 },
  _server:
   Server {
     _events:
      [Object: null prototype] {
        request: [EventEmitter],
        connection: [Array],
        close: [Function],
        error: [Function],
        listening: [Function] },
     _eventsCount: 5,
     _maxListeners: undefined,
     _connections: 1,
     _handle:
      TCP {
        reading: false,
        onread: null,
        onconnection: [Function: onconnection],
        [Symbol(owner)]: [Circular] },
     _usingWorkers: false,
     _workers: [],
     _unref: false,
     allowHalfOpen: true,
     pauseOnConnect: false,
     httpAllowHalfOpen: false,
     timeout: 120000,
     keepAliveTimeout: 5000,
     _pendingResponseData: 0,
     maxHeadersCount: null,
     headersTimeout: 40000,
     _connectionKey: '6::::8090',
     [Symbol(IncomingMessage)]: { [Function: IncomingMessage] super_: [Function] },
     [Symbol(ServerResponse)]: { [Function: ServerResponse] super_: [Function] },
     [Symbol(asyncId)]: 6 },
  timeout: 120000,
  parser:
   HTTPParser {
     '0': [Function: parserOnHeaders],
     '1': [Function: parserOnHeadersComplete],
     '2': [Function: parserOnBody],
     '3': [Function: parserOnMessageComplete],
     '4': [Function: bound onParserExecute],
     _headers: [],
     _url: '',
     socket: [Circular],
     incoming: null,
     outgoing: null,
     maxHeaderPairs: 2000,
     _consumed: true,
     onIncoming: [Function: bound parserOnIncoming],
     parsingHeadersStart: 1585764232377,
     [Symbol(isReused)]: true },
  on: [Function: socketOnWrap],
  _paused: false,
  [Symbol(asyncId)]: 353,
  [Symbol(lastWriteQueueSize)]: 0,
  [Symbol(timeout)]:
   Timeout {
     _called: false,
     _idleTimeout: 120000,
     _idlePrev: [TimersList],
     _idleNext: [TimersList],
     _idleStart: 3995449,
     _onTimeout: [Function: bound ],
     _timerArgs: undefined,
     _repeat: null,
     _destroyed: false,
     [Symbol(unrefed)]: true,
     [Symbol(asyncId)]: 354,
     [Symbol(triggerId)]: 353 },
  [Symbol(kBytesRead)]: 0,
  [Symbol(kBytesWritten)]: 0 }

====Wed Apr 01 2020 11:03:52 ====
GET /accounts

====Wed Apr 01 2020 11:03:52 ====
RESPONSE [object Object],[object Object],[object Object],[object Object],[object Object]

====Wed Apr 01 2020 11:03:52 ====
RESPONSE [{"id":1,"username":"ProRobinHoodTr1","password":"Impossible123!!2","email":"jaledarely","phone":"9165178775","followers":786,"type":"promoImage","following":5001,"owner":1},{"id":2,"username":"StockJesus","password":"Impossible123","email":"robbrandon02","phone":"9165178775","followers":1262,"type":"promoText","following":5001,"owner":1},{"id":3,"username":"joo11244620","password":"Impossible123!!!","email":"abrahaminiguez06@gmail.com","phone":"9165178775","followers":660,"type":null,"following":5001,"owner":1},{"id":5,"username":"MarkZion19","password":"Impossible123!!","email":"teresainiguez12345","phone":"9165178775","followers":0,"type":null,"following":0,"owner":1},{"id":6,"username":"johnson_maximum","password":"Impossible123!","email":null,"phone":"9165178775","followers":160,"type":null,"following":1318,"owner":1}]

====Wed Apr 01 2020 11:05:39 ====
Socket {
  connecting: false,
  _hadError: false,
  _handle:
   TCP {
     reading: true,
     onread: [Function: onStreamRead],
     onconnection: null,
     _consumed: true,
     [Symbol(owner)]: [Circular] },
  _parent: null,
  _host: null,
  _readableState:
   ReadableState {
     objectMode: false,
     highWaterMark: 16384,
     buffer: BufferList { head: null, tail: null, length: 0 },
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: true,
     ended: false,
     endEmitted: false,
     reading: true,
     sync: false,
     needReadable: true,
     emittedReadable: false,
     readableListening: false,
     resumeScheduled: true,
     emitClose: false,
     destroyed: false,
     defaultEncoding: 'utf8',
     awaitDrain: 0,
     readingMore: false,
     decoder: null,
     encoding: null },
  readable: true,
  _events:
   [Object: null prototype] {
     end:
      [ [Function: onReadableStreamEnd],
        [Function: bound socketOnEnd] ],
     drain: [ [Function: ondrain], [Function: bound socketOnDrain] ],
     timeout: [Function: socketOnTimeout],
     data: [Function: bound socketOnData],
     error: [Function: socketOnError],
     close: [Function: bound socketOnClose],
     resume: [Function: onSocketResume],
     pause: [Function: onSocketPause] },
  _eventsCount: 8,
  _maxListeners: undefined,
  _writableState:
   WritableState {
     objectMode: false,
     highWaterMark: 16384,
     finalCalled: false,
     needDrain: false,
     ending: false,
     ended: false,
     finished: false,
     destroyed: false,
     decodeStrings: false,
     defaultEncoding: 'utf8',
     length: 0,
     writing: false,
     corked: 0,
     sync: true,
     bufferProcessing: false,
     onwrite: [Function: bound onwrite],
     writecb: null,
     writelen: 0,
     bufferedRequest: null,
     lastBufferedRequest: null,
     pendingcb: 0,
     prefinished: false,
     errorEmitted: false,
     emitClose: false,
     bufferedRequestCount: 0,
     corkedRequestsFree:
      { next: null,
        entry: null,
        finish: [Function: bound onCorkedFinish] } },
  writable: true,
  allowHalfOpen: true,
  _sockname: null,
  _pendingData: null,
  _pendingEncoding: '',
  server:
   Server {
     _events:
      [Object: null prototype] {
        request: [EventEmitter],
        connection: [Array],
        close: [Function],
        error: [Function],
        listening: [Function] },
     _eventsCount: 5,
     _maxListeners: undefined,
     _connections: 1,
     _handle:
      TCP {
        reading: false,
        onread: null,
        onconnection: [Function: onconnection],
        [Symbol(owner)]: [Circular] },
     _usingWorkers: false,
     _workers: [],
     _unref: false,
     allowHalfOpen: true,
     pauseOnConnect: false,
     httpAllowHalfOpen: false,
     timeout: 120000,
     keepAliveTimeout: 5000,
     _pendingResponseData: 0,
     maxHeadersCount: null,
     headersTimeout: 40000,
     _connectionKey: '6::::8090',
     [Symbol(IncomingMessage)]: { [Function: IncomingMessage] super_: [Function] },
     [Symbol(ServerResponse)]: { [Function: ServerResponse] super_: [Function] },
     [Symbol(asyncId)]: 6 },
  _server:
   Server {
     _events:
      [Object: null prototype] {
        request: [EventEmitter],
        connection: [Array],
        close: [Function],
        error: [Function],
        listening: [Function] },
     _eventsCount: 5,
     _maxListeners: undefined,
     _connections: 1,
     _handle:
      TCP {
        reading: false,
        onread: null,
        onconnection: [Function: onconnection],
        [Symbol(owner)]: [Circular] },
     _usingWorkers: false,
     _workers: [],
     _unref: false,
     allowHalfOpen: true,
     pauseOnConnect: false,
     httpAllowHalfOpen: false,
     timeout: 120000,
     keepAliveTimeout: 5000,
     _pendingResponseData: 0,
     maxHeadersCount: null,
     headersTimeout: 40000,
     _connectionKey: '6::::8090',
     [Symbol(IncomingMessage)]: { [Function: IncomingMessage] super_: [Function] },
     [Symbol(ServerResponse)]: { [Function: ServerResponse] super_: [Function] },
     [Symbol(asyncId)]: 6 },
  timeout: 120000,
  parser:
   HTTPParser {
     '0': [Function: parserOnHeaders],
     '1': [Function: parserOnHeadersComplete],
     '2': [Function: parserOnBody],
     '3': [Function: parserOnMessageComplete],
     '4': [Function: bound onParserExecute],
     _headers: [],
     _url: '',
     socket: [Circular],
     incoming: null,
     outgoing: null,
     maxHeaderPairs: 2000,
     _consumed: true,
     onIncoming: [Function: bound parserOnIncoming],
     parsingHeadersStart: 1585764339094,
     [Symbol(isReused)]: true },
  on: [Function: socketOnWrap],
  _paused: false,
  [Symbol(asyncId)]: 401,
  [Symbol(lastWriteQueueSize)]: 0,
  [Symbol(timeout)]:
   Timeout {
     _called: false,
     _idleTimeout: 120000,
     _idlePrev: [TimersList],
     _idleNext: [TimersList],
     _idleStart: 4102166,
     _onTimeout: [Function: bound ],
     _timerArgs: undefined,
     _repeat: null,
     _destroyed: false,
     [Symbol(unrefed)]: true,
     [Symbol(asyncId)]: 402,
     [Symbol(triggerId)]: 401 },
  [Symbol(kBytesRead)]: 0,
  [Symbol(kBytesWritten)]: 0 }

====Wed Apr 01 2020 11:05:39 ====
GET /accounts

====Wed Apr 01 2020 11:05:39 ====
RESPONSE [object Object],[object Object],[object Object],[object Object],[object Object]

====Wed Apr 01 2020 11:05:39 ====
RESPONSE [{"id":1,"username":"ProRobinHoodTr1","password":"Impossible123!!2","email":"jaledarely","phone":"9165178775","followers":786,"type":"promoImage","following":5001,"owner":1},{"id":2,"username":"StockJesus","password":"Impossible123","email":"robbrandon02","phone":"9165178775","followers":1262,"type":"promoText","following":5001,"owner":1},{"id":3,"username":"joo11244620","password":"Impossible123!!!","email":"abrahaminiguez06@gmail.com","phone":"9165178775","followers":660,"type":null,"following":5001,"owner":1},{"id":5,"username":"MarkZion19","password":"Impossible123!!","email":"teresainiguez12345","phone":"9165178775","followers":0,"type":null,"following":0,"owner":1},{"id":6,"username":"johnson_maximum","password":"Impossible123!","email":null,"phone":"9165178775","followers":160,"type":null,"following":1318,"owner":1}]

====Wed Apr 01 2020 11:11:50 ====
Socket {
  connecting: false,
  _hadError: false,
  _handle:
   TCP {
     reading: true,
     onread: [Function: onStreamRead],
     onconnection: null,
     _consumed: true,
     [Symbol(owner)]: [Circular] },
  _parent: null,
  _host: null,
  _readableState:
   ReadableState {
     objectMode: false,
     highWaterMark: 16384,
     buffer: BufferList { head: null, tail: null, length: 0 },
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: true,
     ended: false,
     endEmitted: false,
     reading: true,
     sync: false,
     needReadable: true,
     emittedReadable: false,
     readableListening: false,
     resumeScheduled: true,
     emitClose: false,
     destroyed: false,
     defaultEncoding: 'utf8',
     awaitDrain: 0,
     readingMore: false,
     decoder: null,
     encoding: null },
  readable: true,
  _events:
   [Object: null prototype] {
     end:
      [ [Function: onReadableStreamEnd],
        [Function: bound socketOnEnd] ],
     drain: [ [Function: ondrain], [Function: bound socketOnDrain] ],
     timeout: [Function: socketOnTimeout],
     data: [Function: bound socketOnData],
     error: [Function: socketOnError],
     close: [Function: bound socketOnClose],
     resume: [Function: onSocketResume],
     pause: [Function: onSocketPause] },
  _eventsCount: 8,
  _maxListeners: undefined,
  _writableState:
   WritableState {
     objectMode: false,
     highWaterMark: 16384,
     finalCalled: false,
     needDrain: false,
     ending: false,
     ended: false,
     finished: false,
     destroyed: false,
     decodeStrings: false,
     defaultEncoding: 'utf8',
     length: 0,
     writing: false,
     corked: 0,
     sync: true,
     bufferProcessing: false,
     onwrite: [Function: bound onwrite],
     writecb: null,
     writelen: 0,
     bufferedRequest: null,
     lastBufferedRequest: null,
     pendingcb: 0,
     prefinished: false,
     errorEmitted: false,
     emitClose: false,
     bufferedRequestCount: 0,
     corkedRequestsFree:
      { next: null,
        entry: null,
        finish: [Function: bound onCorkedFinish] } },
  writable: true,
  allowHalfOpen: true,
  _sockname: null,
  _pendingData: null,
  _pendingEncoding: '',
  server:
   Server {
     _events:
      [Object: null prototype] {
        request: [EventEmitter],
        connection: [Array],
        close: [Function],
        error: [Function],
        listening: [Function] },
     _eventsCount: 5,
     _maxListeners: undefined,
     _connections: 1,
     _handle:
      TCP {
        reading: false,
        onread: null,
        onconnection: [Function: onconnection],
        [Symbol(owner)]: [Circular] },
     _usingWorkers: false,
     _workers: [],
     _unref: false,
     allowHalfOpen: true,
     pauseOnConnect: false,
     httpAllowHalfOpen: false,
     timeout: 120000,
     keepAliveTimeout: 5000,
     _pendingResponseData: 0,
     maxHeadersCount: null,
     headersTimeout: 40000,
     _connectionKey: '6::::8090',
     [Symbol(IncomingMessage)]: { [Function: IncomingMessage] super_: [Function] },
     [Symbol(ServerResponse)]: { [Function: ServerResponse] super_: [Function] },
     [Symbol(asyncId)]: 6 },
  _server:
   Server {
     _events:
      [Object: null prototype] {
        request: [EventEmitter],
        connection: [Array],
        close: [Function],
        error: [Function],
        listening: [Function] },
     _eventsCount: 5,
     _maxListeners: undefined,
     _connections: 1,
     _handle:
      TCP {
        reading: false,
        onread: null,
        onconnection: [Function: onconnection],
        [Symbol(owner)]: [Circular] },
     _usingWorkers: false,
     _workers: [],
     _unref: false,
     allowHalfOpen: true,
     pauseOnConnect: false,
     httpAllowHalfOpen: false,
     timeout: 120000,
     keepAliveTimeout: 5000,
     _pendingResponseData: 0,
     maxHeadersCount: null,
     headersTimeout: 40000,
     _connectionKey: '6::::8090',
     [Symbol(IncomingMessage)]: { [Function: IncomingMessage] super_: [Function] },
     [Symbol(ServerResponse)]: { [Function: ServerResponse] super_: [Function] },
     [Symbol(asyncId)]: 6 },
  timeout: 120000,
  parser:
   HTTPParser {
     '0': [Function: parserOnHeaders],
     '1': [Function: parserOnHeadersComplete],
     '2': [Function: parserOnBody],
     '3': [Function: parserOnMessageComplete],
     '4': [Function: bound onParserExecute],
     _headers: [],
     _url: '',
     socket: [Circular],
     incoming: null,
     outgoing: null,
     maxHeaderPairs: 2000,
     _consumed: true,
     onIncoming: [Function: bound parserOnIncoming],
     parsingHeadersStart: 1585764710007,
     [Symbol(isReused)]: true },
  on: [Function: socketOnWrap],
  _paused: false,
  [Symbol(asyncId)]: 450,
  [Symbol(lastWriteQueueSize)]: 0,
  [Symbol(timeout)]:
   Timeout {
     _called: false,
     _idleTimeout: 120000,
     _idlePrev: [TimersList],
     _idleNext: [TimersList],
     _idleStart: 4473078,
     _onTimeout: [Function: bound ],
     _timerArgs: undefined,
     _repeat: null,
     _destroyed: false,
     [Symbol(unrefed)]: true,
     [Symbol(asyncId)]: 451,
     [Symbol(triggerId)]: 450 },
  [Symbol(kBytesRead)]: 0,
  [Symbol(kBytesWritten)]: 0 }

====Wed Apr 01 2020 11:11:50 ====
GET /accounts

====Wed Apr 01 2020 11:11:50 ====
RESPONSE [object Object],[object Object],[object Object],[object Object],[object Object]

====Wed Apr 01 2020 11:11:50 ====
RESPONSE [{"id":1,"username":"ProRobinHoodTr1","password":"Impossible123!!2","email":"jaledarely","phone":"9165178775","followers":786,"type":"promoImage","following":5001,"owner":1},{"id":2,"username":"StockJesus","password":"Impossible123","email":"robbrandon02","phone":"9165178775","followers":1262,"type":"promoText","following":5001,"owner":1},{"id":3,"username":"joo11244620","password":"Impossible123!!!","email":"abrahaminiguez06@gmail.com","phone":"9165178775","followers":660,"type":null,"following":5001,"owner":1},{"id":5,"username":"MarkZion19","password":"Impossible123!!","email":"teresainiguez12345","phone":"9165178775","followers":0,"type":null,"following":0,"owner":1},{"id":6,"username":"johnson_maximum","password":"Impossible123!","email":null,"phone":"9165178775","followers":160,"type":null,"following":1318,"owner":1}]

====Wed Apr 01 2020 11:21:58 ====
Socket {
  connecting: false,
  _hadError: false,
  _handle:
   TCP {
     reading: true,
     onread: [Function: onStreamRead],
     onconnection: null,
     _consumed: true,
     [Symbol(owner)]: [Circular] },
  _parent: null,
  _host: null,
  _readableState:
   ReadableState {
     objectMode: false,
     highWaterMark: 16384,
     buffer: BufferList { head: null, tail: null, length: 0 },
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: true,
     ended: false,
     endEmitted: false,
     reading: true,
     sync: false,
     needReadable: true,
     emittedReadable: false,
     readableListening: false,
     resumeScheduled: true,
     emitClose: false,
     destroyed: false,
     defaultEncoding: 'utf8',
     awaitDrain: 0,
     readingMore: false,
     decoder: null,
     encoding: null },
  readable: true,
  _events:
   [Object: null prototype] {
     end:
      [ [Function: onReadableStreamEnd],
        [Function: bound socketOnEnd] ],
     drain: [ [Function: ondrain], [Function: bound socketOnDrain] ],
     timeout: [Function: socketOnTimeout],
     data: [Function: bound socketOnData],
     error: [Function: socketOnError],
     close: [Function: bound socketOnClose],
     resume: [Function: onSocketResume],
     pause: [Function: onSocketPause] },
  _eventsCount: 8,
  _maxListeners: undefined,
  _writableState:
   WritableState {
     objectMode: false,
     highWaterMark: 16384,
     finalCalled: false,
     needDrain: false,
     ending: false,
     ended: false,
     finished: false,
     destroyed: false,
     decodeStrings: false,
     defaultEncoding: 'utf8',
     length: 0,
     writing: false,
     corked: 0,
     sync: true,
     bufferProcessing: false,
     onwrite: [Function: bound onwrite],
     writecb: null,
     writelen: 0,
     bufferedRequest: null,
     lastBufferedRequest: null,
     pendingcb: 0,
     prefinished: false,
     errorEmitted: false,
     emitClose: false,
     bufferedRequestCount: 0,
     corkedRequestsFree:
      { next: null,
        entry: null,
        finish: [Function: bound onCorkedFinish] } },
  writable: true,
  allowHalfOpen: true,
  _sockname: null,
  _pendingData: null,
  _pendingEncoding: '',
  server:
   Server {
     _events:
      [Object: null prototype] {
        request: [EventEmitter],
        connection: [Array],
        close: [Function],
        error: [Function],
        listening: [Function] },
     _eventsCount: 5,
     _maxListeners: undefined,
     _connections: 1,
     _handle:
      TCP {
        reading: false,
        onread: null,
        onconnection: [Function: onconnection],
        [Symbol(owner)]: [Circular] },
     _usingWorkers: false,
     _workers: [],
     _unref: false,
     allowHalfOpen: true,
     pauseOnConnect: false,
     httpAllowHalfOpen: false,
     timeout: 120000,
     keepAliveTimeout: 5000,
     _pendingResponseData: 0,
     maxHeadersCount: null,
     headersTimeout: 40000,
     _connectionKey: '6::::8090',
     [Symbol(IncomingMessage)]: { [Function: IncomingMessage] super_: [Function] },
     [Symbol(ServerResponse)]: { [Function: ServerResponse] super_: [Function] },
     [Symbol(asyncId)]: 6 },
  _server:
   Server {
     _events:
      [Object: null prototype] {
        request: [EventEmitter],
        connection: [Array],
        close: [Function],
        error: [Function],
        listening: [Function] },
     _eventsCount: 5,
     _maxListeners: undefined,
     _connections: 1,
     _handle:
      TCP {
        reading: false,
        onread: null,
        onconnection: [Function: onconnection],
        [Symbol(owner)]: [Circular] },
     _usingWorkers: false,
     _workers: [],
     _unref: false,
     allowHalfOpen: true,
     pauseOnConnect: false,
     httpAllowHalfOpen: false,
     timeout: 120000,
     keepAliveTimeout: 5000,
     _pendingResponseData: 0,
     maxHeadersCount: null,
     headersTimeout: 40000,
     _connectionKey: '6::::8090',
     [Symbol(IncomingMessage)]: { [Function: IncomingMessage] super_: [Function] },
     [Symbol(ServerResponse)]: { [Function: ServerResponse] super_: [Function] },
     [Symbol(asyncId)]: 6 },
  timeout: 120000,
  parser:
   HTTPParser {
     '0': [Function: parserOnHeaders],
     '1': [Function: parserOnHeadersComplete],
     '2': [Function: parserOnBody],
     '3': [Function: parserOnMessageComplete],
     '4': [Function: bound onParserExecute],
     _headers: [],
     _url: '',
     socket: [Circular],
     incoming: null,
     outgoing: null,
     maxHeaderPairs: 2000,
     _consumed: true,
     onIncoming: [Function: bound parserOnIncoming],
     parsingHeadersStart: 1585765318611,
     [Symbol(isReused)]: true },
  on: [Function: socketOnWrap],
  _paused: false,
  [Symbol(asyncId)]: 499,
  [Symbol(lastWriteQueueSize)]: 0,
  [Symbol(timeout)]:
   Timeout {
     _called: false,
     _idleTimeout: 120000,
     _idlePrev: [TimersList],
     _idleNext: [TimersList],
     _idleStart: 5081676,
     _onTimeout: [Function: bound ],
     _timerArgs: undefined,
     _repeat: null,
     _destroyed: false,
     [Symbol(unrefed)]: true,
     [Symbol(asyncId)]: 500,
     [Symbol(triggerId)]: 499 },
  [Symbol(kBytesRead)]: 0,
  [Symbol(kBytesWritten)]: 0 }

====Wed Apr 01 2020 11:21:58 ====
GET /accounts

====Wed Apr 01 2020 11:21:58 ====
RESPONSE [object Object],[object Object],[object Object],[object Object],[object Object]

====Wed Apr 01 2020 11:21:58 ====
RESPONSE [{"id":1,"username":"ProRobinHoodTr1","password":"Impossible123!!2","email":"jaledarely","phone":"9165178775","followers":786,"type":"promoImage","following":5001,"owner":1},{"id":2,"username":"StockJesus","password":"Impossible123","email":"robbrandon02","phone":"9165178775","followers":1262,"type":"promoText","following":5001,"owner":1},{"id":3,"username":"joo11244620","password":"Impossible123!!!","email":"abrahaminiguez06@gmail.com","phone":"9165178775","followers":660,"type":null,"following":5001,"owner":1},{"id":5,"username":"MarkZion19","password":"Impossible123!!","email":"teresainiguez12345","phone":"9165178775","followers":0,"type":null,"following":0,"owner":1},{"id":6,"username":"johnson_maximum","password":"Impossible123!","email":null,"phone":"9165178775","followers":160,"type":null,"following":1318,"owner":1}]

====Wed Apr 01 2020 11:22:22 ====
Socket {
  connecting: false,
  _hadError: false,
  _handle:
   TCP {
     reading: true,
     onread: [Function: onStreamRead],
     onconnection: null,
     _consumed: true,
     [Symbol(owner)]: [Circular] },
  _parent: null,
  _host: null,
  _readableState:
   ReadableState {
     objectMode: false,
     highWaterMark: 16384,
     buffer: BufferList { head: null, tail: null, length: 0 },
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: true,
     ended: false,
     endEmitted: false,
     reading: true,
     sync: false,
     needReadable: true,
     emittedReadable: false,
     readableListening: false,
     resumeScheduled: true,
     emitClose: false,
     destroyed: false,
     defaultEncoding: 'utf8',
     awaitDrain: 0,
     readingMore: false,
     decoder: null,
     encoding: null },
  readable: true,
  _events:
   [Object: null prototype] {
     end:
      [ [Function: onReadableStreamEnd],
        [Function: bound socketOnEnd] ],
     drain: [ [Function: ondrain], [Function: bound socketOnDrain] ],
     timeout: [Function: socketOnTimeout],
     data: [Function: bound socketOnData],
     error: [Function: socketOnError],
     close: [Function: bound socketOnClose],
     resume: [Function: onSocketResume],
     pause: [Function: onSocketPause] },
  _eventsCount: 8,
  _maxListeners: undefined,
  _writableState:
   WritableState {
     objectMode: false,
     highWaterMark: 16384,
     finalCalled: false,
     needDrain: false,
     ending: false,
     ended: false,
     finished: false,
     destroyed: false,
     decodeStrings: false,
     defaultEncoding: 'utf8',
     length: 0,
     writing: false,
     corked: 0,
     sync: true,
     bufferProcessing: false,
     onwrite: [Function: bound onwrite],
     writecb: null,
     writelen: 0,
     bufferedRequest: null,
     lastBufferedRequest: null,
     pendingcb: 0,
     prefinished: false,
     errorEmitted: false,
     emitClose: false,
     bufferedRequestCount: 0,
     corkedRequestsFree:
      { next: null,
        entry: null,
        finish: [Function: bound onCorkedFinish] } },
  writable: true,
  allowHalfOpen: true,
  _sockname: null,
  _pendingData: null,
  _pendingEncoding: '',
  server:
   Server {
     _events:
      [Object: null prototype] {
        request: [EventEmitter],
        connection: [Array],
        close: [Function],
        error: [Function],
        listening: [Function] },
     _eventsCount: 5,
     _maxListeners: undefined,
     _connections: 1,
     _handle:
      TCP {
        reading: false,
        onread: null,
        onconnection: [Function: onconnection],
        [Symbol(owner)]: [Circular] },
     _usingWorkers: false,
     _workers: [],
     _unref: false,
     allowHalfOpen: true,
     pauseOnConnect: false,
     httpAllowHalfOpen: false,
     timeout: 120000,
     keepAliveTimeout: 5000,
     _pendingResponseData: 0,
     maxHeadersCount: null,
     headersTimeout: 40000,
     _connectionKey: '6::::8090',
     [Symbol(IncomingMessage)]: { [Function: IncomingMessage] super_: [Function] },
     [Symbol(ServerResponse)]: { [Function: ServerResponse] super_: [Function] },
     [Symbol(asyncId)]: 6 },
  _server:
   Server {
     _events:
      [Object: null prototype] {
        request: [EventEmitter],
        connection: [Array],
        close: [Function],
        error: [Function],
        listening: [Function] },
     _eventsCount: 5,
     _maxListeners: undefined,
     _connections: 1,
     _handle:
      TCP {
        reading: false,
        onread: null,
        onconnection: [Function: onconnection],
        [Symbol(owner)]: [Circular] },
     _usingWorkers: false,
     _workers: [],
     _unref: false,
     allowHalfOpen: true,
     pauseOnConnect: false,
     httpAllowHalfOpen: false,
     timeout: 120000,
     keepAliveTimeout: 5000,
     _pendingResponseData: 0,
     maxHeadersCount: null,
     headersTimeout: 40000,
     _connectionKey: '6::::8090',
     [Symbol(IncomingMessage)]: { [Function: IncomingMessage] super_: [Function] },
     [Symbol(ServerResponse)]: { [Function: ServerResponse] super_: [Function] },
     [Symbol(asyncId)]: 6 },
  timeout: 120000,
  parser:
   HTTPParser {
     '0': [Function: parserOnHeaders],
     '1': [Function: parserOnHeadersComplete],
     '2': [Function: parserOnBody],
     '3': [Function: parserOnMessageComplete],
     '4': [Function: bound onParserExecute],
     _headers: [],
     _url: '',
     socket: [Circular],
     incoming: null,
     outgoing: null,
     maxHeaderPairs: 2000,
     _consumed: true,
     onIncoming: [Function: bound parserOnIncoming],
     parsingHeadersStart: 1585765342369,
     [Symbol(isReused)]: true },
  on: [Function: socketOnWrap],
  _paused: false,
  [Symbol(asyncId)]: 548,
  [Symbol(lastWriteQueueSize)]: 0,
  [Symbol(timeout)]:
   Timeout {
     _called: false,
     _idleTimeout: 120000,
     _idlePrev: [TimersList],
     _idleNext: [TimersList],
     _idleStart: 5105435,
     _onTimeout: [Function: bound ],
     _timerArgs: undefined,
     _repeat: null,
     _destroyed: false,
     [Symbol(unrefed)]: true,
     [Symbol(asyncId)]: 549,
     [Symbol(triggerId)]: 548 },
  [Symbol(kBytesRead)]: 0,
  [Symbol(kBytesWritten)]: 0 }

====Wed Apr 01 2020 11:22:22 ====
GET /accounts

====Wed Apr 01 2020 11:22:22 ====
RESPONSE [object Object],[object Object],[object Object],[object Object],[object Object]

====Wed Apr 01 2020 11:22:22 ====
RESPONSE [{"id":1,"username":"ProRobinHoodTr1","password":"Impossible123!!2","email":"jaledarely","phone":"9165178775","followers":786,"type":"promoImage","following":5001,"owner":1},{"id":2,"username":"StockJesus","password":"Impossible123","email":"robbrandon02","phone":"9165178775","followers":1262,"type":"promoText","following":5001,"owner":1},{"id":3,"username":"joo11244620","password":"Impossible123!!!","email":"abrahaminiguez06@gmail.com","phone":"9165178775","followers":660,"type":null,"following":5001,"owner":1},{"id":5,"username":"MarkZion19","password":"Impossible123!!","email":"teresainiguez12345","phone":"9165178775","followers":0,"type":null,"following":0,"owner":1},{"id":6,"username":"johnson_maximum","password":"Impossible123!","email":null,"phone":"9165178775","followers":160,"type":null,"following":1318,"owner":1}]

====Wed Apr 01 2020 11:22:28 ====
Socket {
  connecting: false,
  _hadError: false,
  _handle:
   TCP {
     reading: true,
     onread: [Function: onStreamRead],
     onconnection: null,
     _consumed: true,
     [Symbol(owner)]: [Circular] },
  _parent: null,
  _host: null,
  _readableState:
   ReadableState {
     objectMode: false,
     highWaterMark: 16384,
     buffer: BufferList { head: null, tail: null, length: 0 },
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: true,
     ended: false,
     endEmitted: false,
     reading: true,
     sync: false,
     needReadable: true,
     emittedReadable: false,
     readableListening: false,
     resumeScheduled: true,
     emitClose: false,
     destroyed: false,
     defaultEncoding: 'utf8',
     awaitDrain: 0,
     readingMore: false,
     decoder: null,
     encoding: null },
  readable: true,
  _events:
   [Object: null prototype] {
     end:
      [ [Function: onReadableStreamEnd],
        [Function: bound socketOnEnd] ],
     drain: [ [Function: ondrain], [Function: bound socketOnDrain] ],
     timeout: [Function: socketOnTimeout],
     data: [Function: bound socketOnData],
     error: [Function: socketOnError],
     close: [Function: bound socketOnClose],
     resume: [Function: onSocketResume],
     pause: [Function: onSocketPause] },
  _eventsCount: 8,
  _maxListeners: undefined,
  _writableState:
   WritableState {
     objectMode: false,
     highWaterMark: 16384,
     finalCalled: false,
     needDrain: false,
     ending: false,
     ended: false,
     finished: false,
     destroyed: false,
     decodeStrings: false,
     defaultEncoding: 'utf8',
     length: 0,
     writing: false,
     corked: 0,
     sync: true,
     bufferProcessing: false,
     onwrite: [Function: bound onwrite],
     writecb: null,
     writelen: 0,
     bufferedRequest: null,
     lastBufferedRequest: null,
     pendingcb: 0,
     prefinished: false,
     errorEmitted: false,
     emitClose: false,
     bufferedRequestCount: 0,
     corkedRequestsFree:
      { next: null,
        entry: null,
        finish: [Function: bound onCorkedFinish] } },
  writable: true,
  allowHalfOpen: true,
  _sockname: null,
  _pendingData: null,
  _pendingEncoding: '',
  server:
   Server {
     _events:
      [Object: null prototype] {
        request: [EventEmitter],
        connection: [Array],
        close: [Function],
        error: [Function],
        listening: [Function] },
     _eventsCount: 5,
     _maxListeners: undefined,
     _connections: 1,
     _handle:
      TCP {
        reading: false,
        onread: null,
        onconnection: [Function: onconnection],
        [Symbol(owner)]: [Circular] },
     _usingWorkers: false,
     _workers: [],
     _unref: false,
     allowHalfOpen: true,
     pauseOnConnect: false,
     httpAllowHalfOpen: false,
     timeout: 120000,
     keepAliveTimeout: 5000,
     _pendingResponseData: 0,
     maxHeadersCount: null,
     headersTimeout: 40000,
     _connectionKey: '6::::8090',
     [Symbol(IncomingMessage)]: { [Function: IncomingMessage] super_: [Function] },
     [Symbol(ServerResponse)]: { [Function: ServerResponse] super_: [Function] },
     [Symbol(asyncId)]: 6 },
  _server:
   Server {
     _events:
      [Object: null prototype] {
        request: [EventEmitter],
        connection: [Array],
        close: [Function],
        error: [Function],
        listening: [Function] },
     _eventsCount: 5,
     _maxListeners: undefined,
     _connections: 1,
     _handle:
      TCP {
        reading: false,
        onread: null,
        onconnection: [Function: onconnection],
        [Symbol(owner)]: [Circular] },
     _usingWorkers: false,
     _workers: [],
     _unref: false,
     allowHalfOpen: true,
     pauseOnConnect: false,
     httpAllowHalfOpen: false,
     timeout: 120000,
     keepAliveTimeout: 5000,
     _pendingResponseData: 0,
     maxHeadersCount: null,
     headersTimeout: 40000,
     _connectionKey: '6::::8090',
     [Symbol(IncomingMessage)]: { [Function: IncomingMessage] super_: [Function] },
     [Symbol(ServerResponse)]: { [Function: ServerResponse] super_: [Function] },
     [Symbol(asyncId)]: 6 },
  timeout: 120000,
  parser:
   HTTPParser {
     '0': [Function: parserOnHeaders],
     '1': [Function: parserOnHeadersComplete],
     '2': [Function: parserOnBody],
     '3': [Function: parserOnMessageComplete],
     '4': [Function: bound onParserExecute],
     _headers: [],
     _url: '',
     socket: [Circular],
     incoming: null,
     outgoing: null,
     maxHeaderPairs: 2000,
     _consumed: true,
     onIncoming: [Function: bound parserOnIncoming],
     parsingHeadersStart: 1585765348782,
     [Symbol(isReused)]: true },
  on: [Function: socketOnWrap],
  _paused: false,
  [Symbol(asyncId)]: 596,
  [Symbol(lastWriteQueueSize)]: 0,
  [Symbol(timeout)]:
   Timeout {
     _called: false,
     _idleTimeout: 120000,
     _idlePrev: [TimersList],
     _idleNext: [TimersList],
     _idleStart: 5111848,
     _onTimeout: [Function: bound ],
     _timerArgs: undefined,
     _repeat: null,
     _destroyed: false,
     [Symbol(unrefed)]: true,
     [Symbol(asyncId)]: 597,
     [Symbol(triggerId)]: 596 },
  [Symbol(kBytesRead)]: 0,
  [Symbol(kBytesWritten)]: 0 }

====Wed Apr 01 2020 11:22:28 ====
GET /accounts

====Wed Apr 01 2020 11:22:28 ====
RESPONSE [object Object],[object Object],[object Object],[object Object],[object Object]

====Wed Apr 01 2020 11:22:28 ====
RESPONSE [{"id":1,"username":"ProRobinHoodTr1","password":"Impossible123!!2","email":"jaledarely","phone":"9165178775","followers":786,"type":"promoImage","following":5001,"owner":1},{"id":2,"username":"StockJesus","password":"Impossible123","email":"robbrandon02","phone":"9165178775","followers":1262,"type":"promoText","following":5001,"owner":1},{"id":3,"username":"joo11244620","password":"Impossible123!!!","email":"abrahaminiguez06@gmail.com","phone":"9165178775","followers":660,"type":null,"following":5001,"owner":1},{"id":5,"username":"MarkZion19","password":"Impossible123!!","email":"teresainiguez12345","phone":"9165178775","followers":0,"type":null,"following":0,"owner":1},{"id":6,"username":"johnson_maximum","password":"Impossible123!","email":null,"phone":"9165178775","followers":160,"type":null,"following":1318,"owner":1}]

====Wed Apr 01 2020 11:29:03 ====
Socket {
  connecting: false,
  _hadError: false,
  _handle:
   TCP {
     reading: true,
     onread: [Function: onStreamRead],
     onconnection: null,
     _consumed: true,
     [Symbol(owner)]: [Circular] },
  _parent: null,
  _host: null,
  _readableState:
   ReadableState {
     objectMode: false,
     highWaterMark: 16384,
     buffer: BufferList { head: null, tail: null, length: 0 },
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: true,
     ended: false,
     endEmitted: false,
     reading: true,
     sync: false,
     needReadable: true,
     emittedReadable: false,
     readableListening: false,
     resumeScheduled: true,
     emitClose: false,
     destroyed: false,
     defaultEncoding: 'utf8',
     awaitDrain: 0,
     readingMore: false,
     decoder: null,
     encoding: null },
  readable: true,
  _events:
   [Object: null prototype] {
     end:
      [ [Function: onReadableStreamEnd],
        [Function: bound socketOnEnd] ],
     drain: [ [Function: ondrain], [Function: bound socketOnDrain] ],
     timeout: [Function: socketOnTimeout],
     data: [Function: bound socketOnData],
     error: [Function: socketOnError],
     close: [Function: bound socketOnClose],
     resume: [Function: onSocketResume],
     pause: [Function: onSocketPause] },
  _eventsCount: 8,
  _maxListeners: undefined,
  _writableState:
   WritableState {
     objectMode: false,
     highWaterMark: 16384,
     finalCalled: false,
     needDrain: false,
     ending: false,
     ended: false,
     finished: false,
     destroyed: false,
     decodeStrings: false,
     defaultEncoding: 'utf8',
     length: 0,
     writing: false,
     corked: 0,
     sync: true,
     bufferProcessing: false,
     onwrite: [Function: bound onwrite],
     writecb: null,
     writelen: 0,
     bufferedRequest: null,
     lastBufferedRequest: null,
     pendingcb: 0,
     prefinished: false,
     errorEmitted: false,
     emitClose: false,
     bufferedRequestCount: 0,
     corkedRequestsFree:
      { next: null,
        entry: null,
        finish: [Function: bound onCorkedFinish] } },
  writable: true,
  allowHalfOpen: true,
  _sockname: null,
  _pendingData: null,
  _pendingEncoding: '',
  server:
   Server {
     _events:
      [Object: null prototype] {
        request: [EventEmitter],
        connection: [Array],
        close: [Function],
        error: [Function],
        listening: [Function] },
     _eventsCount: 5,
     _maxListeners: undefined,
     _connections: 1,
     _handle:
      TCP {
        reading: false,
        onread: null,
        onconnection: [Function: onconnection],
        [Symbol(owner)]: [Circular] },
     _usingWorkers: false,
     _workers: [],
     _unref: false,
     allowHalfOpen: true,
     pauseOnConnect: false,
     httpAllowHalfOpen: false,
     timeout: 120000,
     keepAliveTimeout: 5000,
     _pendingResponseData: 0,
     maxHeadersCount: null,
     headersTimeout: 40000,
     _connectionKey: '6::::8090',
     [Symbol(IncomingMessage)]: { [Function: IncomingMessage] super_: [Function] },
     [Symbol(ServerResponse)]: { [Function: ServerResponse] super_: [Function] },
     [Symbol(asyncId)]: 6 },
  _server:
   Server {
     _events:
      [Object: null prototype] {
        request: [EventEmitter],
        connection: [Array],
        close: [Function],
        error: [Function],
        listening: [Function] },
     _eventsCount: 5,
     _maxListeners: undefined,
     _connections: 1,
     _handle:
      TCP {
        reading: false,
        onread: null,
        onconnection: [Function: onconnection],
        [Symbol(owner)]: [Circular] },
     _usingWorkers: false,
     _workers: [],
     _unref: false,
     allowHalfOpen: true,
     pauseOnConnect: false,
     httpAllowHalfOpen: false,
     timeout: 120000,
     keepAliveTimeout: 5000,
     _pendingResponseData: 0,
     maxHeadersCount: null,
     headersTimeout: 40000,
     _connectionKey: '6::::8090',
     [Symbol(IncomingMessage)]: { [Function: IncomingMessage] super_: [Function] },
     [Symbol(ServerResponse)]: { [Function: ServerResponse] super_: [Function] },
     [Symbol(asyncId)]: 6 },
  timeout: 120000,
  parser:
   HTTPParser {
     '0': [Function: parserOnHeaders],
     '1': [Function: parserOnHeadersComplete],
     '2': [Function: parserOnBody],
     '3': [Function: parserOnMessageComplete],
     '4': [Function: bound onParserExecute],
     _headers: [],
     _url: '',
     socket: [Circular],
     incoming: null,
     outgoing: null,
     maxHeaderPairs: 2000,
     _consumed: true,
     onIncoming: [Function: bound parserOnIncoming],
     parsingHeadersStart: 1585765743795,
     [Symbol(isReused)]: true },
  on: [Function: socketOnWrap],
  _paused: false,
  [Symbol(asyncId)]: 643,
  [Symbol(lastWriteQueueSize)]: 0,
  [Symbol(timeout)]:
   Timeout {
     _called: false,
     _idleTimeout: 120000,
     _idlePrev: [TimersList],
     _idleNext: [TimersList],
     _idleStart: 5506860,
     _onTimeout: [Function: bound ],
     _timerArgs: undefined,
     _repeat: null,
     _destroyed: false,
     [Symbol(unrefed)]: true,
     [Symbol(asyncId)]: 644,
     [Symbol(triggerId)]: 643 },
  [Symbol(kBytesRead)]: 0,
  [Symbol(kBytesWritten)]: 0 }

====Wed Apr 01 2020 11:29:03 ====
GET /accounts

====Wed Apr 01 2020 11:29:03 ====
RESPONSE [object Object],[object Object],[object Object],[object Object],[object Object]

====Wed Apr 01 2020 11:29:03 ====
RESPONSE [{"id":1,"username":"ProRobinHoodTr1","password":"Impossible123!!2","email":"jaledarely","phone":"9165178775","followers":786,"type":"promoImage","following":5001,"owner":1},{"id":2,"username":"StockJesus","password":"Impossible123","email":"robbrandon02","phone":"9165178775","followers":1262,"type":"promoText","following":5001,"owner":1},{"id":3,"username":"joo11244620","password":"Impossible123!!!","email":"abrahaminiguez06@gmail.com","phone":"9165178775","followers":660,"type":null,"following":5001,"owner":1},{"id":5,"username":"MarkZion19","password":"Impossible123!!","email":"teresainiguez12345","phone":"9165178775","followers":0,"type":null,"following":0,"owner":1},{"id":6,"username":"johnson_maximum","password":"Impossible123!","email":null,"phone":"9165178775","followers":160,"type":null,"following":1318,"owner":1}]

====Wed Apr 01 2020 11:33:59 ====
undefined

====Wed Apr 01 2020 11:34:03 ====
Socket {
  connecting: false,
  _hadError: false,
  _handle:
   TCP {
     reading: true,
     onread: [Function: onStreamRead],
     onconnection: null,
     _consumed: true,
     [Symbol(owner)]: [Circular] },
  _parent: null,
  _host: null,
  _readableState:
   ReadableState {
     objectMode: false,
     highWaterMark: 16384,
     buffer: BufferList { head: null, tail: null, length: 0 },
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: true,
     ended: false,
     endEmitted: false,
     reading: true,
     sync: false,
     needReadable: true,
     emittedReadable: false,
     readableListening: false,
     resumeScheduled: true,
     emitClose: false,
     destroyed: false,
     defaultEncoding: 'utf8',
     awaitDrain: 0,
     readingMore: false,
     decoder: null,
     encoding: null },
  readable: true,
  _events:
   [Object: null prototype] {
     end:
      [ [Function: onReadableStreamEnd],
        [Function: bound socketOnEnd] ],
     drain: [ [Function: ondrain], [Function: bound socketOnDrain] ],
     timeout: [Function: socketOnTimeout],
     data: [Function: bound socketOnData],
     error: [Function: socketOnError],
     close: [Function: bound socketOnClose],
     resume: [Function: onSocketResume],
     pause: [Function: onSocketPause] },
  _eventsCount: 8,
  _maxListeners: undefined,
  _writableState:
   WritableState {
     objectMode: false,
     highWaterMark: 16384,
     finalCalled: false,
     needDrain: false,
     ending: false,
     ended: false,
     finished: false,
     destroyed: false,
     decodeStrings: false,
     defaultEncoding: 'utf8',
     length: 0,
     writing: false,
     corked: 0,
     sync: true,
     bufferProcessing: false,
     onwrite: [Function: bound onwrite],
     writecb: null,
     writelen: 0,
     bufferedRequest: null,
     lastBufferedRequest: null,
     pendingcb: 0,
     prefinished: false,
     errorEmitted: false,
     emitClose: false,
     bufferedRequestCount: 0,
     corkedRequestsFree:
      { next: null,
        entry: null,
        finish: [Function: bound onCorkedFinish] } },
  writable: true,
  allowHalfOpen: true,
  _sockname: null,
  _pendingData: null,
  _pendingEncoding: '',
  server:
   Server {
     _events:
      [Object: null prototype] {
        request: [EventEmitter],
        connection: [Array],
        close: [Function],
        error: [Function],
        listening: [Function] },
     _eventsCount: 5,
     _maxListeners: undefined,
     _connections: 1,
     _handle:
      TCP {
        reading: false,
        onread: null,
        onconnection: [Function: onconnection],
        [Symbol(owner)]: [Circular] },
     _usingWorkers: false,
     _workers: [],
     _unref: false,
     allowHalfOpen: true,
     pauseOnConnect: false,
     httpAllowHalfOpen: false,
     timeout: 120000,
     keepAliveTimeout: 5000,
     _pendingResponseData: 0,
     maxHeadersCount: null,
     headersTimeout: 40000,
     _connectionKey: '6::::8090',
     [Symbol(IncomingMessage)]: { [Function: IncomingMessage] super_: [Function] },
     [Symbol(ServerResponse)]: { [Function: ServerResponse] super_: [Function] },
     [Symbol(asyncId)]: 7 },
  _server:
   Server {
     _events:
      [Object: null prototype] {
        request: [EventEmitter],
        connection: [Array],
        close: [Function],
        error: [Function],
        listening: [Function] },
     _eventsCount: 5,
     _maxListeners: undefined,
     _connections: 1,
     _handle:
      TCP {
        reading: false,
        onread: null,
        onconnection: [Function: onconnection],
        [Symbol(owner)]: [Circular] },
     _usingWorkers: false,
     _workers: [],
     _unref: false,
     allowHalfOpen: true,
     pauseOnConnect: false,
     httpAllowHalfOpen: false,
     timeout: 120000,
     keepAliveTimeout: 5000,
     _pendingResponseData: 0,
     maxHeadersCount: null,
     headersTimeout: 40000,
     _connectionKey: '6::::8090',
     [Symbol(IncomingMessage)]: { [Function: IncomingMessage] super_: [Function] },
     [Symbol(ServerResponse)]: { [Function: ServerResponse] super_: [Function] },
     [Symbol(asyncId)]: 7 },
  timeout: 120000,
  parser:
   HTTPParser {
     '0': [Function: parserOnHeaders],
     '1': [Function: parserOnHeadersComplete],
     '2': [Function: parserOnBody],
     '3': [Function: parserOnMessageComplete],
     '4': [Function: bound onParserExecute],
     _headers: [],
     _url: '',
     socket: [Circular],
     incoming: null,
     outgoing: null,
     maxHeaderPairs: 2000,
     _consumed: true,
     onIncoming: [Function: bound parserOnIncoming],
     parsingHeadersStart: 1585766043658,
     [Symbol(isReused)]: false },
  on: [Function: socketOnWrap],
  _paused: false,
  [Symbol(asyncId)]: 11,
  [Symbol(lastWriteQueueSize)]: 0,
  [Symbol(timeout)]:
   Timeout {
     _called: false,
     _idleTimeout: 120000,
     _idlePrev: [TimersList],
     _idleNext: [TimersList],
     _idleStart: 4447,
     _onTimeout: [Function: bound ],
     _timerArgs: undefined,
     _repeat: null,
     _destroyed: false,
     [Symbol(unrefed)]: true,
     [Symbol(asyncId)]: 12,
     [Symbol(triggerId)]: 11 },
  [Symbol(kBytesRead)]: 0,
  [Symbol(kBytesWritten)]: 0 }

====Wed Apr 01 2020 11:34:03 ====
GET /accounts

====Wed Apr 01 2020 11:34:03 ====
RESPONSE [object Object],[object Object],[object Object],[object Object],[object Object]

====Wed Apr 01 2020 11:34:03 ====
RESPONSE [{"id":1,"username":"ProRobinHoodTr1","password":"Impossible123!!2","email":"jaledarely","phone":"9165178775","followers":786,"type":"promoImage","following":5001,"owner":1},{"id":2,"username":"StockJesus","password":"Impossible123","email":"robbrandon02","phone":"9165178775","followers":1262,"type":"promoText","following":5001,"owner":1},{"id":3,"username":"joo11244620","password":"Impossible123!!!","email":"abrahaminiguez06@gmail.com","phone":"9165178775","followers":660,"type":null,"following":5001,"owner":1},{"id":5,"username":"MarkZion19","password":"Impossible123!!","email":"teresainiguez12345","phone":"9165178775","followers":0,"type":null,"following":0,"owner":1},{"id":6,"username":"johnson_maximum","password":"Impossible123!","email":null,"phone":"9165178775","followers":160,"type":null,"following":1318,"owner":1}]

====Wed Apr 01 2020 11:38:43 ====
undefined

====Wed Apr 01 2020 11:43:56 ====
Socket {
  connecting: false,
  _hadError: false,
  _handle:
   TCP {
     reading: true,
     onread: [Function: onStreamRead],
     onconnection: null,
     _consumed: true,
     [Symbol(owner)]: [Circular] },
  _parent: null,
  _host: null,
  _readableState:
   ReadableState {
     objectMode: false,
     highWaterMark: 16384,
     buffer: BufferList { head: null, tail: null, length: 0 },
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: true,
     ended: false,
     endEmitted: false,
     reading: true,
     sync: false,
     needReadable: true,
     emittedReadable: false,
     readableListening: false,
     resumeScheduled: true,
     emitClose: false,
     destroyed: false,
     defaultEncoding: 'utf8',
     awaitDrain: 0,
     readingMore: false,
     decoder: null,
     encoding: null },
  readable: true,
  _events:
   [Object: null prototype] {
     end:
      [ [Function: onReadableStreamEnd],
        [Function: bound socketOnEnd] ],
     drain: [ [Function: ondrain], [Function: bound socketOnDrain] ],
     timeout: [Function: socketOnTimeout],
     data: [Function: bound socketOnData],
     error: [Function: socketOnError],
     close: [Function: bound socketOnClose],
     resume: [Function: onSocketResume],
     pause: [Function: onSocketPause] },
  _eventsCount: 8,
  _maxListeners: undefined,
  _writableState:
   WritableState {
     objectMode: false,
     highWaterMark: 16384,
     finalCalled: false,
     needDrain: false,
     ending: false,
     ended: false,
     finished: false,
     destroyed: false,
     decodeStrings: false,
     defaultEncoding: 'utf8',
     length: 0,
     writing: false,
     corked: 0,
     sync: true,
     bufferProcessing: false,
     onwrite: [Function: bound onwrite],
     writecb: null,
     writelen: 0,
     bufferedRequest: null,
     lastBufferedRequest: null,
     pendingcb: 0,
     prefinished: false,
     errorEmitted: false,
     emitClose: false,
     bufferedRequestCount: 0,
     corkedRequestsFree:
      { next: null,
        entry: null,
        finish: [Function: bound onCorkedFinish] } },
  writable: true,
  allowHalfOpen: true,
  _sockname: null,
  _pendingData: null,
  _pendingEncoding: '',
  server:
   Server {
     _events:
      [Object: null prototype] {
        request: [EventEmitter],
        connection: [Array],
        close: [Function],
        error: [Function],
        listening: [Function] },
     _eventsCount: 5,
     _maxListeners: undefined,
     _connections: 1,
     _handle:
      TCP {
        reading: false,
        onread: null,
        onconnection: [Function: onconnection],
        [Symbol(owner)]: [Circular] },
     _usingWorkers: false,
     _workers: [],
     _unref: false,
     allowHalfOpen: true,
     pauseOnConnect: false,
     httpAllowHalfOpen: false,
     timeout: 120000,
     keepAliveTimeout: 5000,
     _pendingResponseData: 0,
     maxHeadersCount: null,
     headersTimeout: 40000,
     _connectionKey: '6::::8090',
     [Symbol(IncomingMessage)]: { [Function: IncomingMessage] super_: [Function] },
     [Symbol(ServerResponse)]: { [Function: ServerResponse] super_: [Function] },
     [Symbol(asyncId)]: 7 },
  _server:
   Server {
     _events:
      [Object: null prototype] {
        request: [EventEmitter],
        connection: [Array],
        close: [Function],
        error: [Function],
        listening: [Function] },
     _eventsCount: 5,
     _maxListeners: undefined,
     _connections: 1,
     _handle:
      TCP {
        reading: false,
        onread: null,
        onconnection: [Function: onconnection],
        [Symbol(owner)]: [Circular] },
     _usingWorkers: false,
     _workers: [],
     _unref: false,
     allowHalfOpen: true,
     pauseOnConnect: false,
     httpAllowHalfOpen: false,
     timeout: 120000,
     keepAliveTimeout: 5000,
     _pendingResponseData: 0,
     maxHeadersCount: null,
     headersTimeout: 40000,
     _connectionKey: '6::::8090',
     [Symbol(IncomingMessage)]: { [Function: IncomingMessage] super_: [Function] },
     [Symbol(ServerResponse)]: { [Function: ServerResponse] super_: [Function] },
     [Symbol(asyncId)]: 7 },
  timeout: 120000,
  parser:
   HTTPParser {
     '0': [Function: parserOnHeaders],
     '1': [Function: parserOnHeadersComplete],
     '2': [Function: parserOnBody],
     '3': [Function: parserOnMessageComplete],
     '4': [Function: bound onParserExecute],
     _headers: [],
     _url: '',
     socket: [Circular],
     incoming: null,
     outgoing: null,
     maxHeaderPairs: 2000,
     _consumed: true,
     onIncoming: [Function: bound parserOnIncoming],
     parsingHeadersStart: 1585766636509,
     [Symbol(isReused)]: false },
  on: [Function: socketOnWrap],
  _paused: false,
  [Symbol(asyncId)]: 11,
  [Symbol(lastWriteQueueSize)]: 0,
  [Symbol(timeout)]:
   Timeout {
     _called: false,
     _idleTimeout: 120000,
     _idlePrev: [TimersList],
     _idleNext: [TimersList],
     _idleStart: 313609,
     _onTimeout: [Function: bound ],
     _timerArgs: undefined,
     _repeat: null,
     _destroyed: false,
     [Symbol(unrefed)]: true,
     [Symbol(asyncId)]: 12,
     [Symbol(triggerId)]: 11 },
  [Symbol(kBytesRead)]: 0,
  [Symbol(kBytesWritten)]: 0 }

====Wed Apr 01 2020 11:43:56 ====
GET /accounts

====Wed Apr 01 2020 11:43:56 ====
RESPONSE [object Object],[object Object],[object Object],[object Object],[object Object]

====Wed Apr 01 2020 11:43:56 ====
RESPONSE [{"id":1,"username":"ProRobinHoodTr1","password":"Impossible123!!2","email":"jaledarely","phone":"9165178775","followers":786,"type":"promoImage","following":5001,"owner":1},{"id":2,"username":"StockJesus","password":"Impossible123","email":"robbrandon02","phone":"9165178775","followers":1262,"type":"promoText","following":5001,"owner":1},{"id":3,"username":"joo11244620","password":"Impossible123!!!","email":"abrahaminiguez06@gmail.com","phone":"9165178775","followers":660,"type":null,"following":5001,"owner":1},{"id":5,"username":"MarkZion19","password":"Impossible123!!","email":"teresainiguez12345","phone":"9165178775","followers":0,"type":null,"following":0,"owner":1},{"id":6,"username":"johnson_maximum","password":"Impossible123!","email":null,"phone":"9165178775","followers":160,"type":null,"following":1318,"owner":1}]

====Wed Apr 01 2020 11:45:15 ====
Socket {
  connecting: false,
  _hadError: false,
  _handle:
   TCP {
     reading: true,
     onread: [Function: onStreamRead],
     onconnection: null,
     _consumed: true,
     [Symbol(owner)]: [Circular] },
  _parent: null,
  _host: null,
  _readableState:
   ReadableState {
     objectMode: false,
     highWaterMark: 16384,
     buffer: BufferList { head: null, tail: null, length: 0 },
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: true,
     ended: false,
     endEmitted: false,
     reading: true,
     sync: false,
     needReadable: true,
     emittedReadable: false,
     readableListening: false,
     resumeScheduled: true,
     emitClose: false,
     destroyed: false,
     defaultEncoding: 'utf8',
     awaitDrain: 0,
     readingMore: false,
     decoder: null,
     encoding: null },
  readable: true,
  _events:
   [Object: null prototype] {
     end:
      [ [Function: onReadableStreamEnd],
        [Function: bound socketOnEnd] ],
     drain: [ [Function: ondrain], [Function: bound socketOnDrain] ],
     timeout: [Function: socketOnTimeout],
     data: [Function: bound socketOnData],
     error: [Function: socketOnError],
     close: [Function: bound socketOnClose],
     resume: [Function: onSocketResume],
     pause: [Function: onSocketPause] },
  _eventsCount: 8,
  _maxListeners: undefined,
  _writableState:
   WritableState {
     objectMode: false,
     highWaterMark: 16384,
     finalCalled: false,
     needDrain: false,
     ending: false,
     ended: false,
     finished: false,
     destroyed: false,
     decodeStrings: false,
     defaultEncoding: 'utf8',
     length: 0,
     writing: false,
     corked: 0,
     sync: true,
     bufferProcessing: false,
     onwrite: [Function: bound onwrite],
     writecb: null,
     writelen: 0,
     bufferedRequest: null,
     lastBufferedRequest: null,
     pendingcb: 0,
     prefinished: false,
     errorEmitted: false,
     emitClose: false,
     bufferedRequestCount: 0,
     corkedRequestsFree:
      { next: null,
        entry: null,
        finish: [Function: bound onCorkedFinish] } },
  writable: true,
  allowHalfOpen: true,
  _sockname: null,
  _pendingData: null,
  _pendingEncoding: '',
  server:
   Server {
     _events:
      [Object: null prototype] {
        request: [EventEmitter],
        connection: [Array],
        close: [Function],
        error: [Function],
        listening: [Function] },
     _eventsCount: 5,
     _maxListeners: undefined,
     _connections: 1,
     _handle:
      TCP {
        reading: false,
        onread: null,
        onconnection: [Function: onconnection],
        [Symbol(owner)]: [Circular] },
     _usingWorkers: false,
     _workers: [],
     _unref: false,
     allowHalfOpen: true,
     pauseOnConnect: false,
     httpAllowHalfOpen: false,
     timeout: 120000,
     keepAliveTimeout: 5000,
     _pendingResponseData: 0,
     maxHeadersCount: null,
     headersTimeout: 40000,
     _connectionKey: '6::::8090',
     [Symbol(IncomingMessage)]: { [Function: IncomingMessage] super_: [Function] },
     [Symbol(ServerResponse)]: { [Function: ServerResponse] super_: [Function] },
     [Symbol(asyncId)]: 7 },
  _server:
   Server {
     _events:
      [Object: null prototype] {
        request: [EventEmitter],
        connection: [Array],
        close: [Function],
        error: [Function],
        listening: [Function] },
     _eventsCount: 5,
     _maxListeners: undefined,
     _connections: 1,
     _handle:
      TCP {
        reading: false,
        onread: null,
        onconnection: [Function: onconnection],
        [Symbol(owner)]: [Circular] },
     _usingWorkers: false,
     _workers: [],
     _unref: false,
     allowHalfOpen: true,
     pauseOnConnect: false,
     httpAllowHalfOpen: false,
     timeout: 120000,
     keepAliveTimeout: 5000,
     _pendingResponseData: 0,
     maxHeadersCount: null,
     headersTimeout: 40000,
     _connectionKey: '6::::8090',
     [Symbol(IncomingMessage)]: { [Function: IncomingMessage] super_: [Function] },
     [Symbol(ServerResponse)]: { [Function: ServerResponse] super_: [Function] },
     [Symbol(asyncId)]: 7 },
  timeout: 120000,
  parser:
   HTTPParser {
     '0': [Function: parserOnHeaders],
     '1': [Function: parserOnHeadersComplete],
     '2': [Function: parserOnBody],
     '3': [Function: parserOnMessageComplete],
     '4': [Function: bound onParserExecute],
     _headers: [],
     _url: '',
     socket: [Circular],
     incoming: null,
     outgoing: null,
     maxHeaderPairs: 2000,
     _consumed: true,
     onIncoming: [Function: bound parserOnIncoming],
     parsingHeadersStart: 1585766715170,
     [Symbol(isReused)]: true },
  on: [Function: socketOnWrap],
  _paused: false,
  [Symbol(asyncId)]: 61,
  [Symbol(lastWriteQueueSize)]: 0,
  [Symbol(timeout)]:
   Timeout {
     _called: false,
     _idleTimeout: 120000,
     _idlePrev: [TimersList],
     _idleNext: [TimersList],
     _idleStart: 392259,
     _onTimeout: [Function: bound ],
     _timerArgs: undefined,
     _repeat: null,
     _destroyed: false,
     [Symbol(unrefed)]: true,
     [Symbol(asyncId)]: 62,
     [Symbol(triggerId)]: 61 },
  [Symbol(kBytesRead)]: 0,
  [Symbol(kBytesWritten)]: 0 }

====Wed Apr 01 2020 11:45:15 ====
GET /accounts

====Wed Apr 01 2020 11:45:15 ====
RESPONSE [object Object],[object Object],[object Object],[object Object],[object Object]

====Wed Apr 01 2020 11:45:15 ====
RESPONSE [{"id":1,"username":"ProRobinHoodTr1","password":"Impossible123!!2","email":"jaledarely","phone":"9165178775","followers":786,"type":"promoImage","following":5001,"owner":1},{"id":2,"username":"StockJesus","password":"Impossible123","email":"robbrandon02","phone":"9165178775","followers":1262,"type":"promoText","following":5001,"owner":1},{"id":3,"username":"joo11244620","password":"Impossible123!!!","email":"abrahaminiguez06@gmail.com","phone":"9165178775","followers":660,"type":null,"following":5001,"owner":1},{"id":5,"username":"MarkZion19","password":"Impossible123!!","email":"teresainiguez12345","phone":"9165178775","followers":0,"type":null,"following":0,"owner":1},{"id":6,"username":"johnson_maximum","password":"Impossible123!","email":null,"phone":"9165178775","followers":160,"type":null,"following":1318,"owner":1}]

====Wed Apr 01 2020 11:54:47 ====
undefined

====Wed Apr 01 2020 11:54:53 ====
Socket {
  connecting: false,
  _hadError: false,
  _handle:
   TCP {
     reading: true,
     onread: [Function: onStreamRead],
     onconnection: null,
     _consumed: true,
     [Symbol(owner)]: [Circular] },
  _parent: null,
  _host: null,
  _readableState:
   ReadableState {
     objectMode: false,
     highWaterMark: 16384,
     buffer: BufferList { head: null, tail: null, length: 0 },
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: true,
     ended: false,
     endEmitted: false,
     reading: true,
     sync: false,
     needReadable: true,
     emittedReadable: false,
     readableListening: false,
     resumeScheduled: true,
     emitClose: false,
     destroyed: false,
     defaultEncoding: 'utf8',
     awaitDrain: 0,
     readingMore: false,
     decoder: null,
     encoding: null },
  readable: true,
  _events:
   [Object: null prototype] {
     end:
      [ [Function: onReadableStreamEnd],
        [Function: bound socketOnEnd] ],
     drain: [ [Function: ondrain], [Function: bound socketOnDrain] ],
     timeout: [Function: socketOnTimeout],
     data: [Function: bound socketOnData],
     error: [Function: socketOnError],
     close: [Function: bound socketOnClose],
     resume: [Function: onSocketResume],
     pause: [Function: onSocketPause] },
  _eventsCount: 8,
  _maxListeners: undefined,
  _writableState:
   WritableState {
     objectMode: false,
     highWaterMark: 16384,
     finalCalled: false,
     needDrain: false,
     ending: false,
     ended: false,
     finished: false,
     destroyed: false,
     decodeStrings: false,
     defaultEncoding: 'utf8',
     length: 0,
     writing: false,
     corked: 0,
     sync: true,
     bufferProcessing: false,
     onwrite: [Function: bound onwrite],
     writecb: null,
     writelen: 0,
     bufferedRequest: null,
     lastBufferedRequest: null,
     pendingcb: 0,
     prefinished: false,
     errorEmitted: false,
     emitClose: false,
     bufferedRequestCount: 0,
     corkedRequestsFree:
      { next: null,
        entry: null,
        finish: [Function: bound onCorkedFinish] } },
  writable: true,
  allowHalfOpen: true,
  _sockname: null,
  _pendingData: null,
  _pendingEncoding: '',
  server:
   Server {
     _events:
      [Object: null prototype] {
        request: [EventEmitter],
        connection: [Array],
        close: [Function],
        error: [Function],
        listening: [Function] },
     _eventsCount: 5,
     _maxListeners: undefined,
     _connections: 1,
     _handle:
      TCP {
        reading: false,
        onread: null,
        onconnection: [Function: onconnection],
        [Symbol(owner)]: [Circular] },
     _usingWorkers: false,
     _workers: [],
     _unref: false,
     allowHalfOpen: true,
     pauseOnConnect: false,
     httpAllowHalfOpen: false,
     timeout: 120000,
     keepAliveTimeout: 5000,
     _pendingResponseData: 0,
     maxHeadersCount: null,
     headersTimeout: 40000,
     _connectionKey: '6::::8090',
     [Symbol(IncomingMessage)]: { [Function: IncomingMessage] super_: [Function] },
     [Symbol(ServerResponse)]: { [Function: ServerResponse] super_: [Function] },
     [Symbol(asyncId)]: 7 },
  _server:
   Server {
     _events:
      [Object: null prototype] {
        request: [EventEmitter],
        connection: [Array],
        close: [Function],
        error: [Function],
        listening: [Function] },
     _eventsCount: 5,
     _maxListeners: undefined,
     _connections: 1,
     _handle:
      TCP {
        reading: false,
        onread: null,
        onconnection: [Function: onconnection],
        [Symbol(owner)]: [Circular] },
     _usingWorkers: false,
     _workers: [],
     _unref: false,
     allowHalfOpen: true,
     pauseOnConnect: false,
     httpAllowHalfOpen: false,
     timeout: 120000,
     keepAliveTimeout: 5000,
     _pendingResponseData: 0,
     maxHeadersCount: null,
     headersTimeout: 40000,
     _connectionKey: '6::::8090',
     [Symbol(IncomingMessage)]: { [Function: IncomingMessage] super_: [Function] },
     [Symbol(ServerResponse)]: { [Function: ServerResponse] super_: [Function] },
     [Symbol(asyncId)]: 7 },
  timeout: 120000,
  parser:
   HTTPParser {
     '0': [Function: parserOnHeaders],
     '1': [Function: parserOnHeadersComplete],
     '2': [Function: parserOnBody],
     '3': [Function: parserOnMessageComplete],
     '4': [Function: bound onParserExecute],
     _headers: [],
     _url: '',
     socket: [Circular],
     incoming: null,
     outgoing: null,
     maxHeaderPairs: 2000,
     _consumed: true,
     onIncoming: [Function: bound parserOnIncoming],
     parsingHeadersStart: 1585767293984,
     [Symbol(isReused)]: false },
  on: [Function: socketOnWrap],
  _paused: false,
  [Symbol(asyncId)]: 11,
  [Symbol(lastWriteQueueSize)]: 0,
  [Symbol(timeout)]:
   Timeout {
     _called: false,
     _idleTimeout: 120000,
     _idlePrev: [TimersList],
     _idleNext: [TimersList],
     _idleStart: 6359,
     _onTimeout: [Function: bound ],
     _timerArgs: undefined,
     _repeat: null,
     _destroyed: false,
     [Symbol(unrefed)]: true,
     [Symbol(asyncId)]: 12,
     [Symbol(triggerId)]: 11 },
  [Symbol(kBytesRead)]: 0,
  [Symbol(kBytesWritten)]: 0 }

====Wed Apr 01 2020 11:54:53 ====
GET /accounts

====Wed Apr 01 2020 11:54:54 ====
RESPONSE [object Object],[object Object],[object Object],[object Object],[object Object]

====Wed Apr 01 2020 11:54:54 ====
RESPONSE [{"id":1,"username":"ProRobinHoodTr1","password":"Impossible123!!2","email":"jaledarely","phone":"9165178775","followers":786,"type":"promoImage","following":5001,"owner":1},{"id":2,"username":"StockJesus","password":"Impossible123","email":"robbrandon02","phone":"9165178775","followers":1262,"type":"promoText","following":5001,"owner":1},{"id":3,"username":"joo11244620","password":"Impossible123!!!","email":"abrahaminiguez06@gmail.com","phone":"9165178775","followers":660,"type":null,"following":5001,"owner":1},{"id":5,"username":"MarkZion19","password":"Impossible123!!","email":"teresainiguez12345","phone":"9165178775","followers":0,"type":null,"following":0,"owner":1},{"id":6,"username":"johnson_maximum","password":"Impossible123!","email":null,"phone":"9165178775","followers":160,"type":null,"following":1318,"owner":1}]

====Wed Apr 01 2020 12:21:56 ====
Socket {
  connecting: false,
  _hadError: false,
  _handle:
   TCP {
     reading: true,
     onread: [Function: onStreamRead],
     onconnection: null,
     _consumed: true,
     [Symbol(owner)]: [Circular] },
  _parent: null,
  _host: null,
  _readableState:
   ReadableState {
     objectMode: false,
     highWaterMark: 16384,
     buffer: BufferList { head: null, tail: null, length: 0 },
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: true,
     ended: false,
     endEmitted: false,
     reading: true,
     sync: false,
     needReadable: true,
     emittedReadable: false,
     readableListening: false,
     resumeScheduled: true,
     emitClose: false,
     destroyed: false,
     defaultEncoding: 'utf8',
     awaitDrain: 0,
     readingMore: false,
     decoder: null,
     encoding: null },
  readable: true,
  _events:
   [Object: null prototype] {
     end:
      [ [Function: onReadableStreamEnd],
        [Function: bound socketOnEnd] ],
     drain: [ [Function: ondrain], [Function: bound socketOnDrain] ],
     timeout: [Function: socketOnTimeout],
     data: [Function: bound socketOnData],
     error: [Function: socketOnError],
     close: [Function: bound socketOnClose],
     resume: [Function: onSocketResume],
     pause: [Function: onSocketPause] },
  _eventsCount: 8,
  _maxListeners: undefined,
  _writableState:
   WritableState {
     objectMode: false,
     highWaterMark: 16384,
     finalCalled: false,
     needDrain: false,
     ending: false,
     ended: false,
     finished: false,
     destroyed: false,
     decodeStrings: false,
     defaultEncoding: 'utf8',
     length: 0,
     writing: false,
     corked: 0,
     sync: true,
     bufferProcessing: false,
     onwrite: [Function: bound onwrite],
     writecb: null,
     writelen: 0,
     bufferedRequest: null,
     lastBufferedRequest: null,
     pendingcb: 0,
     prefinished: false,
     errorEmitted: false,
     emitClose: false,
     bufferedRequestCount: 0,
     corkedRequestsFree:
      { next: null,
        entry: null,
        finish: [Function: bound onCorkedFinish] } },
  writable: true,
  allowHalfOpen: true,
  _sockname: null,
  _pendingData: null,
  _pendingEncoding: '',
  server:
   Server {
     _events:
      [Object: null prototype] {
        request: [EventEmitter],
        connection: [Array],
        close: [Function],
        error: [Function],
        listening: [Function] },
     _eventsCount: 5,
     _maxListeners: undefined,
     _connections: 1,
     _handle:
      TCP {
        reading: false,
        onread: null,
        onconnection: [Function: onconnection],
        [Symbol(owner)]: [Circular] },
     _usingWorkers: false,
     _workers: [],
     _unref: false,
     allowHalfOpen: true,
     pauseOnConnect: false,
     httpAllowHalfOpen: false,
     timeout: 120000,
     keepAliveTimeout: 5000,
     _pendingResponseData: 0,
     maxHeadersCount: null,
     headersTimeout: 40000,
     _connectionKey: '6::::8090',
     [Symbol(IncomingMessage)]: { [Function: IncomingMessage] super_: [Function] },
     [Symbol(ServerResponse)]: { [Function: ServerResponse] super_: [Function] },
     [Symbol(asyncId)]: 7 },
  _server:
   Server {
     _events:
      [Object: null prototype] {
        request: [EventEmitter],
        connection: [Array],
        close: [Function],
        error: [Function],
        listening: [Function] },
     _eventsCount: 5,
     _maxListeners: undefined,
     _connections: 1,
     _handle:
      TCP {
        reading: false,
        onread: null,
        onconnection: [Function: onconnection],
        [Symbol(owner)]: [Circular] },
     _usingWorkers: false,
     _workers: [],
     _unref: false,
     allowHalfOpen: true,
     pauseOnConnect: false,
     httpAllowHalfOpen: false,
     timeout: 120000,
     keepAliveTimeout: 5000,
     _pendingResponseData: 0,
     maxHeadersCount: null,
     headersTimeout: 40000,
     _connectionKey: '6::::8090',
     [Symbol(IncomingMessage)]: { [Function: IncomingMessage] super_: [Function] },
     [Symbol(ServerResponse)]: { [Function: ServerResponse] super_: [Function] },
     [Symbol(asyncId)]: 7 },
  timeout: 120000,
  parser:
   HTTPParser {
     '0': [Function: parserOnHeaders],
     '1': [Function: parserOnHeadersComplete],
     '2': [Function: parserOnBody],
     '3': [Function: parserOnMessageComplete],
     '4': [Function: bound onParserExecute],
     _headers: [],
     _url: '',
     socket: [Circular],
     incoming: null,
     outgoing: null,
     maxHeaderPairs: 2000,
     _consumed: true,
     onIncoming: [Function: bound parserOnIncoming],
     parsingHeadersStart: 1585768916213,
     [Symbol(isReused)]: true },
  on: [Function: socketOnWrap],
  _paused: false,
  [Symbol(asyncId)]: 63,
  [Symbol(lastWriteQueueSize)]: 0,
  [Symbol(timeout)]:
   Timeout {
     _called: false,
     _idleTimeout: 120000,
     _idlePrev: [TimersList],
     _idleNext: [TimersList],
     _idleStart: 1628573,
     _onTimeout: [Function: bound ],
     _timerArgs: undefined,
     _repeat: null,
     _destroyed: false,
     [Symbol(unrefed)]: true,
     [Symbol(asyncId)]: 64,
     [Symbol(triggerId)]: 63 },
  [Symbol(kBytesRead)]: 0,
  [Symbol(kBytesWritten)]: 0 }

====Wed Apr 01 2020 12:21:56 ====
GET /accounts

====Wed Apr 01 2020 12:21:56 ====
RESPONSE [object Object],[object Object],[object Object],[object Object],[object Object]

====Wed Apr 01 2020 12:21:56 ====
RESPONSE [{"id":1,"username":"ProRobinHoodTr1","password":"Impossible123!!2","email":"jaledarely","phone":"9165178775","followers":786,"type":"promoImage","following":5001,"owner":1},{"id":2,"username":"StockJesus","password":"Impossible123","email":"robbrandon02","phone":"9165178775","followers":1262,"type":"promoText","following":5001,"owner":1},{"id":3,"username":"joo11244620","password":"Impossible123!!!","email":"abrahaminiguez06@gmail.com","phone":"9165178775","followers":660,"type":null,"following":5001,"owner":1},{"id":5,"username":"MarkZion19","password":"Impossible123!!","email":"teresainiguez12345","phone":"9165178775","followers":0,"type":null,"following":0,"owner":1},{"id":6,"username":"johnson_maximum","password":"Impossible123!","email":null,"phone":"9165178775","followers":160,"type":null,"following":1318,"owner":1}]

====Wed Apr 01 2020 12:22:37 ====
Socket {
  connecting: false,
  _hadError: false,
  _handle:
   TCP {
     reading: true,
     onread: [Function: onStreamRead],
     onconnection: null,
     _consumed: true,
     [Symbol(owner)]: [Circular] },
  _parent: null,
  _host: null,
  _readableState:
   ReadableState {
     objectMode: false,
     highWaterMark: 16384,
     buffer: BufferList { head: null, tail: null, length: 0 },
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: true,
     ended: false,
     endEmitted: false,
     reading: true,
     sync: false,
     needReadable: true,
     emittedReadable: false,
     readableListening: false,
     resumeScheduled: true,
     emitClose: false,
     destroyed: false,
     defaultEncoding: 'utf8',
     awaitDrain: 0,
     readingMore: false,
     decoder: null,
     encoding: null },
  readable: true,
  _events:
   [Object: null prototype] {
     end:
      [ [Function: onReadableStreamEnd],
        [Function: bound socketOnEnd] ],
     drain: [ [Function: ondrain], [Function: bound socketOnDrain] ],
     timeout: [Function: socketOnTimeout],
     data: [Function: bound socketOnData],
     error: [Function: socketOnError],
     close: [Function: bound socketOnClose],
     resume: [Function: onSocketResume],
     pause: [Function: onSocketPause] },
  _eventsCount: 8,
  _maxListeners: undefined,
  _writableState:
   WritableState {
     objectMode: false,
     highWaterMark: 16384,
     finalCalled: false,
     needDrain: false,
     ending: false,
     ended: false,
     finished: false,
     destroyed: false,
     decodeStrings: false,
     defaultEncoding: 'utf8',
     length: 0,
     writing: false,
     corked: 0,
     sync: true,
     bufferProcessing: false,
     onwrite: [Function: bound onwrite],
     writecb: null,
     writelen: 0,
     bufferedRequest: null,
     lastBufferedRequest: null,
     pendingcb: 0,
     prefinished: false,
     errorEmitted: false,
     emitClose: false,
     bufferedRequestCount: 0,
     corkedRequestsFree:
      { next: null,
        entry: null,
        finish: [Function: bound onCorkedFinish] } },
  writable: true,
  allowHalfOpen: true,
  _sockname: null,
  _pendingData: null,
  _pendingEncoding: '',
  server:
   Server {
     _events:
      [Object: null prototype] {
        request: [EventEmitter],
        connection: [Array],
        close: [Function],
        error: [Function],
        listening: [Function] },
     _eventsCount: 5,
     _maxListeners: undefined,
     _connections: 1,
     _handle:
      TCP {
        reading: false,
        onread: null,
        onconnection: [Function: onconnection],
        [Symbol(owner)]: [Circular] },
     _usingWorkers: false,
     _workers: [],
     _unref: false,
     allowHalfOpen: true,
     pauseOnConnect: false,
     httpAllowHalfOpen: false,
     timeout: 120000,
     keepAliveTimeout: 5000,
     _pendingResponseData: 0,
     maxHeadersCount: null,
     headersTimeout: 40000,
     _connectionKey: '6::::8090',
     [Symbol(IncomingMessage)]: { [Function: IncomingMessage] super_: [Function] },
     [Symbol(ServerResponse)]: { [Function: ServerResponse] super_: [Function] },
     [Symbol(asyncId)]: 7 },
  _server:
   Server {
     _events:
      [Object: null prototype] {
        request: [EventEmitter],
        connection: [Array],
        close: [Function],
        error: [Function],
        listening: [Function] },
     _eventsCount: 5,
     _maxListeners: undefined,
     _connections: 1,
     _handle:
      TCP {
        reading: false,
        onread: null,
        onconnection: [Function: onconnection],
        [Symbol(owner)]: [Circular] },
     _usingWorkers: false,
     _workers: [],
     _unref: false,
     allowHalfOpen: true,
     pauseOnConnect: false,
     httpAllowHalfOpen: false,
     timeout: 120000,
     keepAliveTimeout: 5000,
     _pendingResponseData: 0,
     maxHeadersCount: null,
     headersTimeout: 40000,
     _connectionKey: '6::::8090',
     [Symbol(IncomingMessage)]: { [Function: IncomingMessage] super_: [Function] },
     [Symbol(ServerResponse)]: { [Function: ServerResponse] super_: [Function] },
     [Symbol(asyncId)]: 7 },
  timeout: 120000,
  parser:
   HTTPParser {
     '0': [Function: parserOnHeaders],
     '1': [Function: parserOnHeadersComplete],
     '2': [Function: parserOnBody],
     '3': [Function: parserOnMessageComplete],
     '4': [Function: bound onParserExecute],
     _headers: [],
     _url: '',
     socket: [Circular],
     incoming: null,
     outgoing: null,
     maxHeaderPairs: 2000,
     _consumed: true,
     onIncoming: [Function: bound parserOnIncoming],
     parsingHeadersStart: 1585768957917,
     [Symbol(isReused)]: true },
  on: [Function: socketOnWrap],
  _paused: false,
  [Symbol(asyncId)]: 112,
  [Symbol(lastWriteQueueSize)]: 0,
  [Symbol(timeout)]:
   Timeout {
     _called: false,
     _idleTimeout: 120000,
     _idlePrev: [TimersList],
     _idleNext: [TimersList],
     _idleStart: 1670277,
     _onTimeout: [Function: bound ],
     _timerArgs: undefined,
     _repeat: null,
     _destroyed: false,
     [Symbol(unrefed)]: true,
     [Symbol(asyncId)]: 113,
     [Symbol(triggerId)]: 112 },
  [Symbol(kBytesRead)]: 0,
  [Symbol(kBytesWritten)]: 0 }

====Wed Apr 01 2020 12:22:37 ====
Socket {
  connecting: false,
  _hadError: false,
  _handle:
   TCP {
     reading: true,
     onread: [Function: onStreamRead],
     onconnection: null,
     _consumed: true,
     [Symbol(owner)]: [Circular] },
  _parent: null,
  _host: null,
  _readableState:
   ReadableState {
     objectMode: false,
     highWaterMark: 16384,
     buffer: BufferList { head: null, tail: null, length: 0 },
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: true,
     ended: false,
     endEmitted: false,
     reading: true,
     sync: false,
     needReadable: true,
     emittedReadable: false,
     readableListening: false,
     resumeScheduled: true,
     emitClose: false,
     destroyed: false,
     defaultEncoding: 'utf8',
     awaitDrain: 0,
     readingMore: false,
     decoder: null,
     encoding: null },
  readable: true,
  _events:
   [Object: null prototype] {
     end:
      [ [Function: onReadableStreamEnd],
        [Function: bound socketOnEnd] ],
     drain: [ [Function: ondrain], [Function: bound socketOnDrain] ],
     timeout: [Function: socketOnTimeout],
     data: [Function: bound socketOnData],
     error: [Function: socketOnError],
     close: [Function: bound socketOnClose],
     resume: [Function: onSocketResume],
     pause: [Function: onSocketPause] },
  _eventsCount: 8,
  _maxListeners: undefined,
  _writableState:
   WritableState {
     objectMode: false,
     highWaterMark: 16384,
     finalCalled: false,
     needDrain: false,
     ending: false,
     ended: false,
     finished: false,
     destroyed: false,
     decodeStrings: false,
     defaultEncoding: 'utf8',
     length: 0,
     writing: false,
     corked: 0,
     sync: true,
     bufferProcessing: false,
     onwrite: [Function: bound onwrite],
     writecb: null,
     writelen: 0,
     bufferedRequest: null,
     lastBufferedRequest: null,
     pendingcb: 0,
     prefinished: false,
     errorEmitted: false,
     emitClose: false,
     bufferedRequestCount: 0,
     corkedRequestsFree:
      { next: null,
        entry: null,
        finish: [Function: bound onCorkedFinish] } },
  writable: true,
  allowHalfOpen: true,
  _sockname: null,
  _pendingData: null,
  _pendingEncoding: '',
  server:
   Server {
     _events:
      [Object: null prototype] {
        request: [EventEmitter],
        connection: [Array],
        close: [Function],
        error: [Function],
        listening: [Function] },
     _eventsCount: 5,
     _maxListeners: undefined,
     _connections: 2,
     _handle:
      TCP {
        reading: false,
        onread: null,
        onconnection: [Function: onconnection],
        [Symbol(owner)]: [Circular] },
     _usingWorkers: false,
     _workers: [],
     _unref: false,
     allowHalfOpen: true,
     pauseOnConnect: false,
     httpAllowHalfOpen: false,
     timeout: 120000,
     keepAliveTimeout: 5000,
     _pendingResponseData: 0,
     maxHeadersCount: null,
     headersTimeout: 40000,
     _connectionKey: '6::::8090',
     [Symbol(IncomingMessage)]: { [Function: IncomingMessage] super_: [Function] },
     [Symbol(ServerResponse)]: { [Function: ServerResponse] super_: [Function] },
     [Symbol(asyncId)]: 7 },
  _server:
   Server {
     _events:
      [Object: null prototype] {
        request: [EventEmitter],
        connection: [Array],
        close: [Function],
        error: [Function],
        listening: [Function] },
     _eventsCount: 5,
     _maxListeners: undefined,
     _connections: 2,
     _handle:
      TCP {
        reading: false,
        onread: null,
        onconnection: [Function: onconnection],
        [Symbol(owner)]: [Circular] },
     _usingWorkers: false,
     _workers: [],
     _unref: false,
     allowHalfOpen: true,
     pauseOnConnect: false,
     httpAllowHalfOpen: false,
     timeout: 120000,
     keepAliveTimeout: 5000,
     _pendingResponseData: 0,
     maxHeadersCount: null,
     headersTimeout: 40000,
     _connectionKey: '6::::8090',
     [Symbol(IncomingMessage)]: { [Function: IncomingMessage] super_: [Function] },
     [Symbol(ServerResponse)]: { [Function: ServerResponse] super_: [Function] },
     [Symbol(asyncId)]: 7 },
  timeout: 120000,
  parser:
   HTTPParser {
     '0': [Function: parserOnHeaders],
     '1': [Function: parserOnHeadersComplete],
     '2': [Function: parserOnBody],
     '3': [Function: parserOnMessageComplete],
     '4': [Function: bound onParserExecute],
     _headers: [],
     _url: '',
     socket: [Circular],
     incoming: null,
     outgoing: null,
     maxHeaderPairs: 2000,
     _consumed: true,
     onIncoming: [Function: bound parserOnIncoming],
     parsingHeadersStart: 1585768957917,
     [Symbol(isReused)]: false },
  on: [Function: socketOnWrap],
  _paused: false,
  [Symbol(asyncId)]: 119,
  [Symbol(lastWriteQueueSize)]: 0,
  [Symbol(timeout)]:
   Timeout {
     _called: false,
     _idleTimeout: 120000,
     _idlePrev: [TimersList],
     _idleNext: [Timeout],
     _idleStart: 1670278,
     _onTimeout: [Function: bound ],
     _timerArgs: undefined,
     _repeat: null,
     _destroyed: false,
     [Symbol(unrefed)]: true,
     [Symbol(asyncId)]: 120,
     [Symbol(triggerId)]: 119 },
  [Symbol(kBytesRead)]: 0,
  [Symbol(kBytesWritten)]: 0 }

====Wed Apr 01 2020 12:22:37 ====
GET /accounts

====Wed Apr 01 2020 12:22:37 ====
RESPONSE [object Object],[object Object],[object Object],[object Object],[object Object]

====Wed Apr 01 2020 12:22:37 ====
RESPONSE [{"id":1,"username":"ProRobinHoodTr1","password":"Impossible123!!2","email":"jaledarely","phone":"9165178775","followers":786,"type":"promoImage","following":5001,"owner":1},{"id":2,"username":"StockJesus","password":"Impossible123","email":"robbrandon02","phone":"9165178775","followers":1262,"type":"promoText","following":5001,"owner":1},{"id":3,"username":"joo11244620","password":"Impossible123!!!","email":"abrahaminiguez06@gmail.com","phone":"9165178775","followers":660,"type":null,"following":5001,"owner":1},{"id":5,"username":"MarkZion19","password":"Impossible123!!","email":"teresainiguez12345","phone":"9165178775","followers":0,"type":null,"following":0,"owner":1},{"id":6,"username":"johnson_maximum","password":"Impossible123!","email":null,"phone":"9165178775","followers":160,"type":null,"following":1318,"owner":1}]

====Wed Apr 01 2020 12:22:38 ====
GET /favicon.ico

====Wed Apr 01 2020 12:26:35 ====
Socket {
  connecting: false,
  _hadError: false,
  _handle:
   TCP {
     reading: true,
     onread: [Function: onStreamRead],
     onconnection: null,
     _consumed: true,
     [Symbol(owner)]: [Circular] },
  _parent: null,
  _host: null,
  _readableState:
   ReadableState {
     objectMode: false,
     highWaterMark: 16384,
     buffer: BufferList { head: null, tail: null, length: 0 },
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: true,
     ended: false,
     endEmitted: false,
     reading: true,
     sync: false,
     needReadable: true,
     emittedReadable: false,
     readableListening: false,
     resumeScheduled: true,
     emitClose: false,
     destroyed: false,
     defaultEncoding: 'utf8',
     awaitDrain: 0,
     readingMore: false,
     decoder: null,
     encoding: null },
  readable: true,
  _events:
   [Object: null prototype] {
     end:
      [ [Function: onReadableStreamEnd],
        [Function: bound socketOnEnd] ],
     drain: [ [Function: ondrain], [Function: bound socketOnDrain] ],
     timeout: [Function: socketOnTimeout],
     data: [Function: bound socketOnData],
     error: [Function: socketOnError],
     close: [Function: bound socketOnClose],
     resume: [Function: onSocketResume],
     pause: [Function: onSocketPause] },
  _eventsCount: 8,
  _maxListeners: undefined,
  _writableState:
   WritableState {
     objectMode: false,
     highWaterMark: 16384,
     finalCalled: false,
     needDrain: false,
     ending: false,
     ended: false,
     finished: false,
     destroyed: false,
     decodeStrings: false,
     defaultEncoding: 'utf8',
     length: 0,
     writing: false,
     corked: 0,
     sync: true,
     bufferProcessing: false,
     onwrite: [Function: bound onwrite],
     writecb: null,
     writelen: 0,
     bufferedRequest: null,
     lastBufferedRequest: null,
     pendingcb: 0,
     prefinished: false,
     errorEmitted: false,
     emitClose: false,
     bufferedRequestCount: 0,
     corkedRequestsFree:
      { next: null,
        entry: null,
        finish: [Function: bound onCorkedFinish] } },
  writable: true,
  allowHalfOpen: true,
  _sockname: null,
  _pendingData: null,
  _pendingEncoding: '',
  server:
   Server {
     _events:
      [Object: null prototype] {
        request: [EventEmitter],
        connection: [Array],
        close: [Function],
        error: [Function],
        listening: [Function] },
     _eventsCount: 5,
     _maxListeners: undefined,
     _connections: 1,
     _handle:
      TCP {
        reading: false,
        onread: null,
        onconnection: [Function: onconnection],
        [Symbol(owner)]: [Circular] },
     _usingWorkers: false,
     _workers: [],
     _unref: false,
     allowHalfOpen: true,
     pauseOnConnect: false,
     httpAllowHalfOpen: false,
     timeout: 120000,
     keepAliveTimeout: 5000,
     _pendingResponseData: 0,
     maxHeadersCount: null,
     headersTimeout: 40000,
     _connectionKey: '6::::8090',
     [Symbol(IncomingMessage)]: { [Function: IncomingMessage] super_: [Function] },
     [Symbol(ServerResponse)]: { [Function: ServerResponse] super_: [Function] },
     [Symbol(asyncId)]: 7 },
  _server:
   Server {
     _events:
      [Object: null prototype] {
        request: [EventEmitter],
        connection: [Array],
        close: [Function],
        error: [Function],
        listening: [Function] },
     _eventsCount: 5,
     _maxListeners: undefined,
     _connections: 1,
     _handle:
      TCP {
        reading: false,
        onread: null,
        onconnection: [Function: onconnection],
        [Symbol(owner)]: [Circular] },
     _usingWorkers: false,
     _workers: [],
     _unref: false,
     allowHalfOpen: true,
     pauseOnConnect: false,
     httpAllowHalfOpen: false,
     timeout: 120000,
     keepAliveTimeout: 5000,
     _pendingResponseData: 0,
     maxHeadersCount: null,
     headersTimeout: 40000,
     _connectionKey: '6::::8090',
     [Symbol(IncomingMessage)]: { [Function: IncomingMessage] super_: [Function] },
     [Symbol(ServerResponse)]: { [Function: ServerResponse] super_: [Function] },
     [Symbol(asyncId)]: 7 },
  timeout: 120000,
  parser:
   HTTPParser {
     '0': [Function: parserOnHeaders],
     '1': [Function: parserOnHeadersComplete],
     '2': [Function: parserOnBody],
     '3': [Function: parserOnMessageComplete],
     '4': [Function: bound onParserExecute],
     _headers: [],
     _url: '',
     socket: [Circular],
     incoming: null,
     outgoing: null,
     maxHeaderPairs: 2000,
     _consumed: true,
     onIncoming: [Function: bound parserOnIncoming],
     parsingHeadersStart: 1585769195450,
     [Symbol(isReused)]: true },
  on: [Function: socketOnWrap],
  _paused: false,
  [Symbol(asyncId)]: 172,
  [Symbol(lastWriteQueueSize)]: 0,
  [Symbol(timeout)]:
   Timeout {
     _called: false,
     _idleTimeout: 120000,
     _idlePrev: [TimersList],
     _idleNext: [TimersList],
     _idleStart: 1907810,
     _onTimeout: [Function: bound ],
     _timerArgs: undefined,
     _repeat: null,
     _destroyed: false,
     [Symbol(unrefed)]: true,
     [Symbol(asyncId)]: 173,
     [Symbol(triggerId)]: 172 },
  [Symbol(kBytesRead)]: 0,
  [Symbol(kBytesWritten)]: 0 }

====Wed Apr 01 2020 12:26:35 ====
GET /accounts

====Wed Apr 01 2020 12:26:35 ====
RESPONSE [object Object],[object Object],[object Object],[object Object],[object Object]

====Wed Apr 01 2020 12:26:35 ====
RESPONSE [{"id":1,"username":"ProRobinHoodTr1","password":"Impossible123!!2","email":"jaledarely","phone":"9165178775","followers":786,"type":"promoImage","following":5001,"owner":1},{"id":2,"username":"StockJesus","password":"Impossible123","email":"robbrandon02","phone":"9165178775","followers":1262,"type":"promoText","following":5001,"owner":1},{"id":3,"username":"joo11244620","password":"Impossible123!!!","email":"abrahaminiguez06@gmail.com","phone":"9165178775","followers":660,"type":null,"following":5001,"owner":1},{"id":5,"username":"MarkZion19","password":"Impossible123!!","email":"teresainiguez12345","phone":"9165178775","followers":0,"type":null,"following":0,"owner":1},{"id":6,"username":"johnson_maximum","password":"Impossible123!","email":null,"phone":"9165178775","followers":160,"type":null,"following":1318,"owner":1}]

====Wed Apr 01 2020 12:26:58 ====
Socket {
  connecting: false,
  _hadError: false,
  _handle:
   TCP {
     reading: true,
     onread: [Function: onStreamRead],
     onconnection: null,
     _consumed: true,
     [Symbol(owner)]: [Circular] },
  _parent: null,
  _host: null,
  _readableState:
   ReadableState {
     objectMode: false,
     highWaterMark: 16384,
     buffer: BufferList { head: null, tail: null, length: 0 },
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: true,
     ended: false,
     endEmitted: false,
     reading: true,
     sync: false,
     needReadable: true,
     emittedReadable: false,
     readableListening: false,
     resumeScheduled: true,
     emitClose: false,
     destroyed: false,
     defaultEncoding: 'utf8',
     awaitDrain: 0,
     readingMore: false,
     decoder: null,
     encoding: null },
  readable: true,
  _events:
   [Object: null prototype] {
     end:
      [ [Function: onReadableStreamEnd],
        [Function: bound socketOnEnd] ],
     drain: [ [Function: ondrain], [Function: bound socketOnDrain] ],
     timeout: [Function: socketOnTimeout],
     data: [Function: bound socketOnData],
     error: [Function: socketOnError],
     close: [Function: bound socketOnClose],
     resume: [Function: onSocketResume],
     pause: [Function: onSocketPause] },
  _eventsCount: 8,
  _maxListeners: undefined,
  _writableState:
   WritableState {
     objectMode: false,
     highWaterMark: 16384,
     finalCalled: false,
     needDrain: false,
     ending: false,
     ended: false,
     finished: false,
     destroyed: false,
     decodeStrings: false,
     defaultEncoding: 'utf8',
     length: 0,
     writing: false,
     corked: 0,
     sync: true,
     bufferProcessing: false,
     onwrite: [Function: bound onwrite],
     writecb: null,
     writelen: 0,
     bufferedRequest: null,
     lastBufferedRequest: null,
     pendingcb: 0,
     prefinished: false,
     errorEmitted: false,
     emitClose: false,
     bufferedRequestCount: 0,
     corkedRequestsFree:
      { next: null,
        entry: null,
        finish: [Function: bound onCorkedFinish] } },
  writable: true,
  allowHalfOpen: true,
  _sockname: null,
  _pendingData: null,
  _pendingEncoding: '',
  server:
   Server {
     _events:
      [Object: null prototype] {
        request: [EventEmitter],
        connection: [Array],
        close: [Function],
        error: [Function],
        listening: [Function] },
     _eventsCount: 5,
     _maxListeners: undefined,
     _connections: 1,
     _handle:
      TCP {
        reading: false,
        onread: null,
        onconnection: [Function: onconnection],
        [Symbol(owner)]: [Circular] },
     _usingWorkers: false,
     _workers: [],
     _unref: false,
     allowHalfOpen: true,
     pauseOnConnect: false,
     httpAllowHalfOpen: false,
     timeout: 120000,
     keepAliveTimeout: 5000,
     _pendingResponseData: 0,
     maxHeadersCount: null,
     headersTimeout: 40000,
     _connectionKey: '6::::8090',
     [Symbol(IncomingMessage)]: { [Function: IncomingMessage] super_: [Function] },
     [Symbol(ServerResponse)]: { [Function: ServerResponse] super_: [Function] },
     [Symbol(asyncId)]: 7 },
  _server:
   Server {
     _events:
      [Object: null prototype] {
        request: [EventEmitter],
        connection: [Array],
        close: [Function],
        error: [Function],
        listening: [Function] },
     _eventsCount: 5,
     _maxListeners: undefined,
     _connections: 1,
     _handle:
      TCP {
        reading: false,
        onread: null,
        onconnection: [Function: onconnection],
        [Symbol(owner)]: [Circular] },
     _usingWorkers: false,
     _workers: [],
     _unref: false,
     allowHalfOpen: true,
     pauseOnConnect: false,
     httpAllowHalfOpen: false,
     timeout: 120000,
     keepAliveTimeout: 5000,
     _pendingResponseData: 0,
     maxHeadersCount: null,
     headersTimeout: 40000,
     _connectionKey: '6::::8090',
     [Symbol(IncomingMessage)]: { [Function: IncomingMessage] super_: [Function] },
     [Symbol(ServerResponse)]: { [Function: ServerResponse] super_: [Function] },
     [Symbol(asyncId)]: 7 },
  timeout: 120000,
  parser:
   HTTPParser {
     '0': [Function: parserOnHeaders],
     '1': [Function: parserOnHeadersComplete],
     '2': [Function: parserOnBody],
     '3': [Function: parserOnMessageComplete],
     '4': [Function: bound onParserExecute],
     _headers: [],
     _url: '',
     socket: [Circular],
     incoming: null,
     outgoing: null,
     maxHeaderPairs: 2000,
     _consumed: true,
     onIncoming: [Function: bound parserOnIncoming],
     parsingHeadersStart: 1585769218630,
     [Symbol(isReused)]: true },
  on: [Function: socketOnWrap],
  _paused: false,
  [Symbol(asyncId)]: 221,
  [Symbol(lastWriteQueueSize)]: 0,
  [Symbol(timeout)]:
   Timeout {
     _called: false,
     _idleTimeout: 120000,
     _idlePrev: [TimersList],
     _idleNext: [TimersList],
     _idleStart: 1930990,
     _onTimeout: [Function: bound ],
     _timerArgs: undefined,
     _repeat: null,
     _destroyed: false,
     [Symbol(unrefed)]: true,
     [Symbol(asyncId)]: 222,
     [Symbol(triggerId)]: 221 },
  [Symbol(kBytesRead)]: 0,
  [Symbol(kBytesWritten)]: 0 }

====Wed Apr 01 2020 12:26:58 ====
GET /accounts

====Wed Apr 01 2020 12:26:58 ====
RESPONSE [object Object],[object Object],[object Object],[object Object],[object Object]

====Wed Apr 01 2020 12:26:58 ====
RESPONSE [{"id":1,"username":"ProRobinHoodTr1","password":"Impossible123!!2","email":"jaledarely","phone":"9165178775","followers":786,"type":"promoImage","following":5001,"owner":1},{"id":2,"username":"StockJesus","password":"Impossible123","email":"robbrandon02","phone":"9165178775","followers":1262,"type":"promoText","following":5001,"owner":1},{"id":3,"username":"joo11244620","password":"Impossible123!!!","email":"abrahaminiguez06@gmail.com","phone":"9165178775","followers":660,"type":null,"following":5001,"owner":1},{"id":5,"username":"MarkZion19","password":"Impossible123!!","email":"teresainiguez12345","phone":"9165178775","followers":0,"type":null,"following":0,"owner":1},{"id":6,"username":"johnson_maximum","password":"Impossible123!","email":null,"phone":"9165178775","followers":160,"type":null,"following":1318,"owner":1}]

====Wed Apr 01 2020 12:27:05 ====
Socket {
  connecting: false,
  _hadError: false,
  _handle:
   TCP {
     reading: true,
     onread: [Function: onStreamRead],
     onconnection: null,
     _consumed: true,
     [Symbol(owner)]: [Circular] },
  _parent: null,
  _host: null,
  _readableState:
   ReadableState {
     objectMode: false,
     highWaterMark: 16384,
     buffer: BufferList { head: null, tail: null, length: 0 },
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: true,
     ended: false,
     endEmitted: false,
     reading: true,
     sync: false,
     needReadable: true,
     emittedReadable: false,
     readableListening: false,
     resumeScheduled: true,
     emitClose: false,
     destroyed: false,
     defaultEncoding: 'utf8',
     awaitDrain: 0,
     readingMore: false,
     decoder: null,
     encoding: null },
  readable: true,
  _events:
   [Object: null prototype] {
     end:
      [ [Function: onReadableStreamEnd],
        [Function: bound socketOnEnd] ],
     drain: [ [Function: ondrain], [Function: bound socketOnDrain] ],
     timeout: [Function: socketOnTimeout],
     data: [Function: bound socketOnData],
     error: [Function: socketOnError],
     close: [Function: bound socketOnClose],
     resume: [Function: onSocketResume],
     pause: [Function: onSocketPause] },
  _eventsCount: 8,
  _maxListeners: undefined,
  _writableState:
   WritableState {
     objectMode: false,
     highWaterMark: 16384,
     finalCalled: false,
     needDrain: false,
     ending: false,
     ended: false,
     finished: false,
     destroyed: false,
     decodeStrings: false,
     defaultEncoding: 'utf8',
     length: 0,
     writing: false,
     corked: 0,
     sync: true,
     bufferProcessing: false,
     onwrite: [Function: bound onwrite],
     writecb: null,
     writelen: 0,
     bufferedRequest: null,
     lastBufferedRequest: null,
     pendingcb: 0,
     prefinished: false,
     errorEmitted: false,
     emitClose: false,
     bufferedRequestCount: 0,
     corkedRequestsFree:
      { next: null,
        entry: null,
        finish: [Function: bound onCorkedFinish] } },
  writable: true,
  allowHalfOpen: true,
  _sockname: null,
  _pendingData: null,
  _pendingEncoding: '',
  server:
   Server {
     _events:
      [Object: null prototype] {
        request: [EventEmitter],
        connection: [Array],
        close: [Function],
        error: [Function],
        listening: [Function] },
     _eventsCount: 5,
     _maxListeners: undefined,
     _connections: 1,
     _handle:
      TCP {
        reading: false,
        onread: null,
        onconnection: [Function: onconnection],
        [Symbol(owner)]: [Circular] },
     _usingWorkers: false,
     _workers: [],
     _unref: false,
     allowHalfOpen: true,
     pauseOnConnect: false,
     httpAllowHalfOpen: false,
     timeout: 120000,
     keepAliveTimeout: 5000,
     _pendingResponseData: 0,
     maxHeadersCount: null,
     headersTimeout: 40000,
     _connectionKey: '6::::8090',
     [Symbol(IncomingMessage)]: { [Function: IncomingMessage] super_: [Function] },
     [Symbol(ServerResponse)]: { [Function: ServerResponse] super_: [Function] },
     [Symbol(asyncId)]: 7 },
  _server:
   Server {
     _events:
      [Object: null prototype] {
        request: [EventEmitter],
        connection: [Array],
        close: [Function],
        error: [Function],
        listening: [Function] },
     _eventsCount: 5,
     _maxListeners: undefined,
     _connections: 1,
     _handle:
      TCP {
        reading: false,
        onread: null,
        onconnection: [Function: onconnection],
        [Symbol(owner)]: [Circular] },
     _usingWorkers: false,
     _workers: [],
     _unref: false,
     allowHalfOpen: true,
     pauseOnConnect: false,
     httpAllowHalfOpen: false,
     timeout: 120000,
     keepAliveTimeout: 5000,
     _pendingResponseData: 0,
     maxHeadersCount: null,
     headersTimeout: 40000,
     _connectionKey: '6::::8090',
     [Symbol(IncomingMessage)]: { [Function: IncomingMessage] super_: [Function] },
     [Symbol(ServerResponse)]: { [Function: ServerResponse] super_: [Function] },
     [Symbol(asyncId)]: 7 },
  timeout: 120000,
  parser:
   HTTPParser {
     '0': [Function: parserOnHeaders],
     '1': [Function: parserOnHeadersComplete],
     '2': [Function: parserOnBody],
     '3': [Function: parserOnMessageComplete],
     '4': [Function: bound onParserExecute],
     _headers: [],
     _url: '',
     socket: [Circular],
     incoming: null,
     outgoing: null,
     maxHeaderPairs: 2000,
     _consumed: true,
     onIncoming: [Function: bound parserOnIncoming],
     parsingHeadersStart: 1585769225339,
     [Symbol(isReused)]: true },
  on: [Function: socketOnWrap],
  _paused: false,
  [Symbol(asyncId)]: 269,
  [Symbol(lastWriteQueueSize)]: 0,
  [Symbol(timeout)]:
   Timeout {
     _called: false,
     _idleTimeout: 120000,
     _idlePrev: [TimersList],
     _idleNext: [TimersList],
     _idleStart: 1937699,
     _onTimeout: [Function: bound ],
     _timerArgs: undefined,
     _repeat: null,
     _destroyed: false,
     [Symbol(unrefed)]: true,
     [Symbol(asyncId)]: 270,
     [Symbol(triggerId)]: 269 },
  [Symbol(kBytesRead)]: 0,
  [Symbol(kBytesWritten)]: 0 }

====Wed Apr 01 2020 12:27:05 ====
GET /accounts

====Wed Apr 01 2020 12:27:05 ====
RESPONSE [object Object],[object Object],[object Object],[object Object],[object Object]

====Wed Apr 01 2020 12:27:05 ====
RESPONSE [{"id":1,"username":"ProRobinHoodTr1","password":"Impossible123!!2","email":"jaledarely","phone":"9165178775","followers":786,"type":"promoImage","following":5001,"owner":1},{"id":2,"username":"StockJesus","password":"Impossible123","email":"robbrandon02","phone":"9165178775","followers":1262,"type":"promoText","following":5001,"owner":1},{"id":3,"username":"joo11244620","password":"Impossible123!!!","email":"abrahaminiguez06@gmail.com","phone":"9165178775","followers":660,"type":null,"following":5001,"owner":1},{"id":5,"username":"MarkZion19","password":"Impossible123!!","email":"teresainiguez12345","phone":"9165178775","followers":0,"type":null,"following":0,"owner":1},{"id":6,"username":"johnson_maximum","password":"Impossible123!","email":null,"phone":"9165178775","followers":160,"type":null,"following":1318,"owner":1}]

====Wed Apr 01 2020 12:28:47 ====
Socket {
  connecting: false,
  _hadError: false,
  _handle:
   TCP {
     reading: true,
     onread: [Function: onStreamRead],
     onconnection: null,
     _consumed: true,
     [Symbol(owner)]: [Circular] },
  _parent: null,
  _host: null,
  _readableState:
   ReadableState {
     objectMode: false,
     highWaterMark: 16384,
     buffer: BufferList { head: null, tail: null, length: 0 },
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: true,
     ended: false,
     endEmitted: false,
     reading: true,
     sync: false,
     needReadable: true,
     emittedReadable: false,
     readableListening: false,
     resumeScheduled: true,
     emitClose: false,
     destroyed: false,
     defaultEncoding: 'utf8',
     awaitDrain: 0,
     readingMore: false,
     decoder: null,
     encoding: null },
  readable: true,
  _events:
   [Object: null prototype] {
     end:
      [ [Function: onReadableStreamEnd],
        [Function: bound socketOnEnd] ],
     drain: [ [Function: ondrain], [Function: bound socketOnDrain] ],
     timeout: [Function: socketOnTimeout],
     data: [Function: bound socketOnData],
     error: [Function: socketOnError],
     close: [Function: bound socketOnClose],
     resume: [Function: onSocketResume],
     pause: [Function: onSocketPause] },
  _eventsCount: 8,
  _maxListeners: undefined,
  _writableState:
   WritableState {
     objectMode: false,
     highWaterMark: 16384,
     finalCalled: false,
     needDrain: false,
     ending: false,
     ended: false,
     finished: false,
     destroyed: false,
     decodeStrings: false,
     defaultEncoding: 'utf8',
     length: 0,
     writing: false,
     corked: 0,
     sync: true,
     bufferProcessing: false,
     onwrite: [Function: bound onwrite],
     writecb: null,
     writelen: 0,
     bufferedRequest: null,
     lastBufferedRequest: null,
     pendingcb: 0,
     prefinished: false,
     errorEmitted: false,
     emitClose: false,
     bufferedRequestCount: 0,
     corkedRequestsFree:
      { next: null,
        entry: null,
        finish: [Function: bound onCorkedFinish] } },
  writable: true,
  allowHalfOpen: true,
  _sockname: null,
  _pendingData: null,
  _pendingEncoding: '',
  server:
   Server {
     _events:
      [Object: null prototype] {
        request: [EventEmitter],
        connection: [Array],
        close: [Function],
        error: [Function],
        listening: [Function] },
     _eventsCount: 5,
     _maxListeners: undefined,
     _connections: 1,
     _handle:
      TCP {
        reading: false,
        onread: null,
        onconnection: [Function: onconnection],
        [Symbol(owner)]: [Circular] },
     _usingWorkers: false,
     _workers: [],
     _unref: false,
     allowHalfOpen: true,
     pauseOnConnect: false,
     httpAllowHalfOpen: false,
     timeout: 120000,
     keepAliveTimeout: 5000,
     _pendingResponseData: 0,
     maxHeadersCount: null,
     headersTimeout: 40000,
     _connectionKey: '6::::8090',
     [Symbol(IncomingMessage)]: { [Function: IncomingMessage] super_: [Function] },
     [Symbol(ServerResponse)]: { [Function: ServerResponse] super_: [Function] },
     [Symbol(asyncId)]: 7 },
  _server:
   Server {
     _events:
      [Object: null prototype] {
        request: [EventEmitter],
        connection: [Array],
        close: [Function],
        error: [Function],
        listening: [Function] },
     _eventsCount: 5,
     _maxListeners: undefined,
     _connections: 1,
     _handle:
      TCP {
        reading: false,
        onread: null,
        onconnection: [Function: onconnection],
        [Symbol(owner)]: [Circular] },
     _usingWorkers: false,
     _workers: [],
     _unref: false,
     allowHalfOpen: true,
     pauseOnConnect: false,
     httpAllowHalfOpen: false,
     timeout: 120000,
     keepAliveTimeout: 5000,
     _pendingResponseData: 0,
     maxHeadersCount: null,
     headersTimeout: 40000,
     _connectionKey: '6::::8090',
     [Symbol(IncomingMessage)]: { [Function: IncomingMessage] super_: [Function] },
     [Symbol(ServerResponse)]: { [Function: ServerResponse] super_: [Function] },
     [Symbol(asyncId)]: 7 },
  timeout: 120000,
  parser:
   HTTPParser {
     '0': [Function: parserOnHeaders],
     '1': [Function: parserOnHeadersComplete],
     '2': [Function: parserOnBody],
     '3': [Function: parserOnMessageComplete],
     '4': [Function: bound onParserExecute],
     _headers: [],
     _url: '',
     socket: [Circular],
     incoming: null,
     outgoing: null,
     maxHeaderPairs: 2000,
     _consumed: true,
     onIncoming: [Function: bound parserOnIncoming],
     parsingHeadersStart: 1585769327963,
     [Symbol(isReused)]: true },
  on: [Function: socketOnWrap],
  _paused: false,
  [Symbol(asyncId)]: 316,
  [Symbol(lastWriteQueueSize)]: 0,
  [Symbol(timeout)]:
   Timeout {
     _called: false,
     _idleTimeout: 120000,
     _idlePrev: [TimersList],
     _idleNext: [TimersList],
     _idleStart: 2040323,
     _onTimeout: [Function: bound ],
     _timerArgs: undefined,
     _repeat: null,
     _destroyed: false,
     [Symbol(unrefed)]: true,
     [Symbol(asyncId)]: 317,
     [Symbol(triggerId)]: 316 },
  [Symbol(kBytesRead)]: 0,
  [Symbol(kBytesWritten)]: 0 }

====Wed Apr 01 2020 12:28:47 ====
GET /accounts

====Wed Apr 01 2020 12:28:47 ====
RESPONSE [object Object],[object Object],[object Object],[object Object],[object Object]

====Wed Apr 01 2020 12:28:47 ====
RESPONSE [{"id":1,"username":"ProRobinHoodTr1","password":"Impossible123!!2","email":"jaledarely","phone":"9165178775","followers":786,"type":"promoImage","following":5003,"owner":1},{"id":2,"username":"StockJesus","password":"Impossible123","email":"robbrandon02","phone":"9165178775","followers":1262,"type":"promoText","following":5001,"owner":1},{"id":3,"username":"joo11244620","password":"Impossible123!!!","email":"abrahaminiguez06@gmail.com","phone":"9165178775","followers":660,"type":null,"following":5000,"owner":1},{"id":5,"username":"MarkZion19","password":"Impossible123!!","email":"teresainiguez12345","phone":"9165178775","followers":0,"type":null,"following":0,"owner":1},{"id":6,"username":"johnson_maximum","password":"Impossible123!","email":null,"phone":"9165178775","followers":160,"type":null,"following":1324,"owner":1}]

====Wed Apr 01 2020 12:28:49 ====
GET /accounts

====Wed Apr 01 2020 12:28:49 ====
RESPONSE [object Object],[object Object],[object Object],[object Object],[object Object]

====Wed Apr 01 2020 12:28:49 ====
RESPONSE [{"id":1,"username":"ProRobinHoodTr1","password":"Impossible123!!2","email":"jaledarely","phone":"9165178775","followers":786,"type":"promoImage","following":5003,"owner":1},{"id":2,"username":"StockJesus","password":"Impossible123","email":"robbrandon02","phone":"9165178775","followers":1262,"type":"promoText","following":5001,"owner":1},{"id":3,"username":"joo11244620","password":"Impossible123!!!","email":"abrahaminiguez06@gmail.com","phone":"9165178775","followers":660,"type":null,"following":5000,"owner":1},{"id":5,"username":"MarkZion19","password":"Impossible123!!","email":"teresainiguez12345","phone":"9165178775","followers":0,"type":null,"following":0,"owner":1},{"id":6,"username":"johnson_maximum","password":"Impossible123!","email":null,"phone":"9165178775","followers":160,"type":null,"following":1324,"owner":1}]

====Wed Apr 01 2020 12:28:56 ====
Socket {
  connecting: false,
  _hadError: false,
  _handle:
   TCP {
     reading: true,
     onread: [Function: onStreamRead],
     onconnection: null,
     _consumed: true,
     [Symbol(owner)]: [Circular] },
  _parent: null,
  _host: null,
  _readableState:
   ReadableState {
     objectMode: false,
     highWaterMark: 16384,
     buffer: BufferList { head: null, tail: null, length: 0 },
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: true,
     ended: false,
     endEmitted: false,
     reading: true,
     sync: false,
     needReadable: true,
     emittedReadable: false,
     readableListening: false,
     resumeScheduled: true,
     emitClose: false,
     destroyed: false,
     defaultEncoding: 'utf8',
     awaitDrain: 0,
     readingMore: false,
     decoder: null,
     encoding: null },
  readable: true,
  _events:
   [Object: null prototype] {
     end:
      [ [Function: onReadableStreamEnd],
        [Function: bound socketOnEnd] ],
     drain: [ [Function: ondrain], [Function: bound socketOnDrain] ],
     timeout: [Function: socketOnTimeout],
     data: [Function: bound socketOnData],
     error: [Function: socketOnError],
     close: [Function: bound socketOnClose],
     resume: [Function: onSocketResume],
     pause: [Function: onSocketPause] },
  _eventsCount: 8,
  _maxListeners: undefined,
  _writableState:
   WritableState {
     objectMode: false,
     highWaterMark: 16384,
     finalCalled: false,
     needDrain: false,
     ending: false,
     ended: false,
     finished: false,
     destroyed: false,
     decodeStrings: false,
     defaultEncoding: 'utf8',
     length: 0,
     writing: false,
     corked: 0,
     sync: true,
     bufferProcessing: false,
     onwrite: [Function: bound onwrite],
     writecb: null,
     writelen: 0,
     bufferedRequest: null,
     lastBufferedRequest: null,
     pendingcb: 0,
     prefinished: false,
     errorEmitted: false,
     emitClose: false,
     bufferedRequestCount: 0,
     corkedRequestsFree:
      { next: null,
        entry: null,
        finish: [Function: bound onCorkedFinish] } },
  writable: true,
  allowHalfOpen: true,
  _sockname: null,
  _pendingData: null,
  _pendingEncoding: '',
  server:
   Server {
     _events:
      [Object: null prototype] {
        request: [EventEmitter],
        connection: [Array],
        close: [Function],
        error: [Function],
        listening: [Function] },
     _eventsCount: 5,
     _maxListeners: undefined,
     _connections: 1,
     _handle:
      TCP {
        reading: false,
        onread: null,
        onconnection: [Function: onconnection],
        [Symbol(owner)]: [Circular] },
     _usingWorkers: false,
     _workers: [],
     _unref: false,
     allowHalfOpen: true,
     pauseOnConnect: false,
     httpAllowHalfOpen: false,
     timeout: 120000,
     keepAliveTimeout: 5000,
     _pendingResponseData: 0,
     maxHeadersCount: null,
     headersTimeout: 40000,
     _connectionKey: '6::::8090',
     [Symbol(IncomingMessage)]: { [Function: IncomingMessage] super_: [Function] },
     [Symbol(ServerResponse)]: { [Function: ServerResponse] super_: [Function] },
     [Symbol(asyncId)]: 7 },
  _server:
   Server {
     _events:
      [Object: null prototype] {
        request: [EventEmitter],
        connection: [Array],
        close: [Function],
        error: [Function],
        listening: [Function] },
     _eventsCount: 5,
     _maxListeners: undefined,
     _connections: 1,
     _handle:
      TCP {
        reading: false,
        onread: null,
        onconnection: [Function: onconnection],
        [Symbol(owner)]: [Circular] },
     _usingWorkers: false,
     _workers: [],
     _unref: false,
     allowHalfOpen: true,
     pauseOnConnect: false,
     httpAllowHalfOpen: false,
     timeout: 120000,
     keepAliveTimeout: 5000,
     _pendingResponseData: 0,
     maxHeadersCount: null,
     headersTimeout: 40000,
     _connectionKey: '6::::8090',
     [Symbol(IncomingMessage)]: { [Function: IncomingMessage] super_: [Function] },
     [Symbol(ServerResponse)]: { [Function: ServerResponse] super_: [Function] },
     [Symbol(asyncId)]: 7 },
  timeout: 120000,
  parser:
   HTTPParser {
     '0': [Function: parserOnHeaders],
     '1': [Function: parserOnHeadersComplete],
     '2': [Function: parserOnBody],
     '3': [Function: parserOnMessageComplete],
     '4': [Function: bound onParserExecute],
     _headers: [],
     _url: '',
     socket: [Circular],
     incoming: null,
     outgoing: null,
     maxHeaderPairs: 2000,
     _consumed: true,
     onIncoming: [Function: bound parserOnIncoming],
     parsingHeadersStart: 1585769336763,
     [Symbol(isReused)]: true },
  on: [Function: socketOnWrap],
  _paused: false,
  [Symbol(asyncId)]: 397,
  [Symbol(lastWriteQueueSize)]: 0,
  [Symbol(timeout)]:
   Timeout {
     _called: false,
     _idleTimeout: 120000,
     _idlePrev: [TimersList],
     _idleNext: [TimersList],
     _idleStart: 2049123,
     _onTimeout: [Function: bound ],
     _timerArgs: undefined,
     _repeat: null,
     _destroyed: false,
     [Symbol(unrefed)]: true,
     [Symbol(asyncId)]: 398,
     [Symbol(triggerId)]: 397 },
  [Symbol(kBytesRead)]: 0,
  [Symbol(kBytesWritten)]: 0 }

====Wed Apr 01 2020 12:28:56 ====
GET /accounts

====Wed Apr 01 2020 12:28:56 ====
RESPONSE [object Object],[object Object],[object Object],[object Object],[object Object]

====Wed Apr 01 2020 12:28:56 ====
RESPONSE [{"id":1,"username":"ProRobinHoodTr1","password":"Impossible123!!2","email":"jaledarely","phone":"9165178775","followers":786,"type":"promoImage","following":5003,"owner":1},{"id":2,"username":"StockJesus","password":"Impossible123","email":"robbrandon02","phone":"9165178775","followers":1262,"type":"promoText","following":5001,"owner":1},{"id":3,"username":"joo11244620","password":"Impossible123!!!","email":"abrahaminiguez06@gmail.com","phone":"9165178775","followers":660,"type":null,"following":5000,"owner":1},{"id":5,"username":"MarkZion19","password":"Impossible123!!","email":"teresainiguez12345","phone":"9165178775","followers":0,"type":null,"following":0,"owner":1},{"id":6,"username":"johnson_maximum","password":"Impossible123!","email":null,"phone":"9165178775","followers":160,"type":null,"following":1324,"owner":1}]

====Wed Apr 01 2020 12:56:18 ====
Socket {
  connecting: false,
  _hadError: false,
  _handle:
   TCP {
     reading: true,
     onread: [Function: onStreamRead],
     onconnection: null,
     _consumed: true,
     [Symbol(owner)]: [Circular] },
  _parent: null,
  _host: null,
  _readableState:
   ReadableState {
     objectMode: false,
     highWaterMark: 16384,
     buffer: BufferList { head: null, tail: null, length: 0 },
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: true,
     ended: false,
     endEmitted: false,
     reading: true,
     sync: false,
     needReadable: true,
     emittedReadable: false,
     readableListening: false,
     resumeScheduled: true,
     emitClose: false,
     destroyed: false,
     defaultEncoding: 'utf8',
     awaitDrain: 0,
     readingMore: false,
     decoder: null,
     encoding: null },
  readable: true,
  _events:
   [Object: null prototype] {
     end:
      [ [Function: onReadableStreamEnd],
        [Function: bound socketOnEnd] ],
     drain: [ [Function: ondrain], [Function: bound socketOnDrain] ],
     timeout: [Function: socketOnTimeout],
     data: [Function: bound socketOnData],
     error: [Function: socketOnError],
     close: [Function: bound socketOnClose],
     resume: [Function: onSocketResume],
     pause: [Function: onSocketPause] },
  _eventsCount: 8,
  _maxListeners: undefined,
  _writableState:
   WritableState {
     objectMode: false,
     highWaterMark: 16384,
     finalCalled: false,
     needDrain: false,
     ending: false,
     ended: false,
     finished: false,
     destroyed: false,
     decodeStrings: false,
     defaultEncoding: 'utf8',
     length: 0,
     writing: false,
     corked: 0,
     sync: true,
     bufferProcessing: false,
     onwrite: [Function: bound onwrite],
     writecb: null,
     writelen: 0,
     bufferedRequest: null,
     lastBufferedRequest: null,
     pendingcb: 0,
     prefinished: false,
     errorEmitted: false,
     emitClose: false,
     bufferedRequestCount: 0,
     corkedRequestsFree:
      { next: null,
        entry: null,
        finish: [Function: bound onCorkedFinish] } },
  writable: true,
  allowHalfOpen: true,
  _sockname: null,
  _pendingData: null,
  _pendingEncoding: '',
  server:
   Server {
     _events:
      [Object: null prototype] {
        request: [EventEmitter],
        connection: [Array],
        close: [Function],
        error: [Function],
        listening: [Function] },
     _eventsCount: 5,
     _maxListeners: undefined,
     _connections: 1,
     _handle:
      TCP {
        reading: false,
        onread: null,
        onconnection: [Function: onconnection],
        [Symbol(owner)]: [Circular] },
     _usingWorkers: false,
     _workers: [],
     _unref: false,
     allowHalfOpen: true,
     pauseOnConnect: false,
     httpAllowHalfOpen: false,
     timeout: 120000,
     keepAliveTimeout: 5000,
     _pendingResponseData: 0,
     maxHeadersCount: null,
     headersTimeout: 40000,
     _connectionKey: '6::::8090',
     [Symbol(IncomingMessage)]: { [Function: IncomingMessage] super_: [Function] },
     [Symbol(ServerResponse)]: { [Function: ServerResponse] super_: [Function] },
     [Symbol(asyncId)]: 7 },
  _server:
   Server {
     _events:
      [Object: null prototype] {
        request: [EventEmitter],
        connection: [Array],
        close: [Function],
        error: [Function],
        listening: [Function] },
     _eventsCount: 5,
     _maxListeners: undefined,
     _connections: 1,
     _handle:
      TCP {
        reading: false,
        onread: null,
        onconnection: [Function: onconnection],
        [Symbol(owner)]: [Circular] },
     _usingWorkers: false,
     _workers: [],
     _unref: false,
     allowHalfOpen: true,
     pauseOnConnect: false,
     httpAllowHalfOpen: false,
     timeout: 120000,
     keepAliveTimeout: 5000,
     _pendingResponseData: 0,
     maxHeadersCount: null,
     headersTimeout: 40000,
     _connectionKey: '6::::8090',
     [Symbol(IncomingMessage)]: { [Function: IncomingMessage] super_: [Function] },
     [Symbol(ServerResponse)]: { [Function: ServerResponse] super_: [Function] },
     [Symbol(asyncId)]: 7 },
  timeout: 120000,
  parser:
   HTTPParser {
     '0': [Function: parserOnHeaders],
     '1': [Function: parserOnHeadersComplete],
     '2': [Function: parserOnBody],
     '3': [Function: parserOnMessageComplete],
     '4': [Function: bound onParserExecute],
     _headers: [],
     _url: '',
     socket: [Circular],
     incoming: null,
     outgoing: null,
     maxHeaderPairs: 2000,
     _consumed: true,
     onIncoming: [Function: bound parserOnIncoming],
     parsingHeadersStart: 1585770978683,
     [Symbol(isReused)]: true },
  on: [Function: socketOnWrap],
  _paused: false,
  [Symbol(asyncId)]: 444,
  [Symbol(lastWriteQueueSize)]: 0,
  [Symbol(timeout)]:
   Timeout {
     _called: false,
     _idleTimeout: 120000,
     _idlePrev: [TimersList],
     _idleNext: [TimersList],
     _idleStart: 3691053,
     _onTimeout: [Function: bound ],
     _timerArgs: undefined,
     _repeat: null,
     _destroyed: false,
     [Symbol(unrefed)]: true,
     [Symbol(asyncId)]: 445,
     [Symbol(triggerId)]: 444 },
  [Symbol(kBytesRead)]: 0,
  [Symbol(kBytesWritten)]: 0 }

====Wed Apr 01 2020 12:56:18 ====
Socket {
  connecting: false,
  _hadError: false,
  _handle:
   TCP {
     reading: true,
     onread: [Function: onStreamRead],
     onconnection: null,
     _consumed: true,
     [Symbol(owner)]: [Circular] },
  _parent: null,
  _host: null,
  _readableState:
   ReadableState {
     objectMode: false,
     highWaterMark: 16384,
     buffer: BufferList { head: null, tail: null, length: 0 },
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: true,
     ended: false,
     endEmitted: false,
     reading: true,
     sync: false,
     needReadable: true,
     emittedReadable: false,
     readableListening: false,
     resumeScheduled: true,
     emitClose: false,
     destroyed: false,
     defaultEncoding: 'utf8',
     awaitDrain: 0,
     readingMore: false,
     decoder: null,
     encoding: null },
  readable: true,
  _events:
   [Object: null prototype] {
     end:
      [ [Function: onReadableStreamEnd],
        [Function: bound socketOnEnd] ],
     drain: [ [Function: ondrain], [Function: bound socketOnDrain] ],
     timeout: [Function: socketOnTimeout],
     data: [Function: bound socketOnData],
     error: [Function: socketOnError],
     close: [Function: bound socketOnClose],
     resume: [Function: onSocketResume],
     pause: [Function: onSocketPause] },
  _eventsCount: 8,
  _maxListeners: undefined,
  _writableState:
   WritableState {
     objectMode: false,
     highWaterMark: 16384,
     finalCalled: false,
     needDrain: false,
     ending: false,
     ended: false,
     finished: false,
     destroyed: false,
     decodeStrings: false,
     defaultEncoding: 'utf8',
     length: 0,
     writing: false,
     corked: 0,
     sync: true,
     bufferProcessing: false,
     onwrite: [Function: bound onwrite],
     writecb: null,
     writelen: 0,
     bufferedRequest: null,
     lastBufferedRequest: null,
     pendingcb: 0,
     prefinished: false,
     errorEmitted: false,
     emitClose: false,
     bufferedRequestCount: 0,
     corkedRequestsFree:
      { next: null,
        entry: null,
        finish: [Function: bound onCorkedFinish] } },
  writable: true,
  allowHalfOpen: true,
  _sockname: null,
  _pendingData: null,
  _pendingEncoding: '',
  server:
   Server {
     _events:
      [Object: null prototype] {
        request: [EventEmitter],
        connection: [Array],
        close: [Function],
        error: [Function],
        listening: [Function] },
     _eventsCount: 5,
     _maxListeners: undefined,
     _connections: 2,
     _handle:
      TCP {
        reading: false,
        onread: null,
        onconnection: [Function: onconnection],
        [Symbol(owner)]: [Circular] },
     _usingWorkers: false,
     _workers: [],
     _unref: false,
     allowHalfOpen: true,
     pauseOnConnect: false,
     httpAllowHalfOpen: false,
     timeout: 120000,
     keepAliveTimeout: 5000,
     _pendingResponseData: 0,
     maxHeadersCount: null,
     headersTimeout: 40000,
     _connectionKey: '6::::8090',
     [Symbol(IncomingMessage)]: { [Function: IncomingMessage] super_: [Function] },
     [Symbol(ServerResponse)]: { [Function: ServerResponse] super_: [Function] },
     [Symbol(asyncId)]: 7 },
  _server:
   Server {
     _events:
      [Object: null prototype] {
        request: [EventEmitter],
        connection: [Array],
        close: [Function],
        error: [Function],
        listening: [Function] },
     _eventsCount: 5,
     _maxListeners: undefined,
     _connections: 2,
     _handle:
      TCP {
        reading: false,
        onread: null,
        onconnection: [Function: onconnection],
        [Symbol(owner)]: [Circular] },
     _usingWorkers: false,
     _workers: [],
     _unref: false,
     allowHalfOpen: true,
     pauseOnConnect: false,
     httpAllowHalfOpen: false,
     timeout: 120000,
     keepAliveTimeout: 5000,
     _pendingResponseData: 0,
     maxHeadersCount: null,
     headersTimeout: 40000,
     _connectionKey: '6::::8090',
     [Symbol(IncomingMessage)]: { [Function: IncomingMessage] super_: [Function] },
     [Symbol(ServerResponse)]: { [Function: ServerResponse] super_: [Function] },
     [Symbol(asyncId)]: 7 },
  timeout: 120000,
  parser:
   HTTPParser {
     '0': [Function: parserOnHeaders],
     '1': [Function: parserOnHeadersComplete],
     '2': [Function: parserOnBody],
     '3': [Function: parserOnMessageComplete],
     '4': [Function: bound onParserExecute],
     _headers: [],
     _url: '',
     socket: [Circular],
     incoming: null,
     outgoing: null,
     maxHeaderPairs: 2000,
     _consumed: true,
     onIncoming: [Function: bound parserOnIncoming],
     parsingHeadersStart: 1585770978683,
     [Symbol(isReused)]: true },
  on: [Function: socketOnWrap],
  _paused: false,
  [Symbol(asyncId)]: 452,
  [Symbol(lastWriteQueueSize)]: 0,
  [Symbol(timeout)]:
   Timeout {
     _called: false,
     _idleTimeout: 120000,
     _idlePrev: [TimersList],
     _idleNext: [Timeout],
     _idleStart: 3691055,
     _onTimeout: [Function: bound ],
     _timerArgs: undefined,
     _repeat: null,
     _destroyed: false,
     [Symbol(unrefed)]: true,
     [Symbol(asyncId)]: 453,
     [Symbol(triggerId)]: 452 },
  [Symbol(kBytesRead)]: 0,
  [Symbol(kBytesWritten)]: 0 }

====Wed Apr 01 2020 12:56:22 ====
Socket {
  connecting: false,
  _hadError: false,
  _handle:
   TCP {
     reading: true,
     onread: [Function: onStreamRead],
     onconnection: null,
     _consumed: true,
     [Symbol(owner)]: [Circular] },
  _parent: null,
  _host: null,
  _readableState:
   ReadableState {
     objectMode: false,
     highWaterMark: 16384,
     buffer: BufferList { head: null, tail: null, length: 0 },
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: true,
     ended: false,
     endEmitted: false,
     reading: true,
     sync: false,
     needReadable: true,
     emittedReadable: false,
     readableListening: false,
     resumeScheduled: true,
     emitClose: false,
     destroyed: false,
     defaultEncoding: 'utf8',
     awaitDrain: 0,
     readingMore: false,
     decoder: null,
     encoding: null },
  readable: true,
  _events:
   [Object: null prototype] {
     end:
      [ [Function: onReadableStreamEnd],
        [Function: bound socketOnEnd] ],
     drain: [ [Function: ondrain], [Function: bound socketOnDrain] ],
     timeout: [Function: socketOnTimeout],
     data: [Function: bound socketOnData],
     error: [Function: socketOnError],
     close: [Function: bound socketOnClose],
     resume: [Function: onSocketResume],
     pause: [Function: onSocketPause] },
  _eventsCount: 8,
  _maxListeners: undefined,
  _writableState:
   WritableState {
     objectMode: false,
     highWaterMark: 16384,
     finalCalled: false,
     needDrain: false,
     ending: false,
     ended: false,
     finished: false,
     destroyed: false,
     decodeStrings: false,
     defaultEncoding: 'utf8',
     length: 0,
     writing: false,
     corked: 0,
     sync: true,
     bufferProcessing: false,
     onwrite: [Function: bound onwrite],
     writecb: null,
     writelen: 0,
     bufferedRequest: null,
     lastBufferedRequest: null,
     pendingcb: 0,
     prefinished: false,
     errorEmitted: false,
     emitClose: false,
     bufferedRequestCount: 0,
     corkedRequestsFree:
      { next: null,
        entry: null,
        finish: [Function: bound onCorkedFinish] } },
  writable: true,
  allowHalfOpen: true,
  _sockname: null,
  _pendingData: null,
  _pendingEncoding: '',
  server:
   Server {
     _events:
      [Object: null prototype] {
        request: [EventEmitter],
        connection: [Array],
        close: [Function],
        error: [Function],
        listening: [Function] },
     _eventsCount: 5,
     _maxListeners: undefined,
     _connections: 3,
     _handle:
      TCP {
        reading: false,
        onread: null,
        onconnection: [Function: onconnection],
        [Symbol(owner)]: [Circular] },
     _usingWorkers: false,
     _workers: [],
     _unref: false,
     allowHalfOpen: true,
     pauseOnConnect: false,
     httpAllowHalfOpen: false,
     timeout: 120000,
     keepAliveTimeout: 5000,
     _pendingResponseData: 0,
     maxHeadersCount: null,
     headersTimeout: 40000,
     _connectionKey: '6::::8090',
     [Symbol(IncomingMessage)]: { [Function: IncomingMessage] super_: [Function] },
     [Symbol(ServerResponse)]: { [Function: ServerResponse] super_: [Function] },
     [Symbol(asyncId)]: 7 },
  _server:
   Server {
     _events:
      [Object: null prototype] {
        request: [EventEmitter],
        connection: [Array],
        close: [Function],
        error: [Function],
        listening: [Function] },
     _eventsCount: 5,
     _maxListeners: undefined,
     _connections: 3,
     _handle:
      TCP {
        reading: false,
        onread: null,
        onconnection: [Function: onconnection],
        [Symbol(owner)]: [Circular] },
     _usingWorkers: false,
     _workers: [],
     _unref: false,
     allowHalfOpen: true,
     pauseOnConnect: false,
     httpAllowHalfOpen: false,
     timeout: 120000,
     keepAliveTimeout: 5000,
     _pendingResponseData: 0,
     maxHeadersCount: null,
     headersTimeout: 40000,
     _connectionKey: '6::::8090',
     [Symbol(IncomingMessage)]: { [Function: IncomingMessage] super_: [Function] },
     [Symbol(ServerResponse)]: { [Function: ServerResponse] super_: [Function] },
     [Symbol(asyncId)]: 7 },
  timeout: 120000,
  parser:
   HTTPParser {
     '0': [Function: parserOnHeaders],
     '1': [Function: parserOnHeadersComplete],
     '2': [Function: parserOnBody],
     '3': [Function: parserOnMessageComplete],
     '4': [Function: bound onParserExecute],
     _headers: [],
     _url: '',
     socket: [Circular],
     incoming: null,
     outgoing: null,
     maxHeaderPairs: 2000,
     _consumed: true,
     onIncoming: [Function: bound parserOnIncoming],
     parsingHeadersStart: 1585770982518,
     [Symbol(isReused)]: false },
  on: [Function: socketOnWrap],
  _paused: false,
  [Symbol(asyncId)]: 457,
  [Symbol(lastWriteQueueSize)]: 0,
  [Symbol(timeout)]:
   Timeout {
     _called: false,
     _idleTimeout: 120000,
     _idlePrev: [TimersList],
     _idleNext: [Timeout],
     _idleStart: 3694888,
     _onTimeout: [Function: bound ],
     _timerArgs: undefined,
     _repeat: null,
     _destroyed: false,
     [Symbol(unrefed)]: true,
     [Symbol(asyncId)]: 458,
     [Symbol(triggerId)]: 457 },
  [Symbol(kBytesRead)]: 0,
  [Symbol(kBytesWritten)]: 0 }

====Wed Apr 01 2020 12:56:22 ====
GET /accounts

====Wed Apr 01 2020 12:56:22 ====
RESPONSE [object Object],[object Object],[object Object],[object Object],[object Object]

====Wed Apr 01 2020 12:56:22 ====
RESPONSE [{"id":1,"username":"ProRobinHoodTr1","password":"Impossible123!!2","email":"jaledarely","phone":"9165178775","followers":786,"type":"promoImage","following":5003,"owner":1},{"id":2,"username":"StockJesus","password":"Impossible123","email":"robbrandon02","phone":"9165178775","followers":1262,"type":"promoText","following":5001,"owner":1},{"id":3,"username":"joo11244620","password":"Impossible123!!!","email":"abrahaminiguez06@gmail.com","phone":"9165178775","followers":660,"type":null,"following":5000,"owner":1},{"id":5,"username":"MarkZion19","password":"Impossible123!!","email":"teresainiguez12345","phone":"9165178775","followers":0,"type":null,"following":0,"owner":1},{"id":6,"username":"johnson_maximum","password":"Impossible123!","email":null,"phone":"9165178775","followers":160,"type":null,"following":1324,"owner":1}]

====Wed Apr 01 2020 14:40:19 ====
Socket {
  connecting: false,
  _hadError: false,
  _handle:
   TCP {
     reading: true,
     onread: [Function: onStreamRead],
     onconnection: null,
     _consumed: true,
     [Symbol(owner)]: [Circular] },
  _parent: null,
  _host: null,
  _readableState:
   ReadableState {
     objectMode: false,
     highWaterMark: 16384,
     buffer: BufferList { head: null, tail: null, length: 0 },
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: true,
     ended: false,
     endEmitted: false,
     reading: true,
     sync: false,
     needReadable: true,
     emittedReadable: false,
     readableListening: false,
     resumeScheduled: true,
     emitClose: false,
     destroyed: false,
     defaultEncoding: 'utf8',
     awaitDrain: 0,
     readingMore: false,
     decoder: null,
     encoding: null },
  readable: true,
  _events:
   [Object: null prototype] {
     end:
      [ [Function: onReadableStreamEnd],
        [Function: bound socketOnEnd] ],
     drain: [ [Function: ondrain], [Function: bound socketOnDrain] ],
     timeout: [Function: socketOnTimeout],
     data: [Function: bound socketOnData],
     error: [Function: socketOnError],
     close: [Function: bound socketOnClose],
     resume: [Function: onSocketResume],
     pause: [Function: onSocketPause] },
  _eventsCount: 8,
  _maxListeners: undefined,
  _writableState:
   WritableState {
     objectMode: false,
     highWaterMark: 16384,
     finalCalled: false,
     needDrain: false,
     ending: false,
     ended: false,
     finished: false,
     destroyed: false,
     decodeStrings: false,
     defaultEncoding: 'utf8',
     length: 0,
     writing: false,
     corked: 0,
     sync: true,
     bufferProcessing: false,
     onwrite: [Function: bound onwrite],
     writecb: null,
     writelen: 0,
     bufferedRequest: null,
     lastBufferedRequest: null,
     pendingcb: 0,
     prefinished: false,
     errorEmitted: false,
     emitClose: false,
     bufferedRequestCount: 0,
     corkedRequestsFree:
      { next: null,
        entry: null,
        finish: [Function: bound onCorkedFinish] } },
  writable: true,
  allowHalfOpen: true,
  _sockname: null,
  _pendingData: null,
  _pendingEncoding: '',
  server:
   Server {
     _events:
      [Object: null prototype] {
        request: [EventEmitter],
        connection: [Array],
        close: [Function],
        error: [Function],
        listening: [Function] },
     _eventsCount: 5,
     _maxListeners: undefined,
     _connections: 1,
     _handle:
      TCP {
        reading: false,
        onread: null,
        onconnection: [Function: onconnection],
        [Symbol(owner)]: [Circular] },
     _usingWorkers: false,
     _workers: [],
     _unref: false,
     allowHalfOpen: true,
     pauseOnConnect: false,
     httpAllowHalfOpen: false,
     timeout: 120000,
     keepAliveTimeout: 5000,
     _pendingResponseData: 0,
     maxHeadersCount: null,
     headersTimeout: 40000,
     _connectionKey: '6::::8090',
     [Symbol(IncomingMessage)]: { [Function: IncomingMessage] super_: [Function] },
     [Symbol(ServerResponse)]: { [Function: ServerResponse] super_: [Function] },
     [Symbol(asyncId)]: 7 },
  _server:
   Server {
     _events:
      [Object: null prototype] {
        request: [EventEmitter],
        connection: [Array],
        close: [Function],
        error: [Function],
        listening: [Function] },
     _eventsCount: 5,
     _maxListeners: undefined,
     _connections: 1,
     _handle:
      TCP {
        reading: false,
        onread: null,
        onconnection: [Function: onconnection],
        [Symbol(owner)]: [Circular] },
     _usingWorkers: false,
     _workers: [],
     _unref: false,
     allowHalfOpen: true,
     pauseOnConnect: false,
     httpAllowHalfOpen: false,
     timeout: 120000,
     keepAliveTimeout: 5000,
     _pendingResponseData: 0,
     maxHeadersCount: null,
     headersTimeout: 40000,
     _connectionKey: '6::::8090',
     [Symbol(IncomingMessage)]: { [Function: IncomingMessage] super_: [Function] },
     [Symbol(ServerResponse)]: { [Function: ServerResponse] super_: [Function] },
     [Symbol(asyncId)]: 7 },
  timeout: 120000,
  parser:
   HTTPParser {
     '0': [Function: parserOnHeaders],
     '1': [Function: parserOnHeadersComplete],
     '2': [Function: parserOnBody],
     '3': [Function: parserOnMessageComplete],
     '4': [Function: bound onParserExecute],
     _headers: [],
     _url: '',
     socket: [Circular],
     incoming: null,
     outgoing: null,
     maxHeaderPairs: 2000,
     _consumed: true,
     onIncoming: [Function: bound parserOnIncoming],
     parsingHeadersStart: 1585777219115,
     [Symbol(isReused)]: true },
  on: [Function: socketOnWrap],
  _paused: false,
  [Symbol(asyncId)]: 513,
  [Symbol(lastWriteQueueSize)]: 0,
  [Symbol(timeout)]:
   Timeout {
     _called: false,
     _idleTimeout: 120000,
     _idlePrev: [TimersList],
     _idleNext: [TimersList],
     _idleStart: 9931478,
     _onTimeout: [Function: bound ],
     _timerArgs: undefined,
     _repeat: null,
     _destroyed: false,
     [Symbol(unrefed)]: true,
     [Symbol(asyncId)]: 514,
     [Symbol(triggerId)]: 513 },
  [Symbol(kBytesRead)]: 0,
  [Symbol(kBytesWritten)]: 0 }

====Wed Apr 01 2020 14:40:19 ====
GET /accounts

====Wed Apr 01 2020 14:40:19 ====
RESPONSE [object Object],[object Object],[object Object],[object Object],[object Object]

====Wed Apr 01 2020 14:40:19 ====
RESPONSE [{"id":1,"username":"ProRobinHoodTr1","password":"Impossible123!!2","email":"jaledarely","phone":"9165178775","followers":786,"type":"promoImage","following":5003,"owner":1},{"id":2,"username":"StockJesus","password":"Impossible123","email":"robbrandon02","phone":"9165178775","followers":1262,"type":"promoText","following":5001,"owner":1},{"id":3,"username":"joo11244620","password":"Impossible123!!!","email":"abrahaminiguez06@gmail.com","phone":"9165178775","followers":660,"type":null,"following":5000,"owner":1},{"id":5,"username":"MarkZion19","password":"Impossible123!!","email":"teresainiguez12345","phone":"9165178775","followers":0,"type":null,"following":0,"owner":1},{"id":6,"username":"johnson_maximum","password":"Impossible123!","email":null,"phone":"9165178775","followers":160,"type":null,"following":1324,"owner":1}]

====Wed Apr 01 2020 15:19:35 ====
Socket {
  connecting: false,
  _hadError: false,
  _handle:
   TCP {
     reading: true,
     onread: [Function: onStreamRead],
     onconnection: null,
     _consumed: true,
     [Symbol(owner)]: [Circular] },
  _parent: null,
  _host: null,
  _readableState:
   ReadableState {
     objectMode: false,
     highWaterMark: 16384,
     buffer: BufferList { head: null, tail: null, length: 0 },
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: true,
     ended: false,
     endEmitted: false,
     reading: true,
     sync: false,
     needReadable: true,
     emittedReadable: false,
     readableListening: false,
     resumeScheduled: true,
     emitClose: false,
     destroyed: false,
     defaultEncoding: 'utf8',
     awaitDrain: 0,
     readingMore: false,
     decoder: null,
     encoding: null },
  readable: true,
  _events:
   [Object: null prototype] {
     end:
      [ [Function: onReadableStreamEnd],
        [Function: bound socketOnEnd] ],
     drain: [ [Function: ondrain], [Function: bound socketOnDrain] ],
     timeout: [Function: socketOnTimeout],
     data: [Function: bound socketOnData],
     error: [Function: socketOnError],
     close: [Function: bound socketOnClose],
     resume: [Function: onSocketResume],
     pause: [Function: onSocketPause] },
  _eventsCount: 8,
  _maxListeners: undefined,
  _writableState:
   WritableState {
     objectMode: false,
     highWaterMark: 16384,
     finalCalled: false,
     needDrain: false,
     ending: false,
     ended: false,
     finished: false,
     destroyed: false,
     decodeStrings: false,
     defaultEncoding: 'utf8',
     length: 0,
     writing: false,
     corked: 0,
     sync: true,
     bufferProcessing: false,
     onwrite: [Function: bound onwrite],
     writecb: null,
     writelen: 0,
     bufferedRequest: null,
     lastBufferedRequest: null,
     pendingcb: 0,
     prefinished: false,
     errorEmitted: false,
     emitClose: false,
     bufferedRequestCount: 0,
     corkedRequestsFree:
      { next: null,
        entry: null,
        finish: [Function: bound onCorkedFinish] } },
  writable: true,
  allowHalfOpen: true,
  _sockname: null,
  _pendingData: null,
  _pendingEncoding: '',
  server:
   Server {
     _events:
      [Object: null prototype] {
        request: [EventEmitter],
        connection: [Array],
        close: [Function],
        error: [Function],
        listening: [Function] },
     _eventsCount: 5,
     _maxListeners: undefined,
     _connections: 1,
     _handle:
      TCP {
        reading: false,
        onread: null,
        onconnection: [Function: onconnection],
        [Symbol(owner)]: [Circular] },
     _usingWorkers: false,
     _workers: [],
     _unref: false,
     allowHalfOpen: true,
     pauseOnConnect: false,
     httpAllowHalfOpen: false,
     timeout: 120000,
     keepAliveTimeout: 5000,
     _pendingResponseData: 0,
     maxHeadersCount: null,
     headersTimeout: 40000,
     _connectionKey: '6::::8090',
     [Symbol(IncomingMessage)]: { [Function: IncomingMessage] super_: [Function] },
     [Symbol(ServerResponse)]: { [Function: ServerResponse] super_: [Function] },
     [Symbol(asyncId)]: 7 },
  _server:
   Server {
     _events:
      [Object: null prototype] {
        request: [EventEmitter],
        connection: [Array],
        close: [Function],
        error: [Function],
        listening: [Function] },
     _eventsCount: 5,
     _maxListeners: undefined,
     _connections: 1,
     _handle:
      TCP {
        reading: false,
        onread: null,
        onconnection: [Function: onconnection],
        [Symbol(owner)]: [Circular] },
     _usingWorkers: false,
     _workers: [],
     _unref: false,
     allowHalfOpen: true,
     pauseOnConnect: false,
     httpAllowHalfOpen: false,
     timeout: 120000,
     keepAliveTimeout: 5000,
     _pendingResponseData: 0,
     maxHeadersCount: null,
     headersTimeout: 40000,
     _connectionKey: '6::::8090',
     [Symbol(IncomingMessage)]: { [Function: IncomingMessage] super_: [Function] },
     [Symbol(ServerResponse)]: { [Function: ServerResponse] super_: [Function] },
     [Symbol(asyncId)]: 7 },
  timeout: 120000,
  parser:
   HTTPParser {
     '0': [Function: parserOnHeaders],
     '1': [Function: parserOnHeadersComplete],
     '2': [Function: parserOnBody],
     '3': [Function: parserOnMessageComplete],
     '4': [Function: bound onParserExecute],
     _headers: [],
     _url: '',
     socket: [Circular],
     incoming: null,
     outgoing: null,
     maxHeaderPairs: 2000,
     _consumed: true,
     onIncoming: [Function: bound parserOnIncoming],
     parsingHeadersStart: 1585779575240,
     [Symbol(isReused)]: true },
  on: [Function: socketOnWrap],
  _paused: false,
  [Symbol(asyncId)]: 562,
  [Symbol(lastWriteQueueSize)]: 0,
  [Symbol(timeout)]:
   Timeout {
     _called: false,
     _idleTimeout: 120000,
     _idlePrev: [TimersList],
     _idleNext: [TimersList],
     _idleStart: 12287592,
     _onTimeout: [Function: bound ],
     _timerArgs: undefined,
     _repeat: null,
     _destroyed: false,
     [Symbol(unrefed)]: true,
     [Symbol(asyncId)]: 563,
     [Symbol(triggerId)]: 562 },
  [Symbol(kBytesRead)]: 0,
  [Symbol(kBytesWritten)]: 0 }

====Wed Apr 01 2020 15:19:35 ====
GET /accounts

====Wed Apr 01 2020 15:19:35 ====
RESPONSE [object Object],[object Object],[object Object],[object Object],[object Object]

====Wed Apr 01 2020 15:19:35 ====
RESPONSE [{"id":1,"username":"ProRobinHoodTr1","password":"Impossible123!!2","email":"jaledarely","phone":"9165178775","followers":786,"type":"promoImage","following":5003,"owner":1},{"id":2,"username":"StockJesus","password":"Impossible123","email":"robbrandon02","phone":"9165178775","followers":1262,"type":"promoText","following":5001,"owner":1},{"id":3,"username":"joo11244620","password":"Impossible123!!!","email":"abrahaminiguez06@gmail.com","phone":"9165178775","followers":660,"type":null,"following":5000,"owner":1},{"id":5,"username":"MarkZion19","password":"Impossible123!!","email":"teresainiguez12345","phone":"9165178775","followers":0,"type":null,"following":0,"owner":1},{"id":6,"username":"johnson_maximum","password":"Impossible123!","email":null,"phone":"9165178775","followers":160,"type":null,"following":1324,"owner":1}]

====Wed Apr 01 2020 15:27:10 ====
Socket {
  connecting: false,
  _hadError: false,
  _handle:
   TCP {
     reading: true,
     onread: [Function: onStreamRead],
     onconnection: null,
     _consumed: true,
     [Symbol(owner)]: [Circular] },
  _parent: null,
  _host: null,
  _readableState:
   ReadableState {
     objectMode: false,
     highWaterMark: 16384,
     buffer: BufferList { head: null, tail: null, length: 0 },
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: true,
     ended: false,
     endEmitted: false,
     reading: true,
     sync: false,
     needReadable: true,
     emittedReadable: false,
     readableListening: false,
     resumeScheduled: true,
     emitClose: false,
     destroyed: false,
     defaultEncoding: 'utf8',
     awaitDrain: 0,
     readingMore: false,
     decoder: null,
     encoding: null },
  readable: true,
  _events:
   [Object: null prototype] {
     end:
      [ [Function: onReadableStreamEnd],
        [Function: bound socketOnEnd] ],
     drain: [ [Function: ondrain], [Function: bound socketOnDrain] ],
     timeout: [Function: socketOnTimeout],
     data: [Function: bound socketOnData],
     error: [Function: socketOnError],
     close: [Function: bound socketOnClose],
     resume: [Function: onSocketResume],
     pause: [Function: onSocketPause] },
  _eventsCount: 8,
  _maxListeners: undefined,
  _writableState:
   WritableState {
     objectMode: false,
     highWaterMark: 16384,
     finalCalled: false,
     needDrain: false,
     ending: false,
     ended: false,
     finished: false,
     destroyed: false,
     decodeStrings: false,
     defaultEncoding: 'utf8',
     length: 0,
     writing: false,
     corked: 0,
     sync: true,
     bufferProcessing: false,
     onwrite: [Function: bound onwrite],
     writecb: null,
     writelen: 0,
     bufferedRequest: null,
     lastBufferedRequest: null,
     pendingcb: 0,
     prefinished: false,
     errorEmitted: false,
     emitClose: false,
     bufferedRequestCount: 0,
     corkedRequestsFree:
      { next: null,
        entry: null,
        finish: [Function: bound onCorkedFinish] } },
  writable: true,
  allowHalfOpen: true,
  _sockname: null,
  _pendingData: null,
  _pendingEncoding: '',
  server:
   Server {
     _events:
      [Object: null prototype] {
        request: [EventEmitter],
        connection: [Array],
        close: [Function],
        error: [Function],
        listening: [Function] },
     _eventsCount: 5,
     _maxListeners: undefined,
     _connections: 1,
     _handle:
      TCP {
        reading: false,
        onread: null,
        onconnection: [Function: onconnection],
        [Symbol(owner)]: [Circular] },
     _usingWorkers: false,
     _workers: [],
     _unref: false,
     allowHalfOpen: true,
     pauseOnConnect: false,
     httpAllowHalfOpen: false,
     timeout: 120000,
     keepAliveTimeout: 5000,
     _pendingResponseData: 0,
     maxHeadersCount: null,
     headersTimeout: 40000,
     _connectionKey: '6::::8090',
     [Symbol(IncomingMessage)]: { [Function: IncomingMessage] super_: [Function] },
     [Symbol(ServerResponse)]: { [Function: ServerResponse] super_: [Function] },
     [Symbol(asyncId)]: 7 },
  _server:
   Server {
     _events:
      [Object: null prototype] {
        request: [EventEmitter],
        connection: [Array],
        close: [Function],
        error: [Function],
        listening: [Function] },
     _eventsCount: 5,
     _maxListeners: undefined,
     _connections: 1,
     _handle:
      TCP {
        reading: false,
        onread: null,
        onconnection: [Function: onconnection],
        [Symbol(owner)]: [Circular] },
     _usingWorkers: false,
     _workers: [],
     _unref: false,
     allowHalfOpen: true,
     pauseOnConnect: false,
     httpAllowHalfOpen: false,
     timeout: 120000,
     keepAliveTimeout: 5000,
     _pendingResponseData: 0,
     maxHeadersCount: null,
     headersTimeout: 40000,
     _connectionKey: '6::::8090',
     [Symbol(IncomingMessage)]: { [Function: IncomingMessage] super_: [Function] },
     [Symbol(ServerResponse)]: { [Function: ServerResponse] super_: [Function] },
     [Symbol(asyncId)]: 7 },
  timeout: 120000,
  parser:
   HTTPParser {
     '0': [Function: parserOnHeaders],
     '1': [Function: parserOnHeadersComplete],
     '2': [Function: parserOnBody],
     '3': [Function: parserOnMessageComplete],
     '4': [Function: bound onParserExecute],
     _headers: [],
     _url: '',
     socket: [Circular],
     incoming: null,
     outgoing: null,
     maxHeaderPairs: 2000,
     _consumed: true,
     onIncoming: [Function: bound parserOnIncoming],
     parsingHeadersStart: 1585780030884,
     [Symbol(isReused)]: true },
  on: [Function: socketOnWrap],
  _paused: false,
  [Symbol(asyncId)]: 611,
  [Symbol(lastWriteQueueSize)]: 0,
  [Symbol(timeout)]:
   Timeout {
     _called: false,
     _idleTimeout: 120000,
     _idlePrev: [TimersList],
     _idleNext: [TimersList],
     _idleStart: 12743238,
     _onTimeout: [Function: bound ],
     _timerArgs: undefined,
     _repeat: null,
     _destroyed: false,
     [Symbol(unrefed)]: true,
     [Symbol(asyncId)]: 612,
     [Symbol(triggerId)]: 611 },
  [Symbol(kBytesRead)]: 0,
  [Symbol(kBytesWritten)]: 0 }

====Wed Apr 01 2020 15:27:10 ====
GET /accounts

====Wed Apr 01 2020 15:27:10 ====
RESPONSE [object Object],[object Object],[object Object],[object Object],[object Object]

====Wed Apr 01 2020 15:27:10 ====
RESPONSE [{"id":1,"username":"ProRobinHoodTr1","password":"Impossible123!!2","email":"jaledarely","phone":"9165178775","type":"promoImage","following":5003,"owner":1},{"id":2,"username":"StockJesus","password":"Impossible123","email":"robbrandon02","phone":"9165178775","type":"promoText","following":5001,"owner":1},{"id":3,"username":"joo11244620","password":"Impossible123!!!","email":"abrahaminiguez06@gmail.com","phone":"9165178775","type":null,"following":5000,"owner":1},{"id":5,"username":"MarkZion19","password":"Impossible123!!","email":"teresainiguez12345","phone":"9165178775","type":null,"following":0,"owner":1},{"id":6,"username":"johnson_maximum","password":"Impossible123!","email":null,"phone":"9165178775","type":null,"following":1324,"owner":1}]

====Wed Apr 01 2020 15:29:17 ====
Socket {
  connecting: false,
  _hadError: false,
  _handle:
   TCP {
     reading: true,
     onread: [Function: onStreamRead],
     onconnection: null,
     _consumed: true,
     [Symbol(owner)]: [Circular] },
  _parent: null,
  _host: null,
  _readableState:
   ReadableState {
     objectMode: false,
     highWaterMark: 16384,
     buffer: BufferList { head: null, tail: null, length: 0 },
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: true,
     ended: false,
     endEmitted: false,
     reading: true,
     sync: false,
     needReadable: true,
     emittedReadable: false,
     readableListening: false,
     resumeScheduled: true,
     emitClose: false,
     destroyed: false,
     defaultEncoding: 'utf8',
     awaitDrain: 0,
     readingMore: false,
     decoder: null,
     encoding: null },
  readable: true,
  _events:
   [Object: null prototype] {
     end:
      [ [Function: onReadableStreamEnd],
        [Function: bound socketOnEnd] ],
     drain: [ [Function: ondrain], [Function: bound socketOnDrain] ],
     timeout: [Function: socketOnTimeout],
     data: [Function: bound socketOnData],
     error: [Function: socketOnError],
     close: [Function: bound socketOnClose],
     resume: [Function: onSocketResume],
     pause: [Function: onSocketPause] },
  _eventsCount: 8,
  _maxListeners: undefined,
  _writableState:
   WritableState {
     objectMode: false,
     highWaterMark: 16384,
     finalCalled: false,
     needDrain: false,
     ending: false,
     ended: false,
     finished: false,
     destroyed: false,
     decodeStrings: false,
     defaultEncoding: 'utf8',
     length: 0,
     writing: false,
     corked: 0,
     sync: true,
     bufferProcessing: false,
     onwrite: [Function: bound onwrite],
     writecb: null,
     writelen: 0,
     bufferedRequest: null,
     lastBufferedRequest: null,
     pendingcb: 0,
     prefinished: false,
     errorEmitted: false,
     emitClose: false,
     bufferedRequestCount: 0,
     corkedRequestsFree:
      { next: null,
        entry: null,
        finish: [Function: bound onCorkedFinish] } },
  writable: true,
  allowHalfOpen: true,
  _sockname: null,
  _pendingData: null,
  _pendingEncoding: '',
  server:
   Server {
     _events:
      [Object: null prototype] {
        request: [EventEmitter],
        connection: [Array],
        close: [Function],
        error: [Function],
        listening: [Function] },
     _eventsCount: 5,
     _maxListeners: undefined,
     _connections: 1,
     _handle:
      TCP {
        reading: false,
        onread: null,
        onconnection: [Function: onconnection],
        [Symbol(owner)]: [Circular] },
     _usingWorkers: false,
     _workers: [],
     _unref: false,
     allowHalfOpen: true,
     pauseOnConnect: false,
     httpAllowHalfOpen: false,
     timeout: 120000,
     keepAliveTimeout: 5000,
     _pendingResponseData: 0,
     maxHeadersCount: null,
     headersTimeout: 40000,
     _connectionKey: '6::::8090',
     [Symbol(IncomingMessage)]: { [Function: IncomingMessage] super_: [Function] },
     [Symbol(ServerResponse)]: { [Function: ServerResponse] super_: [Function] },
     [Symbol(asyncId)]: 7 },
  _server:
   Server {
     _events:
      [Object: null prototype] {
        request: [EventEmitter],
        connection: [Array],
        close: [Function],
        error: [Function],
        listening: [Function] },
     _eventsCount: 5,
     _maxListeners: undefined,
     _connections: 1,
     _handle:
      TCP {
        reading: false,
        onread: null,
        onconnection: [Function: onconnection],
        [Symbol(owner)]: [Circular] },
     _usingWorkers: false,
     _workers: [],
     _unref: false,
     allowHalfOpen: true,
     pauseOnConnect: false,
     httpAllowHalfOpen: false,
     timeout: 120000,
     keepAliveTimeout: 5000,
     _pendingResponseData: 0,
     maxHeadersCount: null,
     headersTimeout: 40000,
     _connectionKey: '6::::8090',
     [Symbol(IncomingMessage)]: { [Function: IncomingMessage] super_: [Function] },
     [Symbol(ServerResponse)]: { [Function: ServerResponse] super_: [Function] },
     [Symbol(asyncId)]: 7 },
  timeout: 120000,
  parser:
   HTTPParser {
     '0': [Function: parserOnHeaders],
     '1': [Function: parserOnHeadersComplete],
     '2': [Function: parserOnBody],
     '3': [Function: parserOnMessageComplete],
     '4': [Function: bound onParserExecute],
     _headers: [],
     _url: '',
     socket: [Circular],
     incoming: null,
     outgoing: null,
     maxHeaderPairs: 2000,
     _consumed: true,
     onIncoming: [Function: bound parserOnIncoming],
     parsingHeadersStart: 1585780157566,
     [Symbol(isReused)]: true },
  on: [Function: socketOnWrap],
  _paused: false,
  [Symbol(asyncId)]: 661,
  [Symbol(lastWriteQueueSize)]: 0,
  [Symbol(timeout)]:
   Timeout {
     _called: false,
     _idleTimeout: 120000,
     _idlePrev: [TimersList],
     _idleNext: [TimersList],
     _idleStart: 12869921,
     _onTimeout: [Function: bound ],
     _timerArgs: undefined,
     _repeat: null,
     _destroyed: false,
     [Symbol(unrefed)]: true,
     [Symbol(asyncId)]: 662,
     [Symbol(triggerId)]: 661 },
  [Symbol(kBytesRead)]: 0,
  [Symbol(kBytesWritten)]: 0 }

====Wed Apr 01 2020 15:29:17 ====
GET /accounts

====Wed Apr 01 2020 15:29:17 ====
RESPONSE [object Object],[object Object],[object Object],[object Object],[object Object]

====Wed Apr 01 2020 15:29:17 ====
RESPONSE [{"id":1,"username":"ProRobinHoodTr1","password":"Impossible123!!2","email":"jaledarely","phone":"9165178775","type":"promoImage","following":5003,"owner":1},{"id":2,"username":"StockJesus","password":"Impossible123","email":"robbrandon02","phone":"9165178775","type":"promoText","following":5001,"owner":1},{"id":3,"username":"joo11244620","password":"Impossible123!!!","email":"abrahaminiguez06@gmail.com","phone":"9165178775","type":null,"following":5000,"owner":1},{"id":5,"username":"MarkZion19","password":"Impossible123!!","email":"teresainiguez12345","phone":"9165178775","type":null,"following":0,"owner":1},{"id":6,"username":"johnson_maximum","password":"Impossible123!","email":null,"phone":"9165178775","type":null,"following":1324,"owner":1}]
